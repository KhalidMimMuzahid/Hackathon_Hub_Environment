[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypedDict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "cast",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Type",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Type",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "cast",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "context",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "sqlalchemy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "engine_from_config",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "pool",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "LargeBinary",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "or_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "desc",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "or_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "desc",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "or_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "or_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Table",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "or_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "desc",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "desc",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "asc",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "os,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os.",
        "description": "os.",
        "detail": "os.",
        "documentation": {}
    },
    {
        "label": "fileConfig",
        "importPath": "logging.config",
        "description": "logging.config",
        "isExtraImport": true,
        "detail": "logging.config",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "init_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "app.database",
        "description": "app.database",
        "isExtraImport": true,
        "detail": "app.database",
        "documentation": {}
    },
    {
        "label": "Config",
        "importPath": "app.config",
        "description": "app.config",
        "isExtraImport": true,
        "detail": "app.config",
        "documentation": {}
    },
    {
        "label": "Config",
        "importPath": "app.config",
        "description": "app.config",
        "isExtraImport": true,
        "detail": "app.config",
        "documentation": {}
    },
    {
        "label": "Config",
        "importPath": "app.config",
        "description": "app.config",
        "isExtraImport": true,
        "detail": "app.config",
        "documentation": {}
    },
    {
        "label": "enum",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "enum",
        "description": "enum",
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Security",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Query",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Body",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Body",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Body",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Body",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Body",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Body",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Query",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "UploadFile",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPBearer",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "HTTPAuthorizationCredentials",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "urlparse",
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "isExtraImport": true,
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "quote_plus",
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "isExtraImport": true,
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "decode_access_token",
        "importPath": "app.utils.manage_auth",
        "description": "app.utils.manage_auth",
        "isExtraImport": true,
        "detail": "app.utils.manage_auth",
        "documentation": {}
    },
    {
        "label": "generate_passwd_hash",
        "importPath": "app.utils.manage_auth",
        "description": "app.utils.manage_auth",
        "isExtraImport": true,
        "detail": "app.utils.manage_auth",
        "documentation": {}
    },
    {
        "label": "verify_password",
        "importPath": "app.utils.manage_auth",
        "description": "app.utils.manage_auth",
        "isExtraImport": true,
        "detail": "app.utils.manage_auth",
        "documentation": {}
    },
    {
        "label": "create_access_token",
        "importPath": "app.utils.manage_auth",
        "description": "app.utils.manage_auth",
        "isExtraImport": true,
        "detail": "app.utils.manage_auth",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "ExceptionContent",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "HubException",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "ExceptionContent",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "HubException",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "ExceptionContent",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.models",
        "description": "app.exceptions.models",
        "isExtraImport": true,
        "detail": "app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "TAuth",
        "importPath": "app.common.types",
        "description": "app.common.types",
        "isExtraImport": true,
        "detail": "app.common.types",
        "documentation": {}
    },
    {
        "label": "UserRoleEnum",
        "importPath": "app.common.types",
        "description": "app.common.types",
        "isExtraImport": true,
        "detail": "app.common.types",
        "documentation": {}
    },
    {
        "label": "UserRoleEnum",
        "importPath": "app.common.types",
        "description": "app.common.types",
        "isExtraImport": true,
        "detail": "app.common.types",
        "documentation": {}
    },
    {
        "label": "TAuth",
        "importPath": "app.common.types",
        "description": "app.common.types",
        "isExtraImport": true,
        "detail": "app.common.types",
        "documentation": {}
    },
    {
        "label": "TAuth",
        "importPath": "app.common.types",
        "description": "app.common.types",
        "isExtraImport": true,
        "detail": "app.common.types",
        "documentation": {}
    },
    {
        "label": "TAuth",
        "importPath": "app.common.types",
        "description": "app.common.types",
        "isExtraImport": true,
        "detail": "app.common.types",
        "documentation": {}
    },
    {
        "label": "UserRoleEnum",
        "importPath": "app.common.types",
        "description": "app.common.types",
        "isExtraImport": true,
        "detail": "app.common.types",
        "documentation": {}
    },
    {
        "label": "TAuth",
        "importPath": "app.common.types",
        "description": "app.common.types",
        "isExtraImport": true,
        "detail": "app.common.types",
        "documentation": {}
    },
    {
        "label": "TAuth",
        "importPath": "app.common.types",
        "description": "app.common.types",
        "isExtraImport": true,
        "detail": "app.common.types",
        "documentation": {}
    },
    {
        "label": "UserRoleEnum",
        "importPath": "app.common.types",
        "description": "app.common.types",
        "isExtraImport": true,
        "detail": "app.common.types",
        "documentation": {}
    },
    {
        "label": "JSONResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "JSONResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "StreamingResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "ResponseValidationError",
        "importPath": "fastapi.exceptions",
        "description": "fastapi.exceptions",
        "isExtraImport": true,
        "detail": "fastapi.exceptions",
        "documentation": {}
    },
    {
        "label": "RequestValidationError",
        "importPath": "fastapi.exceptions",
        "description": "fastapi.exceptions",
        "isExtraImport": true,
        "detail": "fastapi.exceptions",
        "documentation": {}
    },
    {
        "label": "SQLAlchemyError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "SQLAlchemyError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "field_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "field_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "field_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "field_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "field_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "field_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "model_validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "strawberry",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "strawberry",
        "description": "strawberry",
        "detail": "strawberry",
        "documentation": {}
    },
    {
        "label": "app.modules.users.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "app.modules.users.models",
        "description": "app.modules.users.models",
        "isExtraImport": true,
        "detail": "app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "UserType",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "SignUpInput",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "SignInInput",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "SignUpResponse",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "SignInResponse",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "ProfileResponse",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "ErrorDetail",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "MetaData",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "UserData",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "UserProfileData",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "UserLoginData",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "SignUpResponse",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "SignInResponse",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "ProfileResponse",
        "importPath": "app.graphqlSchema.modules.users.types",
        "description": "app.graphqlSchema.modules.users.types",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "create_signup_response",
        "importPath": "app.graphqlSchema.response_handler",
        "description": "app.graphqlSchema.response_handler",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_signin_response",
        "importPath": "app.graphqlSchema.response_handler",
        "description": "app.graphqlSchema.response_handler",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_profile_response",
        "importPath": "app.graphqlSchema.response_handler",
        "description": "app.graphqlSchema.response_handler",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_error_response_for_signup",
        "importPath": "app.graphqlSchema.response_handler",
        "description": "app.graphqlSchema.response_handler",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_error_response_for_signin",
        "importPath": "app.graphqlSchema.response_handler",
        "description": "app.graphqlSchema.response_handler",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_error_response_for_profile",
        "importPath": "app.graphqlSchema.response_handler",
        "description": "app.graphqlSchema.response_handler",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_user",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "login_user",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "get_user_by_id",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "get_user_by_id",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "get_user_by_id",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "create_user",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "login_user",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "check_logged_in_status_service",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "change_username",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "update_user_profile",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "get_my_profile_service",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "check_username_availability",
        "importPath": "app.modules.users.services",
        "description": "app.modules.users.services",
        "isExtraImport": true,
        "detail": "app.modules.users.services",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "create_async_engine",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "schema",
        "importPath": "app.graphqlSchema.schema",
        "description": "app.graphqlSchema.schema",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.schema",
        "documentation": {}
    },
    {
        "label": "graphql_app",
        "importPath": "app.graphqlSchema.schema",
        "description": "app.graphqlSchema.schema",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.schema",
        "documentation": {}
    },
    {
        "label": "get_context",
        "importPath": "app.graphqlSchema.context",
        "description": "app.graphqlSchema.context",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.context",
        "documentation": {}
    },
    {
        "label": "get_context",
        "importPath": "app.graphqlSchema.context",
        "description": "app.graphqlSchema.context",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.context",
        "documentation": {}
    },
    {
        "label": "ExecutionResult",
        "importPath": "strawberry.types",
        "description": "strawberry.types",
        "isExtraImport": true,
        "detail": "strawberry.types",
        "documentation": {}
    },
    {
        "label": "Info",
        "importPath": "strawberry.types",
        "description": "strawberry.types",
        "isExtraImport": true,
        "detail": "strawberry.types",
        "documentation": {}
    },
    {
        "label": "BasePermission",
        "importPath": "strawberry.permission",
        "description": "strawberry.permission",
        "isExtraImport": true,
        "detail": "strawberry.permission",
        "documentation": {}
    },
    {
        "label": "GraphQLRouter",
        "importPath": "strawberry.fastapi",
        "description": "strawberry.fastapi",
        "isExtraImport": true,
        "detail": "strawberry.fastapi",
        "documentation": {}
    },
    {
        "label": "UserQuery",
        "importPath": "app.graphqlSchema.modules.users.resolvers",
        "description": "app.graphqlSchema.modules.users.resolvers",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.resolvers",
        "documentation": {}
    },
    {
        "label": "UserMutation",
        "importPath": "app.graphqlSchema.modules.users.resolvers",
        "description": "app.graphqlSchema.modules.users.resolvers",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.modules.users.resolvers",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "ARRAY",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "get_file_service",
        "importPath": "app.modules.files.services",
        "description": "app.modules.files.services",
        "isExtraImport": true,
        "detail": "app.modules.files.services",
        "documentation": {}
    },
    {
        "label": "upload_file",
        "importPath": "app.modules.files.services",
        "description": "app.modules.files.services",
        "isExtraImport": true,
        "detail": "app.modules.files.services",
        "documentation": {}
    },
    {
        "label": "upload_file",
        "importPath": "app.modules.files.services",
        "description": "app.modules.files.services",
        "isExtraImport": true,
        "detail": "app.modules.files.services",
        "documentation": {}
    },
    {
        "label": "upload_file",
        "importPath": "app.modules.files.services",
        "description": "app.modules.files.services",
        "isExtraImport": true,
        "detail": "app.modules.files.services",
        "documentation": {}
    },
    {
        "label": "upload_file",
        "importPath": "app.modules.files.services",
        "description": "app.modules.files.services",
        "isExtraImport": true,
        "detail": "app.modules.files.services",
        "documentation": {}
    },
    {
        "label": "upload_file",
        "importPath": "app.modules.files.services",
        "description": "app.modules.files.services",
        "isExtraImport": true,
        "detail": "app.modules.files.services",
        "documentation": {}
    },
    {
        "label": "upload_file",
        "importPath": "app.modules.files.services",
        "description": "app.modules.files.services",
        "isExtraImport": true,
        "detail": "app.modules.files.services",
        "documentation": {}
    },
    {
        "label": "upload_file",
        "importPath": "app.modules.files.services",
        "description": "app.modules.files.services",
        "isExtraImport": true,
        "detail": "app.modules.files.services",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "app.modules.files.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.files.models",
        "description": "app.modules.files.models",
        "detail": "app.modules.files.models",
        "documentation": {}
    },
    {
        "label": "File",
        "importPath": "app.modules.files.models",
        "description": "app.modules.files.models",
        "isExtraImport": true,
        "detail": "app.modules.files.models",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "selectinload",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "selectinload",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "DeclarativeMeta",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "DeclarativeMeta",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "joinedload",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "sessionmaker",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "sessionmaker",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "importPath": "app.utils.get_auth",
        "description": "app.utils.get_auth",
        "isExtraImport": true,
        "detail": "app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "MetaData",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "MetaData",
        "importPath": "app.responses.models",
        "description": "app.responses.models",
        "isExtraImport": true,
        "detail": "app.responses.models",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "create_response",
        "importPath": "app.responses.handler",
        "description": "app.responses.handler",
        "isExtraImport": true,
        "detail": "app.responses.handler",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "app.modules.users.relatedEntities.pointTransactions.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.users.relatedEntities.pointTransactions.models",
        "description": "app.modules.users.relatedEntities.pointTransactions.models",
        "detail": "app.modules.users.relatedEntities.pointTransactions.models",
        "documentation": {}
    },
    {
        "label": "PointTransaction",
        "importPath": "app.modules.users.relatedEntities.pointTransactions.models",
        "description": "app.modules.users.relatedEntities.pointTransactions.models",
        "isExtraImport": true,
        "detail": "app.modules.users.relatedEntities.pointTransactions.models",
        "documentation": {}
    },
    {
        "label": "TransactionType",
        "importPath": "app.modules.users.relatedEntities.pointTransactions.models",
        "description": "app.modules.users.relatedEntities.pointTransactions.models",
        "isExtraImport": true,
        "detail": "app.modules.users.relatedEntities.pointTransactions.models",
        "documentation": {}
    },
    {
        "label": "PointTransaction",
        "importPath": "app.modules.users.relatedEntities.pointTransactions.models",
        "description": "app.modules.users.relatedEntities.pointTransactions.models",
        "isExtraImport": true,
        "detail": "app.modules.users.relatedEntities.pointTransactions.models",
        "documentation": {}
    },
    {
        "label": "TransactionType",
        "importPath": "app.modules.users.relatedEntities.pointTransactions.models",
        "description": "app.modules.users.relatedEntities.pointTransactions.models",
        "isExtraImport": true,
        "detail": "app.modules.users.relatedEntities.pointTransactions.models",
        "documentation": {}
    },
    {
        "label": "TransactionStatus",
        "importPath": "app.modules.users.relatedEntities.pointTransactions.models",
        "description": "app.modules.users.relatedEntities.pointTransactions.models",
        "isExtraImport": true,
        "detail": "app.modules.users.relatedEntities.pointTransactions.models",
        "documentation": {}
    },
    {
        "label": "app.modules.submissions.submissionForProject.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.submissions.submissionForProject.models",
        "description": "app.modules.submissions.submissionForProject.models",
        "detail": "app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForProject",
        "importPath": "app.modules.submissions.submissionForProject.models",
        "description": "app.modules.submissions.submissionForProject.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForProject",
        "importPath": "app.modules.submissions.submissionForProject.models",
        "description": "app.modules.submissions.submissionForProject.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForProject",
        "importPath": "app.modules.submissions.submissionForProject.models",
        "description": "app.modules.submissions.submissionForProject.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForProject",
        "importPath": "app.modules.submissions.submissionForProject.models",
        "description": "app.modules.submissions.submissionForProject.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForProject",
        "importPath": "app.modules.submissions.submissionForProject.models",
        "description": "app.modules.submissions.submissionForProject.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForProject",
        "importPath": "app.modules.submissions.submissionForProject.models",
        "description": "app.modules.submissions.submissionForProject.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "SubmissionStatusEnum",
        "importPath": "app.modules.submissions.submissionForProject.models",
        "description": "app.modules.submissions.submissionForProject.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForProject",
        "importPath": "app.modules.submissions.submissionForProject.models",
        "description": "app.modules.submissions.submissionForProject.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "app.modules.projects.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "app.modules.projects.models",
        "description": "app.modules.projects.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "ProjectCategoryCreateResponse",
        "importPath": "app.modules.predefines.projectCategories.schemas",
        "description": "app.modules.predefines.projectCategories.schemas",
        "isExtraImport": true,
        "detail": "app.modules.predefines.projectCategories.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectCategoryCreateRequest",
        "importPath": "app.modules.predefines.projectCategories.schemas",
        "description": "app.modules.predefines.projectCategories.schemas",
        "isExtraImport": true,
        "detail": "app.modules.predefines.projectCategories.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectCategoryListResponse",
        "importPath": "app.modules.predefines.projectCategories.schemas",
        "description": "app.modules.predefines.projectCategories.schemas",
        "isExtraImport": true,
        "detail": "app.modules.predefines.projectCategories.schemas",
        "documentation": {}
    },
    {
        "label": "create_project_category",
        "importPath": "app.modules.predefines.projectCategories.services",
        "description": "app.modules.predefines.projectCategories.services",
        "isExtraImport": true,
        "detail": "app.modules.predefines.projectCategories.services",
        "documentation": {}
    },
    {
        "label": "list_project_categories",
        "importPath": "app.modules.predefines.projectCategories.services",
        "description": "app.modules.predefines.projectCategories.services",
        "isExtraImport": true,
        "detail": "app.modules.predefines.projectCategories.services",
        "documentation": {}
    },
    {
        "label": "check_user_access_api",
        "importPath": "app.utils.checkUserAccessApi",
        "description": "app.utils.checkUserAccessApi",
        "isExtraImport": true,
        "detail": "app.utils.checkUserAccessApi",
        "documentation": {}
    },
    {
        "label": "PredefinedProjectCategory",
        "importPath": "app.modules.predefines.projectCategories.models",
        "description": "app.modules.predefines.projectCategories.models",
        "isExtraImport": true,
        "detail": "app.modules.predefines.projectCategories.models",
        "documentation": {}
    },
    {
        "label": "PredefinedProjectCategory",
        "importPath": "app.modules.predefines.projectCategories.models",
        "description": "app.modules.predefines.projectCategories.models",
        "isExtraImport": true,
        "detail": "app.modules.predefines.projectCategories.models",
        "documentation": {}
    },
    {
        "label": "query_builder",
        "importPath": "app.utils.query_builder",
        "description": "app.utils.query_builder",
        "isExtraImport": true,
        "detail": "app.utils.query_builder",
        "documentation": {}
    },
    {
        "label": "query_builder",
        "importPath": "app.utils.query_builder",
        "description": "app.utils.query_builder",
        "isExtraImport": true,
        "detail": "app.utils.query_builder",
        "documentation": {}
    },
    {
        "label": "query_builder",
        "importPath": "app.utils.query_builder",
        "description": "app.utils.query_builder",
        "isExtraImport": true,
        "detail": "app.utils.query_builder",
        "documentation": {}
    },
    {
        "label": "query_builder",
        "importPath": "app.utils.query_builder",
        "description": "app.utils.query_builder",
        "isExtraImport": true,
        "detail": "app.utils.query_builder",
        "documentation": {}
    },
    {
        "label": "query_builder",
        "importPath": "app.utils.query_builder",
        "description": "app.utils.query_builder",
        "isExtraImport": true,
        "detail": "app.utils.query_builder",
        "documentation": {}
    },
    {
        "label": "query_builder",
        "importPath": "app.utils.query_builder",
        "description": "app.utils.query_builder",
        "isExtraImport": true,
        "detail": "app.utils.query_builder",
        "documentation": {}
    },
    {
        "label": "project_category_router",
        "importPath": "app.modules.predefines.projectCategories.routers",
        "description": "app.modules.predefines.projectCategories.routers",
        "isExtraImport": true,
        "detail": "app.modules.predefines.projectCategories.routers",
        "documentation": {}
    },
    {
        "label": "AchievementCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.achievements.schemas",
        "description": "app.modules.projects.relatedEntities.achievements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.achievements.schemas",
        "documentation": {}
    },
    {
        "label": "AchievementCreateResponse",
        "importPath": "app.modules.projects.relatedEntities.achievements.schemas",
        "description": "app.modules.projects.relatedEntities.achievements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.achievements.schemas",
        "documentation": {}
    },
    {
        "label": "AchievementGetResponse",
        "importPath": "app.modules.projects.relatedEntities.achievements.schemas",
        "description": "app.modules.projects.relatedEntities.achievements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.achievements.schemas",
        "documentation": {}
    },
    {
        "label": "AchievementCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.achievements.schemas",
        "description": "app.modules.projects.relatedEntities.achievements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.achievements.schemas",
        "documentation": {}
    },
    {
        "label": "create_achievement",
        "importPath": "app.modules.projects.relatedEntities.achievements.services",
        "description": "app.modules.projects.relatedEntities.achievements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.achievements.services",
        "documentation": {}
    },
    {
        "label": "list_achievements",
        "importPath": "app.modules.projects.relatedEntities.achievements.services",
        "description": "app.modules.projects.relatedEntities.achievements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.achievements.services",
        "documentation": {}
    },
    {
        "label": "update_achievement",
        "importPath": "app.modules.projects.relatedEntities.achievements.services",
        "description": "app.modules.projects.relatedEntities.achievements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.achievements.services",
        "documentation": {}
    },
    {
        "label": "app.modules.projects.relatedEntities.achievements.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.projects.relatedEntities.achievements.models",
        "description": "app.modules.projects.relatedEntities.achievements.models",
        "detail": "app.modules.projects.relatedEntities.achievements.models",
        "documentation": {}
    },
    {
        "label": "Achievement",
        "importPath": "app.modules.projects.relatedEntities.achievements.models",
        "description": "app.modules.projects.relatedEntities.achievements.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.achievements.models",
        "documentation": {}
    },
    {
        "label": "ArrangementCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.arrangements.schemas",
        "description": "app.modules.projects.relatedEntities.arrangements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.arrangements.schemas",
        "documentation": {}
    },
    {
        "label": "ArrangementCreateResponse",
        "importPath": "app.modules.projects.relatedEntities.arrangements.schemas",
        "description": "app.modules.projects.relatedEntities.arrangements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.arrangements.schemas",
        "documentation": {}
    },
    {
        "label": "ArrangementGetResponse",
        "importPath": "app.modules.projects.relatedEntities.arrangements.schemas",
        "description": "app.modules.projects.relatedEntities.arrangements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.arrangements.schemas",
        "documentation": {}
    },
    {
        "label": "ArrangementCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.arrangements.schemas",
        "description": "app.modules.projects.relatedEntities.arrangements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.arrangements.schemas",
        "documentation": {}
    },
    {
        "label": "create_arrangement",
        "importPath": "app.modules.projects.relatedEntities.arrangements.services",
        "description": "app.modules.projects.relatedEntities.arrangements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.arrangements.services",
        "documentation": {}
    },
    {
        "label": "get_arrangement",
        "importPath": "app.modules.projects.relatedEntities.arrangements.services",
        "description": "app.modules.projects.relatedEntities.arrangements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.arrangements.services",
        "documentation": {}
    },
    {
        "label": "update_arrangement",
        "importPath": "app.modules.projects.relatedEntities.arrangements.services",
        "description": "app.modules.projects.relatedEntities.arrangements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.arrangements.services",
        "documentation": {}
    },
    {
        "label": "app.modules.projects.relatedEntities.configurations.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.projects.relatedEntities.configurations.models",
        "description": "app.modules.projects.relatedEntities.configurations.models",
        "detail": "app.modules.projects.relatedEntities.configurations.models",
        "documentation": {}
    },
    {
        "label": "Configuration",
        "importPath": "app.modules.projects.relatedEntities.configurations.models",
        "description": "app.modules.projects.relatedEntities.configurations.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.configurations.models",
        "documentation": {}
    },
    {
        "label": "Configuration",
        "importPath": "app.modules.projects.relatedEntities.configurations.models",
        "description": "app.modules.projects.relatedEntities.configurations.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.configurations.models",
        "documentation": {}
    },
    {
        "label": "app.modules.projects.relatedEntities.arrangements.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.projects.relatedEntities.arrangements.models",
        "description": "app.modules.projects.relatedEntities.arrangements.models",
        "detail": "app.modules.projects.relatedEntities.arrangements.models",
        "documentation": {}
    },
    {
        "label": "Arrangement",
        "importPath": "app.modules.projects.relatedEntities.arrangements.models",
        "description": "app.modules.projects.relatedEntities.arrangements.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.arrangements.models",
        "documentation": {}
    },
    {
        "label": "ProjectConfigurationCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.configurations.schemas",
        "description": "app.modules.projects.relatedEntities.configurations.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.configurations.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectConfigurationCreateResponse",
        "importPath": "app.modules.projects.relatedEntities.configurations.schemas",
        "description": "app.modules.projects.relatedEntities.configurations.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.configurations.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectConfigurationGetResponse",
        "importPath": "app.modules.projects.relatedEntities.configurations.schemas",
        "description": "app.modules.projects.relatedEntities.configurations.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.configurations.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectConfigurationCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.configurations.schemas",
        "description": "app.modules.projects.relatedEntities.configurations.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.configurations.schemas",
        "documentation": {}
    },
    {
        "label": "create_project_configuration",
        "importPath": "app.modules.projects.relatedEntities.configurations.services",
        "description": "app.modules.projects.relatedEntities.configurations.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.configurations.services",
        "documentation": {}
    },
    {
        "label": "get_project_configuration",
        "importPath": "app.modules.projects.relatedEntities.configurations.services",
        "description": "app.modules.projects.relatedEntities.configurations.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.configurations.services",
        "documentation": {}
    },
    {
        "label": "update_project_configuration",
        "importPath": "app.modules.projects.relatedEntities.configurations.services",
        "description": "app.modules.projects.relatedEntities.configurations.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.configurations.services",
        "documentation": {}
    },
    {
        "label": "app.modules.projects.relatedEntities.modules.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.projects.relatedEntities.modules.models",
        "description": "app.modules.projects.relatedEntities.modules.models",
        "detail": "app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "app.modules.projects.relatedEntities.modules.models",
        "description": "app.modules.projects.relatedEntities.modules.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "app.modules.projects.relatedEntities.modules.models",
        "description": "app.modules.projects.relatedEntities.modules.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "app.modules.projects.relatedEntities.modules.models",
        "description": "app.modules.projects.relatedEntities.modules.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "app.modules.projects.relatedEntities.modules.models",
        "description": "app.modules.projects.relatedEntities.modules.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "app.modules.projects.relatedEntities.modules.models",
        "description": "app.modules.projects.relatedEntities.modules.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "app.modules.projects.relatedEntities.modules.models",
        "description": "app.modules.projects.relatedEntities.modules.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "app.modules.projects.relatedEntities.modules.models",
        "description": "app.modules.projects.relatedEntities.modules.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "app.modules.projects.relatedEntities.modules.models",
        "description": "app.modules.projects.relatedEntities.modules.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "app.modules.projects.relatedEntities.modules.models",
        "description": "app.modules.projects.relatedEntities.modules.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "app.modules.projects.relatedEntities.judges.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.projects.relatedEntities.judges.models",
        "description": "app.modules.projects.relatedEntities.judges.models",
        "detail": "app.modules.projects.relatedEntities.judges.models",
        "documentation": {}
    },
    {
        "label": "ProjectJudge",
        "importPath": "app.modules.projects.relatedEntities.judges.models",
        "description": "app.modules.projects.relatedEntities.judges.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.judges.models",
        "documentation": {}
    },
    {
        "label": "ProjectJudge",
        "importPath": "app.modules.projects.relatedEntities.judges.models",
        "description": "app.modules.projects.relatedEntities.judges.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.judges.models",
        "documentation": {}
    },
    {
        "label": "ProjectJudge",
        "importPath": "app.modules.projects.relatedEntities.judges.models",
        "description": "app.modules.projects.relatedEntities.judges.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.judges.models",
        "documentation": {}
    },
    {
        "label": "app.modules.submissions.submissionForModule.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.submissions.submissionForModule.models",
        "description": "app.modules.submissions.submissionForModule.models",
        "detail": "app.modules.submissions.submissionForModule.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForModule",
        "importPath": "app.modules.submissions.submissionForModule.models",
        "description": "app.modules.submissions.submissionForModule.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForModule.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForModule",
        "importPath": "app.modules.submissions.submissionForModule.models",
        "description": "app.modules.submissions.submissionForModule.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForModule.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForModule",
        "importPath": "app.modules.submissions.submissionForModule.models",
        "description": "app.modules.submissions.submissionForModule.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForModule.models",
        "documentation": {}
    },
    {
        "label": "SubmissionStatusEnum",
        "importPath": "app.modules.submissions.submissionForModule.models",
        "description": "app.modules.submissions.submissionForModule.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForModule.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForModule",
        "importPath": "app.modules.submissions.submissionForModule.models",
        "description": "app.modules.submissions.submissionForModule.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForModule.models",
        "documentation": {}
    },
    {
        "label": "app.modules.submissions.submissionForSubmittal.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.submissions.submissionForSubmittal.models",
        "description": "app.modules.submissions.submissionForSubmittal.models",
        "detail": "app.modules.submissions.submissionForSubmittal.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForSubmittal",
        "importPath": "app.modules.submissions.submissionForSubmittal.models",
        "description": "app.modules.submissions.submissionForSubmittal.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForSubmittal.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForSubmittal",
        "importPath": "app.modules.submissions.submissionForSubmittal.models",
        "description": "app.modules.submissions.submissionForSubmittal.models",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForSubmittal.models",
        "documentation": {}
    },
    {
        "label": "get_project_by_id",
        "importPath": "app.modules.projects.services",
        "description": "app.modules.projects.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.services",
        "documentation": {}
    },
    {
        "label": "create_project",
        "importPath": "app.modules.projects.services",
        "description": "app.modules.projects.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.services",
        "documentation": {}
    },
    {
        "label": "update_project",
        "importPath": "app.modules.projects.services",
        "description": "app.modules.projects.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.services",
        "documentation": {}
    },
    {
        "label": "get_project",
        "importPath": "app.modules.projects.services",
        "description": "app.modules.projects.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.services",
        "documentation": {}
    },
    {
        "label": "get_projects_list",
        "importPath": "app.modules.projects.services",
        "description": "app.modules.projects.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.services",
        "documentation": {}
    },
    {
        "label": "get_project_by_id",
        "importPath": "app.modules.projects.services",
        "description": "app.modules.projects.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.services",
        "documentation": {}
    },
    {
        "label": "create_requirement",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "documentation": {}
    },
    {
        "label": "update_requirement",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "documentation": {}
    },
    {
        "label": "get_requirement",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "documentation": {}
    },
    {
        "label": "list_requirements",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "documentation": {}
    },
    {
        "label": "delete_requirement",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.services",
        "documentation": {}
    },
    {
        "label": "RequirementCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "documentation": {}
    },
    {
        "label": "RequirementCreateResponse",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "documentation": {}
    },
    {
        "label": "RequirementGetResponse",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "documentation": {}
    },
    {
        "label": "RequirementUpdateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "documentation": {}
    },
    {
        "label": "RequirementCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "documentation": {}
    },
    {
        "label": "RequirementUpdateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "documentation": {}
    },
    {
        "label": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "documentation": {}
    },
    {
        "label": "Requirement",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "documentation": {}
    },
    {
        "label": "create_submittal",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "documentation": {}
    },
    {
        "label": "update_submittal",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "documentation": {}
    },
    {
        "label": "get_submittal",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "documentation": {}
    },
    {
        "label": "list_submittals",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "documentation": {}
    },
    {
        "label": "delete_submittal",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.services",
        "documentation": {}
    },
    {
        "label": "SubmittalCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalCreateResponse",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalGetResponse",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalUpdateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalUpdateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "documentation": {}
    },
    {
        "label": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "documentation": {}
    },
    {
        "label": "Submittal",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "documentation": {}
    },
    {
        "label": "Submittal",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "documentation": {}
    },
    {
        "label": "Submittal",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "documentation": {}
    },
    {
        "label": "Submittal",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "documentation": {}
    },
    {
        "label": "create_module",
        "importPath": "app.modules.projects.relatedEntities.modules.services",
        "description": "app.modules.projects.relatedEntities.modules.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.services",
        "documentation": {}
    },
    {
        "label": "update_module",
        "importPath": "app.modules.projects.relatedEntities.modules.services",
        "description": "app.modules.projects.relatedEntities.modules.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.services",
        "documentation": {}
    },
    {
        "label": "get_module",
        "importPath": "app.modules.projects.relatedEntities.modules.services",
        "description": "app.modules.projects.relatedEntities.modules.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.services",
        "documentation": {}
    },
    {
        "label": "list_modules",
        "importPath": "app.modules.projects.relatedEntities.modules.services",
        "description": "app.modules.projects.relatedEntities.modules.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.services",
        "documentation": {}
    },
    {
        "label": "delete_module",
        "importPath": "app.modules.projects.relatedEntities.modules.services",
        "description": "app.modules.projects.relatedEntities.modules.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.services",
        "documentation": {}
    },
    {
        "label": "ModuleCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.schemas",
        "description": "app.modules.projects.relatedEntities.modules.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleCreateResponse",
        "importPath": "app.modules.projects.relatedEntities.modules.schemas",
        "description": "app.modules.projects.relatedEntities.modules.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleGetResponse",
        "importPath": "app.modules.projects.relatedEntities.modules.schemas",
        "description": "app.modules.projects.relatedEntities.modules.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleUpdateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.schemas",
        "description": "app.modules.projects.relatedEntities.modules.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.schemas",
        "description": "app.modules.projects.relatedEntities.modules.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleUpdateRequest",
        "importPath": "app.modules.projects.relatedEntities.modules.schemas",
        "description": "app.modules.projects.relatedEntities.modules.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "requirement_router",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.routers",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.routers",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.requirements.routers",
        "documentation": {}
    },
    {
        "label": "submittal_router",
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.routers",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.routers",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.submittals.routers",
        "documentation": {}
    },
    {
        "label": "create_reward",
        "importPath": "app.modules.projects.relatedEntities.rewards.services",
        "description": "app.modules.projects.relatedEntities.rewards.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.rewards.services",
        "documentation": {}
    },
    {
        "label": "list_rewards",
        "importPath": "app.modules.projects.relatedEntities.rewards.services",
        "description": "app.modules.projects.relatedEntities.rewards.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.rewards.services",
        "documentation": {}
    },
    {
        "label": "update_reward",
        "importPath": "app.modules.projects.relatedEntities.rewards.services",
        "description": "app.modules.projects.relatedEntities.rewards.services",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.rewards.services",
        "documentation": {}
    },
    {
        "label": "RewardCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.rewards.schemas",
        "description": "app.modules.projects.relatedEntities.rewards.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.rewards.schemas",
        "documentation": {}
    },
    {
        "label": "RewardCreateResponse",
        "importPath": "app.modules.projects.relatedEntities.rewards.schemas",
        "description": "app.modules.projects.relatedEntities.rewards.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.rewards.schemas",
        "documentation": {}
    },
    {
        "label": "RewardGetResponse",
        "importPath": "app.modules.projects.relatedEntities.rewards.schemas",
        "description": "app.modules.projects.relatedEntities.rewards.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.rewards.schemas",
        "documentation": {}
    },
    {
        "label": "RewardCreateRequest",
        "importPath": "app.modules.projects.relatedEntities.rewards.schemas",
        "description": "app.modules.projects.relatedEntities.rewards.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.rewards.schemas",
        "documentation": {}
    },
    {
        "label": "app.modules.projects.relatedEntities.rewards.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.projects.relatedEntities.rewards.models",
        "description": "app.modules.projects.relatedEntities.rewards.models",
        "detail": "app.modules.projects.relatedEntities.rewards.models",
        "documentation": {}
    },
    {
        "label": "Reward",
        "importPath": "app.modules.projects.relatedEntities.rewards.models",
        "description": "app.modules.projects.relatedEntities.rewards.models",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.rewards.models",
        "documentation": {}
    },
    {
        "label": "ProjectPrivacy",
        "importPath": "app.modules.projects.schemas",
        "description": "app.modules.projects.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "DifficultyLevel",
        "importPath": "app.modules.projects.schemas",
        "description": "app.modules.projects.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectCreateResponse",
        "importPath": "app.modules.projects.schemas",
        "description": "app.modules.projects.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectUpdateResponse",
        "importPath": "app.modules.projects.schemas",
        "description": "app.modules.projects.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectGetResponse",
        "importPath": "app.modules.projects.schemas",
        "description": "app.modules.projects.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectsListResponse",
        "importPath": "app.modules.projects.schemas",
        "description": "app.modules.projects.schemas",
        "isExtraImport": true,
        "detail": "app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "projectConfiguration_router",
        "importPath": "app.modules.projects.relatedEntities.configurations.routers",
        "description": "app.modules.projects.relatedEntities.configurations.routers",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.configurations.routers",
        "documentation": {}
    },
    {
        "label": "arrangement_router",
        "importPath": "app.modules.projects.relatedEntities.arrangements.routers",
        "description": "app.modules.projects.relatedEntities.arrangements.routers",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.arrangements.routers",
        "documentation": {}
    },
    {
        "label": "achievement_router",
        "importPath": "app.modules.projects.relatedEntities.achievements.routers",
        "description": "app.modules.projects.relatedEntities.achievements.routers",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.achievements.routers",
        "documentation": {}
    },
    {
        "label": "reward_router",
        "importPath": "app.modules.projects.relatedEntities.rewards.routers",
        "description": "app.modules.projects.relatedEntities.rewards.routers",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.rewards.routers",
        "documentation": {}
    },
    {
        "label": "module_router",
        "importPath": "app.modules.projects.relatedEntities.modules.routers",
        "description": "app.modules.projects.relatedEntities.modules.routers",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.modules.routers",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "app.modules.leaderboard.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.leaderboard.models",
        "description": "app.modules.leaderboard.models",
        "detail": "app.modules.leaderboard.models",
        "documentation": {}
    },
    {
        "label": "LeaderboardEntry",
        "importPath": "app.modules.leaderboard.models",
        "description": "app.modules.leaderboard.models",
        "isExtraImport": true,
        "detail": "app.modules.leaderboard.models",
        "documentation": {}
    },
    {
        "label": "LeaderboardEntry",
        "importPath": "app.modules.leaderboard.models",
        "description": "app.modules.leaderboard.models",
        "isExtraImport": true,
        "detail": "app.modules.leaderboard.models",
        "documentation": {}
    },
    {
        "label": "UserCreateRequest",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserCreateResponse",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserLoggedInStatusResponse",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserLoginRequest",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserLogInResponse",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "ChangeUsernameRequest",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "ChangeUsernameResponse",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "ProfileUpdateRequest",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserProfileUpdateResponse",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "GetMyProfileResponse",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UsernameAvailabilityResponse",
        "importPath": "app.modules.users.schemas",
        "description": "app.modules.users.schemas",
        "isExtraImport": true,
        "detail": "app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "importPath": "app.exceptions.handler",
        "description": "app.exceptions.handler",
        "isExtraImport": true,
        "detail": "app.exceptions.handler",
        "documentation": {}
    },
    {
        "label": "register_all_errors",
        "importPath": "app.exceptions.handler",
        "description": "app.exceptions.handler",
        "isExtraImport": true,
        "detail": "app.exceptions.handler",
        "documentation": {}
    },
    {
        "label": "model_to_dict",
        "importPath": "app.utils.model_to_dict",
        "description": "app.utils.model_to_dict",
        "isExtraImport": true,
        "detail": "app.utils.model_to_dict",
        "documentation": {}
    },
    {
        "label": "model_to_dict",
        "importPath": "app.utils.model_to_dict",
        "description": "app.utils.model_to_dict",
        "isExtraImport": true,
        "detail": "app.utils.model_to_dict",
        "documentation": {}
    },
    {
        "label": "generate_unique_username",
        "importPath": "app.modules.users.utils",
        "description": "app.modules.users.utils",
        "isExtraImport": true,
        "detail": "app.modules.users.utils",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "user_router",
        "importPath": "app.modules.users.routers",
        "description": "app.modules.users.routers",
        "isExtraImport": true,
        "detail": "app.modules.users.routers",
        "documentation": {}
    },
    {
        "label": "file_router",
        "importPath": "app.modules.files.routers",
        "description": "app.modules.files.routers",
        "isExtraImport": true,
        "detail": "app.modules.files.routers",
        "documentation": {}
    },
    {
        "label": "predefine_router",
        "importPath": "app.modules.predefines.routers",
        "description": "app.modules.predefines.routers",
        "isExtraImport": true,
        "detail": "app.modules.predefines.routers",
        "documentation": {}
    },
    {
        "label": "project_router",
        "importPath": "app.modules.projects.routers",
        "description": "app.modules.projects.routers",
        "isExtraImport": true,
        "detail": "app.modules.projects.routers",
        "documentation": {}
    },
    {
        "label": "submission_for_project_router",
        "importPath": "app.modules.submissions.submissionForProject.routers",
        "description": "app.modules.submissions.submissionForProject.routers",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForProject.routers",
        "documentation": {}
    },
    {
        "label": "submission_for_module_router",
        "importPath": "app.modules.submissions.submissionForModule.routers",
        "description": "app.modules.submissions.submissionForModule.routers",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForModule.routers",
        "documentation": {}
    },
    {
        "label": "submission_for_submittal_router",
        "importPath": "app.modules.submissions.submissionForSubmittal.routers",
        "description": "app.modules.submissions.submissionForSubmittal.routers",
        "isExtraImport": true,
        "detail": "app.modules.submissions.submissionForSubmittal.routers",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "app.modules.projects.relatedEntities.judges.router",
        "description": "app.modules.projects.relatedEntities.judges.router",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.judges.router",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "app.modules.projects.relatedEntities.dashboard.router",
        "description": "app.modules.projects.relatedEntities.dashboard.router",
        "isExtraImport": true,
        "detail": "app.modules.projects.relatedEntities.dashboard.router",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "app.modules.scoring.router",
        "description": "app.modules.scoring.router",
        "isExtraImport": true,
        "detail": "app.modules.scoring.router",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "app.modules.users.relatedEntities.pointTransactions.router",
        "description": "app.modules.users.relatedEntities.pointTransactions.router",
        "isExtraImport": true,
        "detail": "app.modules.users.relatedEntities.pointTransactions.router",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "app.modules.leaderboard.router",
        "description": "app.modules.leaderboard.router",
        "isExtraImport": true,
        "detail": "app.modules.leaderboard.router",
        "documentation": {}
    },
    {
        "label": "jwt",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jwt",
        "description": "jwt",
        "detail": "jwt",
        "documentation": {}
    },
    {
        "label": "CryptContext",
        "importPath": "passlib.context",
        "description": "passlib.context",
        "isExtraImport": true,
        "detail": "passlib.context",
        "documentation": {}
    },
    {
        "label": "aiosmtplib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "aiosmtplib",
        "description": "aiosmtplib",
        "detail": "aiosmtplib",
        "documentation": {}
    },
    {
        "label": "EmailMessage",
        "importPath": "email.message",
        "description": "email.message",
        "isExtraImport": true,
        "detail": "email.message",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "BaseSettings",
        "importPath": "pydantic_settings",
        "description": "pydantic_settings",
        "isExtraImport": true,
        "detail": "pydantic_settings",
        "documentation": {}
    },
    {
        "label": "SettingsConfigDict",
        "importPath": "pydantic_settings",
        "description": "pydantic_settings",
        "isExtraImport": true,
        "detail": "pydantic_settings",
        "documentation": {}
    },
    {
        "label": "asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncio",
        "description": "asyncio",
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "asyncpg",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncpg",
        "description": "asyncpg",
        "detail": "asyncpg",
        "documentation": {}
    },
    {
        "label": "app.modules.projects.relatedEntities.modules.relatedEntities.standard.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "app.modules.projects.relatedEntities.modules.relatedEntities.standard.models",
        "description": "app.modules.projects.relatedEntities.modules.relatedEntities.standard.models",
        "detail": "app.modules.projects.relatedEntities.modules.relatedEntities.standard.models",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "app.routes.router",
        "description": "app.routes.router",
        "isExtraImport": true,
        "detail": "app.routes.router",
        "documentation": {}
    },
    {
        "label": "authenticate_user",
        "importPath": "app.dependencies.authenticate_user",
        "description": "app.dependencies.authenticate_user",
        "isExtraImport": true,
        "detail": "app.dependencies.authenticate_user",
        "documentation": {}
    },
    {
        "label": "custom_graphql_endpoint",
        "importPath": "app.graphqlSchema.custom_endpoint",
        "description": "app.graphqlSchema.custom_endpoint",
        "isExtraImport": true,
        "detail": "app.graphqlSchema.custom_endpoint",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "TestClient",
        "importPath": "fastapi.testclient",
        "description": "fastapi.testclient",
        "isExtraImport": true,
        "detail": "fastapi.testclient",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "app.main",
        "description": "app.main",
        "isExtraImport": true,
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "app.main",
        "description": "app.main",
        "isExtraImport": true,
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "app.main",
        "description": "app.main",
        "isExtraImport": true,
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "AsyncClient",
        "importPath": "httpx",
        "description": "httpx",
        "isExtraImport": true,
        "detail": "httpx",
        "documentation": {}
    },
    {
        "label": "AsyncClient",
        "importPath": "httpx",
        "description": "httpx",
        "isExtraImport": true,
        "detail": "httpx",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "_Known",
        "kind": 6,
        "importPath": "hub_nextjs.node_modules.flatted.python.flatted",
        "description": "hub_nextjs.node_modules.flatted.python.flatted",
        "peekOfCode": "class _Known:\n    def __init__(self):\n        self.key = []\n        self.value = []\nclass _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0",
        "detail": "hub_nextjs.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "_String",
        "kind": 6,
        "importPath": "hub_nextjs.node_modules.flatted.python.flatted",
        "description": "hub_nextjs.node_modules.flatted.python.flatted",
        "peekOfCode": "class _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0\n    for _ in value:\n        keys.append(i)\n        i += 1\n    return keys",
        "detail": "hub_nextjs.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "kind": 2,
        "importPath": "hub_nextjs.node_modules.flatted.python.flatted",
        "description": "hub_nextjs.node_modules.flatted.python.flatted",
        "peekOfCode": "def parse(value, *args, **kwargs):\n    json = _json.loads(value, *args, **kwargs)\n    wrapped = []\n    for value in json:\n        wrapped.append(_wrap(value))\n    input = []\n    for value in wrapped:\n        if isinstance(value, _String):\n            input.append(value.value)\n        else:",
        "detail": "hub_nextjs.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "hub_nextjs.node_modules.flatted.python.flatted",
        "description": "hub_nextjs.node_modules.flatted.python.flatted",
        "peekOfCode": "def stringify(value, *args, **kwargs):\n    known = _Known()\n    input = []\n    output = []\n    i = int(_index(known, input, value))\n    while i < len(input):\n        output.append(_transform(known, input, input[i]))\n        i += 1\n    return _json.dumps(output, *args, **kwargs)",
        "detail": "hub_nextjs.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.04c91c9b5451_",
        "description": "onchain_fastapi.alembic.versions.04c91c9b5451_",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "onchain_fastapi.alembic.versions.04c91c9b5451_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.04c91c9b5451_",
        "description": "onchain_fastapi.alembic.versions.04c91c9b5451_",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "onchain_fastapi.alembic.versions.04c91c9b5451_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.2a688fccd9e9_sync_all_project_user_models",
        "description": "onchain_fastapi.alembic.versions.2a688fccd9e9_sync_all_project_user_models",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "onchain_fastapi.alembic.versions.2a688fccd9e9_sync_all_project_user_models",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.2a688fccd9e9_sync_all_project_user_models",
        "description": "onchain_fastapi.alembic.versions.2a688fccd9e9_sync_all_project_user_models",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "onchain_fastapi.alembic.versions.2a688fccd9e9_sync_all_project_user_models",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.39ed850f3f5f_",
        "description": "onchain_fastapi.alembic.versions.39ed850f3f5f_",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "onchain_fastapi.alembic.versions.39ed850f3f5f_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.39ed850f3f5f_",
        "description": "onchain_fastapi.alembic.versions.39ed850f3f5f_",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "onchain_fastapi.alembic.versions.39ed850f3f5f_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.3e4ea6a0963b_change_datetime_columns_to_timestamp_",
        "description": "onchain_fastapi.alembic.versions.3e4ea6a0963b_change_datetime_columns_to_timestamp_",
        "peekOfCode": "def upgrade():\n    op.alter_column('arrangements', 'eventStartsOn',\n        type_='TIMESTAMP WITH TIME ZONE',\n        existing_type='TIMESTAMP WITHOUT TIME ZONE'\n    )\n    op.alter_column('arrangements', 'eventEndsOn',\n        type_='TIMESTAMP WITH TIME ZONE',\n        existing_type='TIMESTAMP WITHOUT TIME ZONE'\n    )\n    op.alter_column('arrangements', 'publishedOn',",
        "detail": "onchain_fastapi.alembic.versions.3e4ea6a0963b_change_datetime_columns_to_timestamp_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.3e4ea6a0963b_change_datetime_columns_to_timestamp_",
        "description": "onchain_fastapi.alembic.versions.3e4ea6a0963b_change_datetime_columns_to_timestamp_",
        "peekOfCode": "def downgrade():\n    op.alter_column('arrangements', 'eventStartsOn',\n        type_='TIMESTAMP WITHOUT TIME ZONE',\n        existing_type='TIMESTAMP WITH TIME ZONE'\n    )\n    op.alter_column('arrangements', 'eventEndsOn',\n        type_='TIMESTAMP WITHOUT TIME ZONE',\n        existing_type='TIMESTAMP WITH TIME ZONE'\n    )\n    op.alter_column('arrangements', 'publishedOn',",
        "detail": "onchain_fastapi.alembic.versions.3e4ea6a0963b_change_datetime_columns_to_timestamp_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.684b62eb6bd1_remove_text_link_file_columns_from_",
        "description": "onchain_fastapi.alembic.versions.684b62eb6bd1_remove_text_link_file_columns_from_",
        "peekOfCode": "def upgrade() -> None:\n    # Remove text, link, file columns from submittals table\n    op.drop_column('submittals', 'text')\n    op.drop_column('submittals', 'link')\n    op.drop_column('submittals', 'file')\n    op.drop_column('submittals', 'type')\ndef downgrade() -> None:\n    # Add back text, link, file columns to submittals table\n    op.add_column('submittals', sa.Column('text', sa.String(), nullable=True))\n    op.add_column('submittals', sa.Column('link', sa.String(), nullable=True))",
        "detail": "onchain_fastapi.alembic.versions.684b62eb6bd1_remove_text_link_file_columns_from_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.684b62eb6bd1_remove_text_link_file_columns_from_",
        "description": "onchain_fastapi.alembic.versions.684b62eb6bd1_remove_text_link_file_columns_from_",
        "peekOfCode": "def downgrade() -> None:\n    # Add back text, link, file columns to submittals table\n    op.add_column('submittals', sa.Column('text', sa.String(), nullable=True))\n    op.add_column('submittals', sa.Column('link', sa.String(), nullable=True))\n    op.add_column('submittals', sa.Column('file', sa.String(), nullable=True))\n    op.add_column('submittals', sa.Column('type', sa.Enum('text', 'link', 'file', name='submittaltype'), nullable=False))",
        "detail": "onchain_fastapi.alembic.versions.684b62eb6bd1_remove_text_link_file_columns_from_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.d4d8d3124f3f_add_judge_panel_point_transactions_and_",
        "description": "onchain_fastapi.alembic.versions.d4d8d3124f3f_add_judge_panel_point_transactions_and_",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_table('predefinedProjectCategories')\n    op.alter_column('arrangements', 'eventStartsOn',\n               existing_type=postgresql.TIMESTAMP(),\n               type_=sa.DateTime(timezone=True),\n               existing_nullable=True)\n    op.alter_column('arrangements', 'eventEndsOn',\n               existing_type=postgresql.TIMESTAMP(),\n               type_=sa.DateTime(timezone=True),",
        "detail": "onchain_fastapi.alembic.versions.d4d8d3124f3f_add_judge_panel_point_transactions_and_",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.d4d8d3124f3f_add_judge_panel_point_transactions_and_",
        "description": "onchain_fastapi.alembic.versions.d4d8d3124f3f_add_judge_panel_point_transactions_and_",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    # Convert back to VARCHAR\n    op.execute(\"ALTER TABLE submittals ALTER COLUMN type TYPE VARCHAR USING type::text\")\n    # Drop the enum type\n    op.execute(\"DROP TYPE IF EXISTS submittaltype\")\n    op.alter_column('arrangements', 'expiredOn',\n               existing_type=sa.DateTime(timezone=True),\n               type_=postgresql.TIMESTAMP(),\n               existing_nullable=True)",
        "detail": "onchain_fastapi.alembic.versions.d4d8d3124f3f_add_judge_panel_point_transactions_and_",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.ed09a73e5130_sync_all_project_user_models",
        "description": "onchain_fastapi.alembic.versions.ed09a73e5130_sync_all_project_user_models",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('projects',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('title', sa.String(length=255), nullable=False),\n    sa.Column('description', sa.Text(), nullable=False),\n    sa.Column('photoUrl', sa.String(length=255), nullable=True),\n    sa.Column('category', sa.String(length=100), nullable=False),\n    sa.Column('supportEmail', sa.String(length=100), nullable=False),\n    sa.Column('privacy', sa.Enum('public', 'private', name='projectprivacy'), nullable=False),",
        "detail": "onchain_fastapi.alembic.versions.ed09a73e5130_sync_all_project_user_models",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.versions.ed09a73e5130_sync_all_project_user_models",
        "description": "onchain_fastapi.alembic.versions.ed09a73e5130_sync_all_project_user_models",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_index(op.f('ix_submittals_id'), table_name='submittals')\n    op.drop_table('submittals')\n    op.drop_index(op.f('ix_standards_id'), table_name='standards')\n    op.drop_table('standards')\n    op.drop_index(op.f('ix_requirements_id'), table_name='requirements')\n    op.drop_table('requirements')\n    op.drop_index(op.f('ix_achievements_id'), table_name='achievements')\n    op.drop_table('achievements')",
        "detail": "onchain_fastapi.alembic.versions.ed09a73e5130_sync_all_project_user_models",
        "documentation": {}
    },
    {
        "label": "run_migrations_offline",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.env",
        "description": "onchain_fastapi.alembic.env",
        "peekOfCode": "def run_migrations_offline():\n    url = config.get_main_option(\"sqlalchemy.url\")\n    context.configure(\n        url=url, target_metadata=target_metadata,\n        literal_binds=True, dialect_opts={\"paramstyle\": \"named\"}\n    )\n    with context.begin_transaction():\n        context.run_migrations()\ndef run_migrations_online():\n    connectable = engine_from_config(",
        "detail": "onchain_fastapi.alembic.env",
        "documentation": {}
    },
    {
        "label": "run_migrations_online",
        "kind": 2,
        "importPath": "onchain_fastapi.alembic.env",
        "description": "onchain_fastapi.alembic.env",
        "peekOfCode": "def run_migrations_online():\n    connectable = engine_from_config(\n        config.get_section(config.config_ini_section),\n        prefix=\"sqlalchemy.\", poolclass=pool.NullPool\n    )\n    with connectable.connect() as conn:\n        context.configure(connection=conn, target_metadata=target_metadata)\n        with context.begin_transaction():\n            context.run_migrations()\nif context.is_offline_mode():",
        "detail": "onchain_fastapi.alembic.env",
        "documentation": {}
    },
    {
        "label": "sync_url",
        "kind": 5,
        "importPath": "onchain_fastapi.alembic.env",
        "description": "onchain_fastapi.alembic.env",
        "peekOfCode": "sync_url = f\"postgresql://{Config.DB_USER}:{Config.DB_PASS}@{Config.DB_HOST}:{Config.DB_PORT}/{Config.DB_NAME}\"\nconfig = context.config\nconfig.set_main_option(\"sqlalchemy.url\", sync_url)\n# logging\nif config.config_file_name is not None:\n    fileConfig(config.config_file_name)\ntarget_metadata = Base.metadata\ndef run_migrations_offline():\n    url = config.get_main_option(\"sqlalchemy.url\")\n    context.configure(",
        "detail": "onchain_fastapi.alembic.env",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 5,
        "importPath": "onchain_fastapi.alembic.env",
        "description": "onchain_fastapi.alembic.env",
        "peekOfCode": "config = context.config\nconfig.set_main_option(\"sqlalchemy.url\", sync_url)\n# logging\nif config.config_file_name is not None:\n    fileConfig(config.config_file_name)\ntarget_metadata = Base.metadata\ndef run_migrations_offline():\n    url = config.get_main_option(\"sqlalchemy.url\")\n    context.configure(\n        url=url, target_metadata=target_metadata,",
        "detail": "onchain_fastapi.alembic.env",
        "documentation": {}
    },
    {
        "label": "target_metadata",
        "kind": 5,
        "importPath": "onchain_fastapi.alembic.env",
        "description": "onchain_fastapi.alembic.env",
        "peekOfCode": "target_metadata = Base.metadata\ndef run_migrations_offline():\n    url = config.get_main_option(\"sqlalchemy.url\")\n    context.configure(\n        url=url, target_metadata=target_metadata,\n        literal_binds=True, dialect_opts={\"paramstyle\": \"named\"}\n    )\n    with context.begin_transaction():\n        context.run_migrations()\ndef run_migrations_online():",
        "detail": "onchain_fastapi.alembic.env",
        "documentation": {}
    },
    {
        "label": "UserRoleEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.common.types",
        "description": "onchain_fastapi.app.common.types",
        "peekOfCode": "class UserRoleEnum(str, Enum):\n    admin = \"admin\"\n    user = \"user\"\n    moderator = \"moderator\"\n# Define a strict dictionary type using TypedDict\nclass TAuth(TypedDict):\n    phone: str\n    id: str\n    role: UserRoleEnum",
        "detail": "onchain_fastapi.app.common.types",
        "documentation": {}
    },
    {
        "label": "TAuth",
        "kind": 6,
        "importPath": "onchain_fastapi.app.common.types",
        "description": "onchain_fastapi.app.common.types",
        "peekOfCode": "class TAuth(TypedDict):\n    phone: str\n    id: str\n    role: UserRoleEnum",
        "detail": "onchain_fastapi.app.common.types",
        "documentation": {}
    },
    {
        "label": "security",
        "kind": 5,
        "importPath": "onchain_fastapi.app.dependencies.authenticate_user",
        "description": "onchain_fastapi.app.dependencies.authenticate_user",
        "peekOfCode": "security = HTTPBearer(auto_error=False)\n# Define public routes\nPUBLIC_ROUTES = {\n    \"/api/v1/users/register-user\",\n    \"/api/v1/users/login\",\n    \"/api/v1/files/get\",\n    \"/api/v1/files\",\n    \"/api/v1/leaderboard/\",\n    \"/api/v1/leaderboard/statistics\",\n    \"/api/v1/leaderboard/test\"",
        "detail": "onchain_fastapi.app.dependencies.authenticate_user",
        "documentation": {}
    },
    {
        "label": "PUBLIC_ROUTES",
        "kind": 5,
        "importPath": "onchain_fastapi.app.dependencies.authenticate_user",
        "description": "onchain_fastapi.app.dependencies.authenticate_user",
        "peekOfCode": "PUBLIC_ROUTES = {\n    \"/api/v1/users/register-user\",\n    \"/api/v1/users/login\",\n    \"/api/v1/files/get\",\n    \"/api/v1/files\",\n    \"/api/v1/leaderboard/\",\n    \"/api/v1/leaderboard/statistics\",\n    \"/api/v1/leaderboard/test\"\n}\nGRAPHQL_PUBLIC_OPERATIONS = {",
        "detail": "onchain_fastapi.app.dependencies.authenticate_user",
        "documentation": {}
    },
    {
        "label": "GRAPHQL_PUBLIC_OPERATIONS",
        "kind": 5,
        "importPath": "onchain_fastapi.app.dependencies.authenticate_user",
        "description": "onchain_fastapi.app.dependencies.authenticate_user",
        "peekOfCode": "GRAPHQL_PUBLIC_OPERATIONS = {\n    \"signUp\",\n    \"signIn\"\n}\nasync def authenticate_user(\n    request: Request, credentials: HTTPAuthorizationCredentials = Security(security)\n):\n    path = urlparse(request.url.path).path\n    if path in PUBLIC_ROUTES:\n        return",
        "detail": "onchain_fastapi.app.dependencies.authenticate_user",
        "documentation": {}
    },
    {
        "label": "register_all_errors",
        "kind": 2,
        "importPath": "onchain_fastapi.app.exceptions.handler",
        "description": "onchain_fastapi.app.exceptions.handler",
        "peekOfCode": "def register_all_errors(app: FastAPI):\n    # Handling CustomError \n    @app.exception_handler(CustomError)\n    async def database__error(request, exc):\n        content = ExceptionContent(message= exc.message, resolution= exc.resolution or \"No resolution provided\",).to_dict()\n        return JSONResponse(\n            content=content,\n            status_code=exc.status_code,\n        )\n    # # Handling SQLAlchemyError",
        "detail": "onchain_fastapi.app.exceptions.handler",
        "documentation": {}
    },
    {
        "label": "HubException",
        "kind": 6,
        "importPath": "onchain_fastapi.app.exceptions.models",
        "description": "onchain_fastapi.app.exceptions.models",
        "peekOfCode": "class HubException(Exception):\n    \"\"\"This is the base class for all AIPolicing errors\"\"\"\n    def __init__(self, status_code: int, message: str, resolution: str = None):\n        self.status_code = status_code\n        self.message = message\n        self.resolution = resolution\n        super().__init__(message)\nclass CustomError(HubException):\n    \"\"\"User has provided an invalid or expired token\"\"\"\n    def __init__(self, status_code: int, message: str, resolution: str = None):",
        "detail": "onchain_fastapi.app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "CustomError",
        "kind": 6,
        "importPath": "onchain_fastapi.app.exceptions.models",
        "description": "onchain_fastapi.app.exceptions.models",
        "peekOfCode": "class CustomError(HubException):\n    \"\"\"User has provided an invalid or expired token\"\"\"\n    def __init__(self, status_code: int, message: str, resolution: str = None):\n        super().__init__(status_code, message, resolution)\n    def __str__(self):\n        return f\"CustomError(status_code={self.status_code}, message={self.message}, resolution={self.resolution})\"\nclass ExceptionContent():\n    is_success: bool = False\n    error: Any = None\n    def __init__(self, message: str, resolution: Optional[str]= \"No resolution provided\"):",
        "detail": "onchain_fastapi.app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "ExceptionContent",
        "kind": 6,
        "importPath": "onchain_fastapi.app.exceptions.models",
        "description": "onchain_fastapi.app.exceptions.models",
        "peekOfCode": "class ExceptionContent():\n    is_success: bool = False\n    error: Any = None\n    def __init__(self, message: str, resolution: Optional[str]= \"No resolution provided\"):\n        self.error = {\n            \"message\": message,\n            \"resolution\": resolution,\n        }\n    def to_dict(self):\n        return {\"is_success\": self.is_success, \"error\": self.error}",
        "detail": "onchain_fastapi.app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "onchain_fastapi.app.exceptions.models",
        "description": "onchain_fastapi.app.exceptions.models",
        "peekOfCode": "T = TypeVar(\"T\")\nclass HubException(Exception):\n    \"\"\"This is the base class for all AIPolicing errors\"\"\"\n    def __init__(self, status_code: int, message: str, resolution: str = None):\n        self.status_code = status_code\n        self.message = message\n        self.resolution = resolution\n        super().__init__(message)\nclass CustomError(HubException):\n    \"\"\"User has provided an invalid or expired token\"\"\"",
        "detail": "onchain_fastapi.app.exceptions.models",
        "documentation": {}
    },
    {
        "label": "UserMutation",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "peekOfCode": "class UserMutation:\n    @strawberry.mutation\n    async def sign_up(self, input: SignUpInput, info) -> SignUpResponse:\n        \"\"\"\n        Register a new user with the same validation logic as REST API\n        \"\"\"\n        try:\n            # Validate input\n            validate_signup_input(input)\n            # Get database session from context",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "documentation": {}
    },
    {
        "label": "UserQuery",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "peekOfCode": "class UserQuery:\n    @strawberry.field\n    async def user_profile(self, info, id: int) -> UserType:\n        \"\"\"\n        Get user profile by ID (requires authentication)\n        \"\"\"\n        db = info.context[\"db\"]\n        result = await db.execute(select(UserModel).where(UserModel.id == id))\n        user = result.scalar_one_or_none()\n        if not user:",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "documentation": {}
    },
    {
        "label": "validate_signup_input",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "peekOfCode": "def validate_signup_input(input: SignUpInput):\n    \"\"\"Validate signup input with same logic as REST API\"\"\"\n    # Validate phone number\n    if len(input.phone) != 14 or not input.phone.startswith(\"+880\") or not input.phone[1:].isdigit():\n        raise CustomError(\n            status_code=422,\n            message=\"Phone number must be exactly 14 digits and start with +880\",\n            resolution=\"Please provide a valid phone number in format +880XXXXXXXXXX\"\n        )\n    # Validate name",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "documentation": {}
    },
    {
        "label": "validate_signin_input",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "peekOfCode": "def validate_signin_input(input: SignInInput):\n    \"\"\"Validate signin input with same logic as REST API\"\"\"\n    # Validate phoneOrUserName\n    if not input.phoneOrUserName or len(input.phoneOrUserName.strip()) < 4:\n        raise CustomError(\n            status_code=422,\n            message=\"Phone or username is required\",\n            resolution=\"Please provide a valid phone number or username\"\n        )\n    # Validate password",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.resolvers",
        "documentation": {}
    },
    {
        "label": "UserRoleEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class UserRoleEnum(Enum):\n    admin = \"admin\"\n    user = \"user\"\n    moderator = \"moderator\"\n@strawberry.type\nclass UserType:\n    id: int\n    userName: str\n    name: str\n    photoUrl: Optional[str] = None",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "UserType",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class UserType:\n    id: int\n    userName: str\n    name: str\n    photoUrl: Optional[str] = None\n    role: UserRoleEnum\n    points: int\n    rankLevel: int\n    access_token: str\n@strawberry.type",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "ErrorDetail",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class ErrorDetail:\n    \"\"\"Error detail matching REST API structure exactly\"\"\"\n    message: str\n    resolution: str\n@strawberry.type\nclass MetaData:\n    \"\"\"Metadata for pagination matching REST API structure\"\"\"\n    prev: Optional[int] = None\n    next: Optional[int] = None\n    current: int",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "MetaData",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class MetaData:\n    \"\"\"Metadata for pagination matching REST API structure\"\"\"\n    prev: Optional[int] = None\n    next: Optional[int] = None\n    current: int\n    total: int\n@strawberry.type\nclass ErrorResponse:\n    \"\"\"Error response matching REST API structure exactly\"\"\"\n    is_success: bool = False",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "ErrorResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class ErrorResponse:\n    \"\"\"Error response matching REST API structure exactly\"\"\"\n    is_success: bool = False\n    error: ErrorDetail\n@strawberry.type\nclass UserData:\n    \"\"\"User data structure matching REST API\"\"\"\n    id: int\n    userName: str\n    name: str",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "UserData",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class UserData:\n    \"\"\"User data structure matching REST API\"\"\"\n    id: int\n    userName: str\n    name: str\n    photoUrl: Optional[str] = None\n    role: UserRoleEnum\n    points: int\n    rankLevel: int\n    access_token: str",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "UserProfileData",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class UserProfileData:\n    \"\"\"User profile data structure matching REST API\"\"\"\n    id: int\n    userName: str\n    name: str\n    photoUrl: Optional[str] = None\n    role: UserRoleEnum\n    points: int\n    rankLevel: int\n@strawberry.type",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "UserLoginData",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class UserLoginData:\n    \"\"\"User login data structure matching REST API\"\"\"\n    id: int\n    name: str\n    role: UserRoleEnum\n    photoUrl: Optional[str] = None\n    access_token: str\n@strawberry.type\nclass SignUpResponse:\n    \"\"\"Response type for user registration matching REST API structure exactly\"\"\"",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "SignUpResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class SignUpResponse:\n    \"\"\"Response type for user registration matching REST API structure exactly\"\"\"\n    is_success: bool = True\n    message: Optional[str] = None\n    data: Optional[UserData] = None\n    meta_data: Optional[MetaData] = None\n    # Error fields (only present when is_success = False)\n    error: Optional[ErrorDetail] = None\n@strawberry.type\nclass SignInResponse:",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "SignInResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class SignInResponse:\n    \"\"\"Response type for user login matching REST API structure exactly\"\"\"\n    is_success: bool = True\n    message: Optional[str] = None\n    data: Optional[UserLoginData] = None\n    meta_data: Optional[MetaData] = None\n    # Error fields (only present when is_success = False)\n    error: Optional[ErrorDetail] = None\n@strawberry.type\nclass ProfileResponse:",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "ProfileResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class ProfileResponse:\n    \"\"\"Response type for user profile matching REST API structure exactly\"\"\"\n    is_success: bool = True\n    message: Optional[str] = None\n    data: Optional[UserProfileData] = None\n    meta_data: Optional[MetaData] = None\n    # Error fields (only present when is_success = False)\n    error: Optional[ErrorDetail] = None\n@strawberry.input\nclass SignUpInput:",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "SignUpInput",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class SignUpInput:\n    phone: str\n    name: str\n    password: str\n@strawberry.input\nclass SignInInput:\n    phoneOrUserName: str\n    password: str",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "SignInInput",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "description": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "peekOfCode": "class SignInInput:\n    phoneOrUserName: str\n    password: str",
        "detail": "onchain_fastapi.app.graphqlSchema.modules.users.types",
        "documentation": {}
    },
    {
        "label": "GraphQLError",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_handler",
        "description": "onchain_fastapi.app.graphqlSchema.error_handler",
        "peekOfCode": "class GraphQLError:\n    \"\"\"GraphQL error type that matches REST API error structure\"\"\"\n    is_success: bool = False\n    error: Dict[str, str]\n@strawberry.type\nclass GraphQLErrorResponse:\n    \"\"\"GraphQL error response that matches REST API structure\"\"\"\n    is_success: bool = False\n    error: Dict[str, str]\n    @classmethod",
        "detail": "onchain_fastapi.app.graphqlSchema.error_handler",
        "documentation": {}
    },
    {
        "label": "GraphQLErrorResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_handler",
        "description": "onchain_fastapi.app.graphqlSchema.error_handler",
        "peekOfCode": "class GraphQLErrorResponse:\n    \"\"\"GraphQL error response that matches REST API structure\"\"\"\n    is_success: bool = False\n    error: Dict[str, str]\n    @classmethod\n    def from_exception(cls, exception: HubException):\n        \"\"\"Create GraphQL error response from HubException\"\"\"\n        exception_content = ExceptionContent(\n            message=exception.message,\n            resolution=exception.resolution or \"No resolution provided\"",
        "detail": "onchain_fastapi.app.graphqlSchema.error_handler",
        "documentation": {}
    },
    {
        "label": "format_hub_exception",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_handler",
        "description": "onchain_fastapi.app.graphqlSchema.error_handler",
        "peekOfCode": "def format_hub_exception(error: HubException) -> Dict[str, Any]:\n    \"\"\"Format HubException (CustomError) for GraphQL response matching REST API structure exactly\"\"\"\n    # Create ExceptionContent to match REST API error format exactly\n    exception_content = ExceptionContent(\n        message=error.message,\n        resolution=error.resolution or \"No resolution provided\"\n    )\n    # Return exact format as REST API\n    return exception_content.to_dict()\ndef format_sqlalchemy_error(error: SQLAlchemyError) -> Dict[str, Any]:",
        "detail": "onchain_fastapi.app.graphqlSchema.error_handler",
        "documentation": {}
    },
    {
        "label": "format_sqlalchemy_error",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_handler",
        "description": "onchain_fastapi.app.graphqlSchema.error_handler",
        "peekOfCode": "def format_sqlalchemy_error(error: SQLAlchemyError) -> Dict[str, Any]:\n    \"\"\"Format SQLAlchemyError for GraphQL response matching REST API structure exactly\"\"\"\n    message = error.args[0] if error.args else \"something went wrong\"\n    # Extract DETAIL from PostgreSQL error messages (same logic as REST handler)\n    if \"DETAIL:\" in message:\n        match = re.search(r\"DETAIL: (.*)\", message)\n        if match:\n            message = match.group(1).strip()\n    # Create ExceptionContent to match REST API format exactly\n    exception_content = ExceptionContent(",
        "detail": "onchain_fastapi.app.graphqlSchema.error_handler",
        "documentation": {}
    },
    {
        "label": "format_validation_error",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_handler",
        "description": "onchain_fastapi.app.graphqlSchema.error_handler",
        "peekOfCode": "def format_validation_error(_: Exception) -> Dict[str, Any]:\n    \"\"\"Format validation errors for GraphQL response matching REST API structure exactly\"\"\"\n    # Create ExceptionContent to match REST API format exactly\n    exception_content = ExceptionContent(\n        message=\"Try to make definition of this error\",\n        resolution=\"No resolution provided\"\n    )\n    # Return exact format as REST API\n    return exception_content.to_dict()\ndef format_generic_error(_: Exception) -> Dict[str, Any]:",
        "detail": "onchain_fastapi.app.graphqlSchema.error_handler",
        "documentation": {}
    },
    {
        "label": "format_generic_error",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_handler",
        "description": "onchain_fastapi.app.graphqlSchema.error_handler",
        "peekOfCode": "def format_generic_error(_: Exception) -> Dict[str, Any]:\n    \"\"\"Format generic errors for GraphQL response matching REST API structure exactly\"\"\"\n    # Create ExceptionContent to match REST API format exactly\n    exception_content = ExceptionContent(\n        message=\"Internal server error\",\n        resolution=\"No resolution provided\"\n    )\n    # Return exact format as REST API\n    return exception_content.to_dict()\ndef custom_error_handler(errors: List[Exception], result: ExecutionResult) -> ExecutionResult:",
        "detail": "onchain_fastapi.app.graphqlSchema.error_handler",
        "documentation": {}
    },
    {
        "label": "custom_error_handler",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_handler",
        "description": "onchain_fastapi.app.graphqlSchema.error_handler",
        "peekOfCode": "def custom_error_handler(errors: List[Exception], result: ExecutionResult) -> ExecutionResult:\n    \"\"\"\n    Custom error handler for GraphQL that matches the existing REST API error structure exactly\n    Handles multiple errors as a single error with the exact format as REST API\n    \"\"\"\n    if not errors:\n        return result\n    # Take the first error (handle multiple errors as single error)\n    first_error = errors[0]\n    # Determine the error format based on error type",
        "detail": "onchain_fastapi.app.graphqlSchema.error_handler",
        "documentation": {}
    },
    {
        "label": "GraphQLErrorDetail",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_types",
        "description": "onchain_fastapi.app.graphqlSchema.error_types",
        "peekOfCode": "class GraphQLErrorDetail:\n    \"\"\"GraphQL error detail that matches REST API error structure\"\"\"\n    message: str\n    resolution: str\n@strawberry.type\nclass GraphQLErrorResponse:\n    \"\"\"GraphQL error response that matches REST API structure\"\"\"\n    is_success: bool = False\n    error: GraphQLErrorDetail\n    @classmethod",
        "detail": "onchain_fastapi.app.graphqlSchema.error_types",
        "documentation": {}
    },
    {
        "label": "GraphQLErrorResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_types",
        "description": "onchain_fastapi.app.graphqlSchema.error_types",
        "peekOfCode": "class GraphQLErrorResponse:\n    \"\"\"GraphQL error response that matches REST API structure\"\"\"\n    is_success: bool = False\n    error: GraphQLErrorDetail\n    @classmethod\n    def from_hub_exception(cls, exception: HubException):\n        \"\"\"Create GraphQL error response from HubException\"\"\"\n        return cls(\n            is_success=False,\n            error=GraphQLErrorDetail(",
        "detail": "onchain_fastapi.app.graphqlSchema.error_types",
        "documentation": {}
    },
    {
        "label": "GraphQLCustomError",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_types",
        "description": "onchain_fastapi.app.graphqlSchema.error_types",
        "peekOfCode": "class GraphQLCustomError(Exception):\n    \"\"\"\n    Custom GraphQL error that matches your existing error structure\n    \"\"\"\n    def __init__(self, message: str, status_code: int = 400, resolution: str = None):\n        self.message = message\n        self.status_code = status_code\n        self.resolution = resolution or \"No resolution provided\"\n        super().__init__(message)\n    def to_graphql_error(self) -> Dict[str, Any]:",
        "detail": "onchain_fastapi.app.graphqlSchema.error_types",
        "documentation": {}
    },
    {
        "label": "GraphQLValidationError",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_types",
        "description": "onchain_fastapi.app.graphqlSchema.error_types",
        "peekOfCode": "class GraphQLValidationError(GraphQLCustomError):\n    \"\"\"GraphQL validation error\"\"\"\n    def __init__(self, message: str, resolution: str = \"Please check your input and try again\"):\n        super().__init__(message, status_code=422, resolution=resolution)\nclass GraphQLAuthenticationError(GraphQLCustomError):\n    \"\"\"GraphQL authentication error\"\"\"\n    def __init__(self, message: str = \"Authentication required\", resolution: str = \"Please provide a valid access token\"):\n        super().__init__(message, status_code=401, resolution=resolution)\nclass GraphQLAuthorizationError(GraphQLCustomError):\n    \"\"\"GraphQL authorization error\"\"\"",
        "detail": "onchain_fastapi.app.graphqlSchema.error_types",
        "documentation": {}
    },
    {
        "label": "GraphQLAuthenticationError",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_types",
        "description": "onchain_fastapi.app.graphqlSchema.error_types",
        "peekOfCode": "class GraphQLAuthenticationError(GraphQLCustomError):\n    \"\"\"GraphQL authentication error\"\"\"\n    def __init__(self, message: str = \"Authentication required\", resolution: str = \"Please provide a valid access token\"):\n        super().__init__(message, status_code=401, resolution=resolution)\nclass GraphQLAuthorizationError(GraphQLCustomError):\n    \"\"\"GraphQL authorization error\"\"\"\n    def __init__(self, message: str = \"Access denied\", resolution: str = \"You don't have permission to access this resource\"):\n        super().__init__(message, status_code=403, resolution=resolution)\nclass GraphQLNotFoundError(GraphQLCustomError):\n    \"\"\"GraphQL not found error\"\"\"",
        "detail": "onchain_fastapi.app.graphqlSchema.error_types",
        "documentation": {}
    },
    {
        "label": "GraphQLAuthorizationError",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_types",
        "description": "onchain_fastapi.app.graphqlSchema.error_types",
        "peekOfCode": "class GraphQLAuthorizationError(GraphQLCustomError):\n    \"\"\"GraphQL authorization error\"\"\"\n    def __init__(self, message: str = \"Access denied\", resolution: str = \"You don't have permission to access this resource\"):\n        super().__init__(message, status_code=403, resolution=resolution)\nclass GraphQLNotFoundError(GraphQLCustomError):\n    \"\"\"GraphQL not found error\"\"\"\n    def __init__(self, message: str = \"Resource not found\", resolution: str = \"Please check the resource ID and try again\"):\n        super().__init__(message, status_code=404, resolution=resolution)",
        "detail": "onchain_fastapi.app.graphqlSchema.error_types",
        "documentation": {}
    },
    {
        "label": "GraphQLNotFoundError",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_types",
        "description": "onchain_fastapi.app.graphqlSchema.error_types",
        "peekOfCode": "class GraphQLNotFoundError(GraphQLCustomError):\n    \"\"\"GraphQL not found error\"\"\"\n    def __init__(self, message: str = \"Resource not found\", resolution: str = \"Please check the resource ID and try again\"):\n        super().__init__(message, status_code=404, resolution=resolution)",
        "detail": "onchain_fastapi.app.graphqlSchema.error_types",
        "documentation": {}
    },
    {
        "label": "create_graphql_error_dict",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_types",
        "description": "onchain_fastapi.app.graphqlSchema.error_types",
        "peekOfCode": "def create_graphql_error_dict(\n    message: str, \n    status_code: int = 500, \n    resolution: str = \"No resolution provided\"\n) -> Dict[str, Any]:\n    \"\"\"\n    Create a GraphQL error dictionary that matches your REST API error structure\n    \"\"\"\n    exception_content = ExceptionContent(message=message, resolution=resolution)\n    return {",
        "detail": "onchain_fastapi.app.graphqlSchema.error_types",
        "documentation": {}
    },
    {
        "label": "hub_exception_to_graphql_error",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.error_types",
        "description": "onchain_fastapi.app.graphqlSchema.error_types",
        "peekOfCode": "def hub_exception_to_graphql_error(exception: HubException) -> Dict[str, Any]:\n    \"\"\"\n    Convert HubException to GraphQL error format matching REST API structure\n    \"\"\"\n    return create_graphql_error_dict(\n        message=exception.message,\n        status_code=exception.status_code,\n        resolution=exception.resolution or \"No resolution provided\"\n    )\n# Custom GraphQL exceptions that can be raised in resolvers",
        "detail": "onchain_fastapi.app.graphqlSchema.error_types",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.permissions",
        "description": "onchain_fastapi.app.graphqlSchema.permissions",
        "peekOfCode": "class IsAuthenticated(BasePermission):\n    message = \"Authentication required\"\n    def has_permission(self, _: Any, info: Info, **kwargs) -> bool:\n        return bool(info.context.get(\"user\"))",
        "detail": "onchain_fastapi.app.graphqlSchema.permissions",
        "documentation": {}
    },
    {
        "label": "create_graphql_error_response",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.response_handler",
        "description": "onchain_fastapi.app.graphqlSchema.response_handler",
        "peekOfCode": "def create_graphql_error_response(\n    message: str, \n    resolution: str = \"No resolution provided\"\n) -> dict:\n    \"\"\"\n    Create GraphQL error response matching REST API error structure exactly\n    \"\"\"\n    return {\n        \"is_success\": False,\n        \"error\": ErrorDetail(",
        "detail": "onchain_fastapi.app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_graphql_success_response",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.response_handler",
        "description": "onchain_fastapi.app.graphqlSchema.response_handler",
        "peekOfCode": "def create_graphql_success_response(\n    message: str,\n    data: Any,\n    meta_data: Optional[MetaData] = None\n) -> dict:\n    \"\"\"\n    Create GraphQL success response matching REST API structure exactly\n    \"\"\"\n    return {\n        \"is_success\": True,",
        "detail": "onchain_fastapi.app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_signup_response",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.response_handler",
        "description": "onchain_fastapi.app.graphqlSchema.response_handler",
        "peekOfCode": "def create_signup_response(\n    user_data: dict,\n    message: str = \"User has registered successfully\"\n) -> SignUpResponse:\n    \"\"\"\n    Create signup response matching REST API structure\n    \"\"\"\n    try:\n        data = UserData(\n            id=user_data[\"id\"],",
        "detail": "onchain_fastapi.app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_signin_response",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.response_handler",
        "description": "onchain_fastapi.app.graphqlSchema.response_handler",
        "peekOfCode": "def create_signin_response(\n    user_data: dict,\n    message: str = \"Login successful\"\n) -> SignInResponse:\n    \"\"\"\n    Create signin response matching REST API structure\n    \"\"\"\n    try:\n        data = UserLoginData(\n            id=user_data[\"id\"],",
        "detail": "onchain_fastapi.app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_profile_response",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.response_handler",
        "description": "onchain_fastapi.app.graphqlSchema.response_handler",
        "peekOfCode": "def create_profile_response(\n    user_data: dict,\n    message: str = \"Profile retrieved successfully\"\n) -> ProfileResponse:\n    \"\"\"\n    Create profile response matching REST API structure\n    \"\"\"\n    try:\n        data = UserProfileData(\n            id=user_data[\"id\"],",
        "detail": "onchain_fastapi.app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_error_response_for_signup",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.response_handler",
        "description": "onchain_fastapi.app.graphqlSchema.response_handler",
        "peekOfCode": "def create_error_response_for_signup(\n    message: str,\n    resolution: str = \"No resolution provided\"\n) -> SignUpResponse:\n    \"\"\"Create error response for signup\"\"\"\n    return SignUpResponse(\n        is_success=False,\n        error=ErrorDetail(message=message, resolution=resolution)\n    )\ndef create_error_response_for_signin(",
        "detail": "onchain_fastapi.app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_error_response_for_signin",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.response_handler",
        "description": "onchain_fastapi.app.graphqlSchema.response_handler",
        "peekOfCode": "def create_error_response_for_signin(\n    message: str,\n    resolution: str = \"No resolution provided\"\n) -> SignInResponse:\n    \"\"\"Create error response for signin\"\"\"\n    return SignInResponse(\n        is_success=False,\n        error=ErrorDetail(message=message, resolution=resolution)\n    )\ndef create_error_response_for_profile(",
        "detail": "onchain_fastapi.app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "create_error_response_for_profile",
        "kind": 2,
        "importPath": "onchain_fastapi.app.graphqlSchema.response_handler",
        "description": "onchain_fastapi.app.graphqlSchema.response_handler",
        "peekOfCode": "def create_error_response_for_profile(\n    message: str,\n    resolution: str = \"No resolution provided\"\n) -> ProfileResponse:\n    \"\"\"Create error response for profile\"\"\"\n    return ProfileResponse(\n        is_success=False,\n        error=ErrorDetail(message=message, resolution=resolution)\n    )",
        "detail": "onchain_fastapi.app.graphqlSchema.response_handler",
        "documentation": {}
    },
    {
        "label": "Query",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.schema",
        "description": "onchain_fastapi.app.graphqlSchema.schema",
        "peekOfCode": "class Query(UserQuery):\n    pass\n@strawberry.type\nclass Mutation(UserMutation):\n    pass\nschema = strawberry.Schema(query=Query, mutation=Mutation)\ngraphql_app = GraphQLRouter(\n    schema,\n    context_getter=get_context,\n)",
        "detail": "onchain_fastapi.app.graphqlSchema.schema",
        "documentation": {}
    },
    {
        "label": "Mutation",
        "kind": 6,
        "importPath": "onchain_fastapi.app.graphqlSchema.schema",
        "description": "onchain_fastapi.app.graphqlSchema.schema",
        "peekOfCode": "class Mutation(UserMutation):\n    pass\nschema = strawberry.Schema(query=Query, mutation=Mutation)\ngraphql_app = GraphQLRouter(\n    schema,\n    context_getter=get_context,\n)",
        "detail": "onchain_fastapi.app.graphqlSchema.schema",
        "documentation": {}
    },
    {
        "label": "schema",
        "kind": 5,
        "importPath": "onchain_fastapi.app.graphqlSchema.schema",
        "description": "onchain_fastapi.app.graphqlSchema.schema",
        "peekOfCode": "schema = strawberry.Schema(query=Query, mutation=Mutation)\ngraphql_app = GraphQLRouter(\n    schema,\n    context_getter=get_context,\n)",
        "detail": "onchain_fastapi.app.graphqlSchema.schema",
        "documentation": {}
    },
    {
        "label": "graphql_app",
        "kind": 5,
        "importPath": "onchain_fastapi.app.graphqlSchema.schema",
        "description": "onchain_fastapi.app.graphqlSchema.schema",
        "peekOfCode": "graphql_app = GraphQLRouter(\n    schema,\n    context_getter=get_context,\n)",
        "detail": "onchain_fastapi.app.graphqlSchema.schema",
        "documentation": {}
    },
    {
        "label": "File",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.files.models",
        "description": "onchain_fastapi.app.modules.files.models",
        "peekOfCode": "class File(Base):\n    __tablename__ = \"files\"\n    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4, unique=True, index=True) \n    file_type= Column(String,  nullable=False )\n    file = Column(LargeBinary, nullable=True)  # Store binary image as BLOB\n    # Timestamps\n    created_at = Column(DateTime(timezone=True), server_default=func.now())\n# class FileModel(Base):\n#     __tablename__ = 'files_blob'\n#     id = Column(Integer, primary_key=True, index=True)",
        "detail": "onchain_fastapi.app.modules.files.models",
        "documentation": {}
    },
    {
        "label": "file_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.files.routers",
        "description": "onchain_fastapi.app.modules.files.routers",
        "peekOfCode": "file_router = APIRouter()\n@file_router.get(\"/get\"\n# , response_model=Response[list[IntersectionListResponse]]\n)\nasync def get_file( id:str,db: AsyncSession = Depends(get_db)):\n    result= await get_file_service(db, id=id)\n    return result\n    # return create_response(result=result[\"data\"], pydantic_model=IntersectionListResponse, message=\"intersections have retrieved successfully\", meta_data=result[\"meta_data\"])",
        "detail": "onchain_fastapi.app.modules.files.routers",
        "documentation": {}
    },
    {
        "label": "LeaderboardEntry",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.leaderboard.models",
        "description": "onchain_fastapi.app.modules.leaderboard.models",
        "peekOfCode": "class LeaderboardEntry(Base):\n    \"\"\"\n    Model for caching leaderboard data for performance\n    Updated whenever point transactions occur\n    \"\"\"\n    __tablename__ = \"leaderboardEntries\"\n    id = Column(Integer, primary_key=True, index=True)\n    userId = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False, unique=True)\n    # Point totals\n    totalPoints = Column(Integer, default=0, nullable=False)",
        "detail": "onchain_fastapi.app.modules.leaderboard.models",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.leaderboard.router",
        "description": "onchain_fastapi.app.modules.leaderboard.router",
        "peekOfCode": "router = APIRouter(prefix=\"/leaderboard\", tags=[\"Leaderboard\"])\n@router.get(\"/\", response_model=Response[LeaderboardResponse])\nasync def get_leaderboard_endpoint(\n    timeframe: str = Query(\"all_time\", description=\"Timeframe: all_time, monthly, weekly\"),\n    limit: int = Query(50, description=\"Number of entries to return\"),\n    offset: int = Query(0, description=\"Number of entries to skip\"),\n    includeInactive: bool = Query(False, description=\"Include inactive users\"),\n    db: AsyncSession = Depends(get_db)\n):\n    \"\"\"",
        "detail": "onchain_fastapi.app.modules.leaderboard.router",
        "documentation": {}
    },
    {
        "label": "LeaderboardEntryResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.leaderboard.schemas",
        "description": "onchain_fastapi.app.modules.leaderboard.schemas",
        "peekOfCode": "class LeaderboardEntryResponse(BaseModel):\n    id: int\n    userId: int\n    userName: str\n    name: str\n    photoUrl: Optional[str] = None\n    totalPoints: int\n    projectCompletionPoints: int\n    moduleCompletionPoints: int\n    bonusPoints: int",
        "detail": "onchain_fastapi.app.modules.leaderboard.schemas",
        "documentation": {}
    },
    {
        "label": "LeaderboardResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.leaderboard.schemas",
        "description": "onchain_fastapi.app.modules.leaderboard.schemas",
        "peekOfCode": "class LeaderboardResponse(BaseModel):\n    entries: List[LeaderboardEntryResponse]\n    totalEntries: int\n    currentPage: int\n    totalPages: int\n    hasNext: bool\n    hasPrev: bool\nclass LeaderboardFilterRequest(BaseModel):\n    timeframe: Optional[str] = \"all_time\"  # all_time, monthly, weekly\n    limit: Optional[int] = 50",
        "detail": "onchain_fastapi.app.modules.leaderboard.schemas",
        "documentation": {}
    },
    {
        "label": "LeaderboardFilterRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.leaderboard.schemas",
        "description": "onchain_fastapi.app.modules.leaderboard.schemas",
        "peekOfCode": "class LeaderboardFilterRequest(BaseModel):\n    timeframe: Optional[str] = \"all_time\"  # all_time, monthly, weekly\n    limit: Optional[int] = 50\n    offset: Optional[int] = 0\n    includeInactive: Optional[bool] = False\nclass UserRankResponse(BaseModel):\n    userId: int\n    userName: str\n    name: str\n    photoUrl: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.leaderboard.schemas",
        "documentation": {}
    },
    {
        "label": "UserRankResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.leaderboard.schemas",
        "description": "onchain_fastapi.app.modules.leaderboard.schemas",
        "peekOfCode": "class UserRankResponse(BaseModel):\n    userId: int\n    userName: str\n    name: str\n    photoUrl: Optional[str] = None\n    totalPoints: int\n    globalRank: Optional[int] = None\n    monthlyRank: Optional[int] = None\n    weeklyRank: Optional[int] = None\n    projectsCompleted: int",
        "detail": "onchain_fastapi.app.modules.leaderboard.schemas",
        "documentation": {}
    },
    {
        "label": "PublicProfileResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.leaderboard.schemas",
        "description": "onchain_fastapi.app.modules.leaderboard.schemas",
        "peekOfCode": "class PublicProfileResponse(BaseModel):\n    userId: int\n    userName: str\n    name: str\n    photoUrl: Optional[str] = None\n    bio: Optional[str] = None\n    totalPoints: int\n    globalRank: Optional[int] = None\n    projectsCompleted: int\n    modulesCompleted: int",
        "detail": "onchain_fastapi.app.modules.leaderboard.schemas",
        "documentation": {}
    },
    {
        "label": "PredefinedBadge",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.predefines.badges.models",
        "description": "onchain_fastapi.app.modules.predefines.badges.models",
        "peekOfCode": "class PredefinedBadge(Base):\n    __tablename__ = 'predefinedBadges'\n    id = Column(Integer, primary_key=True)\n    title = Column(String(50), nullable=False)\n    photoUrl = Column(String(255), nullable=False)\n    requiredPoint = Column(Integer, nullable=False)\n    createdByUser = Column(Integer, ForeignKey('users.id'), nullable=False)\n    createdAt = Column(DateTime(timezone=True), server_default=func.now())\n    updatedAt = Column(DateTime(timezone=True), onupdate=func.now())",
        "detail": "onchain_fastapi.app.modules.predefines.badges.models",
        "documentation": {}
    },
    {
        "label": "PredefinedInterestCategory",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.predefines.interestCategories.models",
        "description": "onchain_fastapi.app.modules.predefines.interestCategories.models",
        "peekOfCode": "class PredefinedInterestCategory(Base):\n    __tablename__ = 'predefinedInterestCategories'\n    id = Column(Integer, primary_key=True)\n    title = Column(String(50), nullable=False)\n    createdByUser = Column(Integer, ForeignKey('users.id'), nullable=False)\n    createdAt = Column(DateTime(timezone=True), server_default=func.now())\n    updatedAt = Column(DateTime(timezone=True), onupdate=func.now())",
        "detail": "onchain_fastapi.app.modules.predefines.interestCategories.models",
        "documentation": {}
    },
    {
        "label": "PredefinedInterest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.predefines.interests.models",
        "description": "onchain_fastapi.app.modules.predefines.interests.models",
        "peekOfCode": "class PredefinedInterest(Base):\n    __tablename__ = 'predefinedInterests'\n    id = Column(Integer, primary_key=True)\n    category= Column(String(50), nullable=False)\n    title = Column(String(50), nullable=False)\n    createdByUser = Column(Integer, ForeignKey('users.id'), nullable=False)",
        "detail": "onchain_fastapi.app.modules.predefines.interests.models",
        "documentation": {}
    },
    {
        "label": "PredefinedProjectCategory",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.predefines.projectCategories.models",
        "description": "onchain_fastapi.app.modules.predefines.projectCategories.models",
        "peekOfCode": "class PredefinedProjectCategory(Base):\n    __tablename__ = 'predefinedProjectCategories'\n    id = Column(Integer, primary_key=True)\n    title = Column(String(50), nullable=False, unique=True)\n    createdByUserId = Column(Integer, ForeignKey(\"users.id\"), nullable=False)\n    # One-way relationship to User\n    createdBy = relationship(\"User\", lazy=\"joined\")\n    createdAt = Column(DateTime(timezone=True), server_default=func.now())\n    updatedAt = Column(DateTime(timezone=True), onupdate=func.now())",
        "detail": "onchain_fastapi.app.modules.predefines.projectCategories.models",
        "documentation": {}
    },
    {
        "label": "project_category_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.predefines.projectCategories.routers",
        "description": "onchain_fastapi.app.modules.predefines.projectCategories.routers",
        "peekOfCode": "project_category_router = APIRouter()\n@project_category_router.post(\"/create_project_category\"\n                     , response_model=Response[ProjectCategoryCreateResponse]\n                     )\nasync def create_project_category_(request: Request,category: ProjectCategoryCreateRequest, db: AsyncSession = Depends(get_db)):\n    auth = get_auth(request)\n    # check_user_access_api(auth, \"all\")\n    check_user_access_api(auth, [UserRoleEnum.admin])\n    result =  await create_project_category(db= db, auth=auth, title=category.title)\n    return create_response(result=result, pydantic_model=ProjectCategoryCreateResponse, message=\"Project category has created successfully\")",
        "detail": "onchain_fastapi.app.modules.predefines.projectCategories.routers",
        "documentation": {}
    },
    {
        "label": "ProjectCategoryCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.predefines.projectCategories.schemas",
        "description": "onchain_fastapi.app.modules.predefines.projectCategories.schemas",
        "peekOfCode": "class ProjectCategoryCreateRequest(BaseModel):\n    title: str\n    @model_validator(mode=\"before\")\n    @classmethod\n    def validate_required_fields(cls, values):\n        if \"title\" not in values or not str(values.get(\"title\", \"\")):\n            raise CustomError(status_code=422, message=\"title field is required\")\n        return values\n    @field_validator(\"title\")\n    @classmethod",
        "detail": "onchain_fastapi.app.modules.predefines.projectCategories.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectCategoryCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.predefines.projectCategories.schemas",
        "description": "onchain_fastapi.app.modules.predefines.projectCategories.schemas",
        "peekOfCode": "class ProjectCategoryCreateResponse(BaseModel):\n    id: int\n    title: str\n    class Config:\n        orm_mode = True\n        extra = \"ignore\"\nclass ProjectCategoryListResponse(ProjectCategoryCreateResponse):\n    # extra_field: str  # Add extra fields if needed\n    pass",
        "detail": "onchain_fastapi.app.modules.predefines.projectCategories.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectCategoryListResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.predefines.projectCategories.schemas",
        "description": "onchain_fastapi.app.modules.predefines.projectCategories.schemas",
        "peekOfCode": "class ProjectCategoryListResponse(ProjectCategoryCreateResponse):\n    # extra_field: str  # Add extra fields if needed\n    pass",
        "detail": "onchain_fastapi.app.modules.predefines.projectCategories.schemas",
        "documentation": {}
    },
    {
        "label": "PredefinedSkillCategory",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.predefines.skillCategories.models",
        "description": "onchain_fastapi.app.modules.predefines.skillCategories.models",
        "peekOfCode": "class PredefinedSkillCategory(Base):\n    __tablename__ = 'predefinedSkillCategories'\n    id = Column(Integer, primary_key=True)\n    title = Column(String(50), nullable=False)\n    createdByUser = Column(Integer, ForeignKey('users.id'), nullable=False)\n    createdAt = Column(DateTime(timezone=True), server_default=func.now())\n    updatedAt = Column(DateTime(timezone=True), onupdate=func.now())",
        "detail": "onchain_fastapi.app.modules.predefines.skillCategories.models",
        "documentation": {}
    },
    {
        "label": "PredefinedSkill",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.predefines.skills.models",
        "description": "onchain_fastapi.app.modules.predefines.skills.models",
        "peekOfCode": "class PredefinedSkill(Base):\n    __tablename__ = 'predefinedSkills'\n    id = Column(Integer, primary_key=True)\n    category= Column(String(50), nullable=False)\n    title = Column(String(50), nullable=False)\n    createdByUser = Column(Integer, ForeignKey('users.id'), nullable=False)",
        "detail": "onchain_fastapi.app.modules.predefines.skills.models",
        "documentation": {}
    },
    {
        "label": "predefine_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.predefines.routers",
        "description": "onchain_fastapi.app.modules.predefines.routers",
        "peekOfCode": "predefine_router = APIRouter()\n# calling a router depends on prefix\npredefine_router.include_router(project_category_router, prefix=\"/project_categories\")",
        "detail": "onchain_fastapi.app.modules.predefines.routers",
        "documentation": {}
    },
    {
        "label": "AchievementRuleEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.models",
        "peekOfCode": "class AchievementRuleEnum(str, enum.Enum):\n    r_01_min___point_on_whole_project = \"r_01_min___point_on_whole_project\"\n    r_02_min___module_completion = \"r_02_min___module_completion\"\n    # r_03_be_one_of_the_first___player_on_module___ = \"r_03_be_one_of_the_first___player_on_module___\"\n    r_04_be_one_of_the_first___players_on_the_project = \"r_04_be_one_of_the_first___players_on_the_project\"\n    r_05_earn_min_half_point_in_each_module = \"r_05_earn_min_half_point_in_each_module\"\n    # r_06_min___point_on_module___ = \"r_06_min___point_on_module___\"\nclass AchievementForEnum(str, enum.Enum):\n    individual = \"individual\"\n    team = \"team\"",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.models",
        "documentation": {}
    },
    {
        "label": "AchievementForEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.models",
        "peekOfCode": "class AchievementForEnum(str, enum.Enum):\n    individual = \"individual\"\n    team = \"team\"\nclass Achievement(Base):\n    __tablename__ = \"achievements\"\n    id = Column(Integer, primary_key=True, index=True)\n    title = Column(String(255), nullable=False)\n    photoUrl = Column(String(255), nullable=False)\n    descriptionBeforeUnLocked = Column(Text, nullable=True)\n    descriptionAfterUnLocked = Column(Text, nullable=True)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.models",
        "documentation": {}
    },
    {
        "label": "Achievement",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.models",
        "peekOfCode": "class Achievement(Base):\n    __tablename__ = \"achievements\"\n    id = Column(Integer, primary_key=True, index=True)\n    title = Column(String(255), nullable=False)\n    photoUrl = Column(String(255), nullable=False)\n    descriptionBeforeUnLocked = Column(Text, nullable=True)\n    descriptionAfterUnLocked = Column(Text, nullable=True)\n    rule = Column(Enum(AchievementRuleEnum), nullable=False)\n    achievementFor = Column(Enum(AchievementForEnum), nullable=False)\n    # Rule-specific fields",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.models",
        "documentation": {}
    },
    {
        "label": "achievement_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.routers",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.routers",
        "peekOfCode": "achievement_router = APIRouter()\nfrom app.database import get_db\nfrom app.utils.get_auth import get_auth\nfrom app.responses.models import Response\nfrom app.responses.handler import create_response\n@achievement_router.post(\"/create_achievement\"\n                     ,response_model=Response[AchievementCreateResponse]\n                     )\nasync def create_achievement_(\n    request: Request,",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.routers",
        "documentation": {}
    },
    {
        "label": "AchievementRuleEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "peekOfCode": "class AchievementRuleEnum(Enum):\n    r_01_min___point_on_whole_project = \"r_01_min___point_on_whole_project\"\n    r_02_min___module_completion = \"r_02_min___module_completion\"\n    # r_03_be_one_of_the_first___player_on_module___ = \"r_03_be_one_of_the_first___player_on_module___\"\n    r_04_be_one_of_the_first___players_on_the_project = \"r_04_be_one_of_the_first___players_on_the_project\"\n    r_05_earn_min_half_point_in_each_module = \"r_05_earn_min_half_point_in_each_module\"\n    # r_06_min___point_on_module___ = \"r_06_min___point_on_module___\"\nclass AchievementForEnum(Enum):\n    individual = \"individual\"\n    team = \"team\"",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "documentation": {}
    },
    {
        "label": "AchievementForEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "peekOfCode": "class AchievementForEnum(Enum):\n    individual = \"individual\"\n    team = \"team\"\nclass AchievementCreateRequest(BaseModel):\n    projectId: int\n    title: str\n    # photoUrl: str\n    descriptionBeforeUnLocked: Optional[str] = None\n    descriptionAfterUnLocked: Optional[str] = None\n    rule: AchievementRuleEnum",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "documentation": {}
    },
    {
        "label": "AchievementCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "peekOfCode": "class AchievementCreateRequest(BaseModel):\n    projectId: int\n    title: str\n    # photoUrl: str\n    descriptionBeforeUnLocked: Optional[str] = None\n    descriptionAfterUnLocked: Optional[str] = None\n    rule: AchievementRuleEnum\n    achievementFor: AchievementForEnum\n    # Rule-specific fields\n    r_01_minPoint: Optional[int] = None",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "documentation": {}
    },
    {
        "label": "AchievementCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "peekOfCode": "class AchievementCreateResponse(BaseModel):\n    id: int\n    projectId: int\n    title: str\n    photoUrl: Optional[str] = None\n    descriptionBeforeUnLocked: Optional[str] = None\n    descriptionAfterUnLocked: Optional[str] = None\n    rule: AchievementRuleEnum\n    achievementFor: AchievementForEnum\n    # Rule-specific fields",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "documentation": {}
    },
    {
        "label": "AchievementGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "peekOfCode": "class AchievementGetResponse(AchievementCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.achievements.schemas",
        "documentation": {}
    },
    {
        "label": "Arrangement",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.models",
        "peekOfCode": "class Arrangement(Base):\n    __tablename__ = \"arrangements\"\n    id = Column(Integer, primary_key=True, index=True)\n    projectId = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), unique=True, nullable=False)\n    eventStartsOn = Column(DateTime(timezone=True), nullable=True)\n    eventEndsOn = Column(DateTime(timezone=True), nullable=True)\n    eventLocation = Column(String(255), nullable=True)\n    latitude = Column(Integer, nullable=True)\n    longitude = Column(Integer, nullable=True)\n    publishedOn = Column(DateTime(timezone=True), server_default=func.now())",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.models",
        "documentation": {}
    },
    {
        "label": "arrangement_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.routers",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.routers",
        "peekOfCode": "arrangement_router = APIRouter()\n@arrangement_router.post(\"/create_arrangement\"\n                     ,response_model=Response[ArrangementCreateResponse]\n                     )\nasync def create_arrangement_(\n    request: Request,\n    body: ArrangementCreateRequest,\n    db: AsyncSession = Depends(get_db),\n):\n    auth = get_auth(request)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.routers",
        "documentation": {}
    },
    {
        "label": "ArrangementCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.schemas",
        "peekOfCode": "class ArrangementCreateRequest(BaseModel):\n    projectId: int\n    eventStartsOn: Optional[datetime] = None\n    eventEndsOn: Optional[datetime] = None\n    eventLocation: Optional[str] = None\n    latitude: Optional[int] = None\n    longitude: Optional[int] = None\n    publishedOn: Optional[datetime] = None\n    expiredOn: Optional[datetime] = None\n    @model_validator(mode=\"before\")",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.schemas",
        "documentation": {}
    },
    {
        "label": "ArrangementCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.schemas",
        "peekOfCode": "class ArrangementCreateResponse(BaseModel):\n    id: int\n    projectId: int\n    eventStartsOn:  Optional[datetime] = None\n    eventEndsOn:  Optional[datetime] = None\n    eventLocation: Optional[str] = None\n    latitude: Optional[int] = None\n    longitude: Optional[int] = None\n    publishedOn:  Optional[datetime] = None\n    expiredOn: Optional[datetime] = None",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.schemas",
        "documentation": {}
    },
    {
        "label": "ArrangementGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.schemas",
        "peekOfCode": "class ArrangementGetResponse(ArrangementCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.arrangements.schemas",
        "documentation": {}
    },
    {
        "label": "PointShareType",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.models",
        "peekOfCode": "class PointShareType(str, enum.Enum):\n    individual = \"individual\"\n    shared = \"shared\"\nclass Configuration(Base):\n    __tablename__ = \"configurations\"\n    id = Column(Integer, primary_key=True, index=True)\n    projectId = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), unique=True, nullable=False)\n    guestViewable = Column(Boolean, default=False)\n    enabledDiscussion = Column(Boolean, default=False)\n    individual = Column(Boolean, default=True)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.models",
        "documentation": {}
    },
    {
        "label": "Configuration",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.models",
        "peekOfCode": "class Configuration(Base):\n    __tablename__ = \"configurations\"\n    id = Column(Integer, primary_key=True, index=True)\n    projectId = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), unique=True, nullable=False)\n    guestViewable = Column(Boolean, default=False)\n    enabledDiscussion = Column(Boolean, default=False)\n    individual = Column(Boolean, default=True)\n    team = Column(Boolean, default=False)\n    teamSizeMin = Column(Integer, nullable=True)\n    teamSizeMax = Column(Integer, nullable=True)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.models",
        "documentation": {}
    },
    {
        "label": "projectConfiguration_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.routers",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.routers",
        "peekOfCode": "projectConfiguration_router = APIRouter()\n@projectConfiguration_router.post(\"/create_project_configuration\"\n                     ,response_model=Response[ProjectConfigurationCreateResponse]\n                     )\nasync def create_project_configuration_(\n    request: Request,\n    body: ProjectConfigurationCreateRequest,\n    db: AsyncSession = Depends(get_db),\n):\n    auth = get_auth(request)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.routers",
        "documentation": {}
    },
    {
        "label": "PointShareType",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "peekOfCode": "class PointShareType(str, Enum):\n    individual = \"individual\"\n    shared = \"shared\"\nclass ProjectConfigurationCreateRequest(BaseModel):\n    projectId: int\n    guestViewable: bool\n    enabledDiscussion: bool\n    individual: bool\n    team: bool\n    teamSizeMin: Optional[int] = None",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectConfigurationCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "peekOfCode": "class ProjectConfigurationCreateRequest(BaseModel):\n    projectId: int\n    guestViewable: bool\n    enabledDiscussion: bool\n    individual: bool\n    team: bool\n    teamSizeMin: Optional[int] = None\n    teamSizeMax: Optional[int] = None\n    pointShare: PointShareType\n    @model_validator(mode=\"before\")",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectConfigurationCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "peekOfCode": "class ProjectConfigurationCreateResponse(BaseModel):\n    id: int\n    projectId: int\n    guestViewable: bool\n    enabledDiscussion: bool\n    individual: bool\n    team: bool\n    teamSizeMin: Optional[int] = None\n    teamSizeMax: Optional[int] = None\n    pointShare: PointShareType",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectConfigurationGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "peekOfCode": "class ProjectConfigurationGetResponse(ProjectConfigurationCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.configurations.schemas",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.router",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.router",
        "peekOfCode": "router = APIRouter(prefix=\"/dashboard\", tags=[\"Project Dashboard\"])\n# Simplified endpoints for now - will be enhanced later\n@router.get(\"/test\")\nasync def test_dashboard_endpoint():\n    \"\"\"\n    Test endpoint to verify dashboard router is working\n    \"\"\"\n    return {\"message\": \"Project dashboard system is ready for implementation\"}",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.router",
        "documentation": {}
    },
    {
        "label": "SolverInfo",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class SolverInfo(BaseModel):\n    id: Optional[int] = None\n    name: str\n    userName: str\n    photoUrl: Optional[str] = None\n    email: Optional[str] = None\nclass SubmissionProgress(BaseModel):\n    completedModules: int\n    totalModules: int\n    percentage: float",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionProgress",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class SubmissionProgress(BaseModel):\n    completedModules: int\n    totalModules: int\n    percentage: float\nclass ModuleSubmissionSummary(BaseModel):\n    id: int\n    moduleId: int\n    moduleTitle: str\n    status: str\n    point: Optional[int] = None",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleSubmissionSummary",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class ModuleSubmissionSummary(BaseModel):\n    id: int\n    moduleId: int\n    moduleTitle: str\n    status: str\n    point: Optional[int] = None\n    maxPoints: int\n    createdAt: datetime\n    updatedAt: Optional[datetime] = None\nclass ProjectSubmissionSummary(BaseModel):",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectSubmissionSummary",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class ProjectSubmissionSummary(BaseModel):\n    id: int\n    userId: int\n    solver: SolverInfo\n    status: str\n    point: Optional[int] = None\n    createdAt: datetime\n    updatedAt: Optional[datetime] = None\n    progress: SubmissionProgress\n    moduleSubmissions: List[ModuleSubmissionSummary]",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectInfo",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class ProjectInfo(BaseModel):\n    id: int\n    title: str\n    description: Optional[str] = None\n    createdByUserId: int\n    createdAt: datetime\n    totalModules: int\nclass ModuleInfo(BaseModel):\n    id: int\n    title: str",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleInfo",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class ModuleInfo(BaseModel):\n    id: int\n    title: str\n    description: Optional[str] = None\n    points: int\n    submissionsCount: int\nclass DashboardStatistics(BaseModel):\n    totalSubmissions: int\n    pendingReview: int\n    approved: int",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "DashboardStatistics",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class DashboardStatistics(BaseModel):\n    totalSubmissions: int\n    pendingReview: int\n    approved: int\n    rejected: int\n    uniqueSolvers: int\nclass ProjectSolutionsDashboardResponse(BaseModel):\n    project: ProjectInfo\n    submissions: List[ProjectSubmissionSummary]\n    statistics: DashboardStatistics",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectSolutionsDashboardResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class ProjectSolutionsDashboardResponse(BaseModel):\n    project: ProjectInfo\n    submissions: List[ProjectSubmissionSummary]\n    statistics: DashboardStatistics\n    modules: List[ModuleInfo]\nclass SubmittalSubmissionDetail(BaseModel):\n    id: int\n    submittalId: int\n    submissionText: Optional[str] = None\n    submissionLink: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalSubmissionDetail",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class SubmittalSubmissionDetail(BaseModel):\n    id: int\n    submittalId: int\n    submissionText: Optional[str] = None\n    submissionLink: Optional[str] = None\n    submissionFile: Optional[str] = None\n    createdAt: datetime\n    updatedAt: Optional[datetime] = None\nclass ModuleSubmissionDetail(BaseModel):\n    id: int",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleSubmissionDetail",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class ModuleSubmissionDetail(BaseModel):\n    id: int\n    moduleId: int\n    moduleTitle: str\n    moduleDescription: Optional[str] = None\n    status: str\n    point: Optional[int] = None\n    maxPoints: int\n    createdAt: datetime\n    updatedAt: Optional[datetime] = None",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionDetail",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class SubmissionDetail(BaseModel):\n    id: int\n    projectId: int\n    userId: int\n    status: str\n    point: Optional[int] = None\n    createdAt: datetime\n    updatedAt: Optional[datetime] = None\nclass SubmissionDetailsResponse(BaseModel):\n    submission: SubmissionDetail",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionDetailsResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class SubmissionDetailsResponse(BaseModel):\n    submission: SubmissionDetail\n    project: ProjectInfo\n    solver: SolverInfo\n    moduleSubmissions: List[ModuleSubmissionDetail]\nclass ProjectStatisticsResponse(BaseModel):\n    totalSubmissions: int\n    pendingSubmissions: int\n    approvedSubmissions: int\n    rejectedSubmissions: int",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectStatisticsResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class ProjectStatisticsResponse(BaseModel):\n    totalSubmissions: int\n    pendingSubmissions: int\n    approvedSubmissions: int\n    rejectedSubmissions: int\n    uniqueSolvers: int\n    averageScore: float\nclass DashboardFilterRequest(BaseModel):\n    status: Optional[str] = None  # \"pending\", \"approved\", \"rejected\"\n    solverId: Optional[int] = None",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "DashboardFilterRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "peekOfCode": "class DashboardFilterRequest(BaseModel):\n    status: Optional[str] = None  # \"pending\", \"approved\", \"rejected\"\n    solverId: Optional[int] = None\n    moduleId: Optional[int] = None\n    sortBy: Optional[str] = \"createdAt\"  # \"createdAt\", \"point\", \"status\"\n    sortOrder: Optional[str] = \"desc\"  # \"asc\", \"desc\"\n    limit: Optional[int] = 50\n    offset: Optional[int] = 0",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.schemas",
        "documentation": {}
    },
    {
        "label": "get_project_solutions_dashboard",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.services",
        "peekOfCode": "def get_project_solutions_dashboard(db: Session, project_id: int, user_id: int) -> Dict[str, Any]:\n    \"\"\"\n    Get comprehensive project solutions dashboard\n    Only project creators, assigned judges, and admins can view\n    \"\"\"\n    # Verify the project exists and user has permission\n    project = get_project_by_id(db, project_id)\n    if not project:\n        raise ValueError(\"Project not found\")\n    user = get_user_by_id(db, user_id)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.services",
        "documentation": {}
    },
    {
        "label": "get_submission_details",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.services",
        "peekOfCode": "def get_submission_details(db: Session, submission_id: int, user_id: int) -> Dict[str, Any]:\n    \"\"\"\n    Get detailed submission information for scoring\n    Only project creators, assigned judges, and admins can view\n    \"\"\"\n    # Get the submission\n    submission = db.query(SubmissionForProject).filter(\n        SubmissionForProject.id == submission_id\n    ).first()\n    if not submission:",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.services",
        "documentation": {}
    },
    {
        "label": "get_project_submission_statistics",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.services",
        "peekOfCode": "def get_project_submission_statistics(db: Session, project_id: int, user_id: int) -> Dict[str, Any]:\n    \"\"\"\n    Get project submission statistics\n    Only project creators, assigned judges, and admins can view\n    \"\"\"\n    # Verify permissions (same as dashboard)\n    project = get_project_by_id(db, project_id)\n    if not project:\n        raise ValueError(\"Project not found\")\n    user = get_user_by_id(db, user_id)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.dashboard.services",
        "documentation": {}
    },
    {
        "label": "ProjectJudge",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.models",
        "peekOfCode": "class ProjectJudge(Base):\n    \"\"\"\n    Model for assigning judges to projects\n    Only project creators and system admins can assign judges\n    \"\"\"\n    __tablename__ = \"projectJudges\"\n    id = Column(Integer, primary_key=True, index=True)\n    projectId = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)\n    judgeUserId = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False)\n    assignedByUserId = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.models",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.router",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.router",
        "peekOfCode": "router = APIRouter(prefix=\"/judges\", tags=[\"Project Judges\"])\n@router.post(\"/assign\", response_model=Response[ProjectJudgeCreateResponse])\nasync def assign_judge(\n    request: ProjectJudgeCreateRequest,\n    db: Session = Depends(get_db),\n    current_user: dict = Depends(get_auth)\n):\n    \"\"\"\n    Assign a judge to a project\n    Only project creators and admins can assign judges",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.router",
        "documentation": {}
    },
    {
        "label": "ProjectJudgeCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "peekOfCode": "class ProjectJudgeCreateRequest(BaseModel):\n    projectId: int\n    judgeUserId: int\n    canScoreModules: bool = True\n    canViewAllSubmissions: bool = True\n    invitationMessage: Optional[str] = None\nclass ProjectJudgeCreateResponse(BaseModel):\n    id: int\n    projectId: int\n    judgeUserId: int",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectJudgeCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "peekOfCode": "class ProjectJudgeCreateResponse(BaseModel):\n    id: int\n    projectId: int\n    judgeUserId: int\n    assignedByUserId: int\n    isActive: bool\n    canScoreModules: bool\n    canViewAllSubmissions: bool\n    invitationMessage: Optional[str] = None\n    invitationAccepted: bool",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectJudgeGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "peekOfCode": "class ProjectJudgeGetResponse(ProjectJudgeCreateResponse):\n    pass\nclass ProjectJudgeUpdateRequest(BaseModel):\n    isActive: Optional[bool] = None\n    canScoreModules: Optional[bool] = None\n    canViewAllSubmissions: Optional[bool] = None\n    invitationMessage: Optional[str] = None\nclass ProjectJudgeUpdateResponse(ProjectJudgeCreateResponse):\n    pass\nclass ProjectJudgeInvitationAcceptRequest(BaseModel):",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectJudgeUpdateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "peekOfCode": "class ProjectJudgeUpdateRequest(BaseModel):\n    isActive: Optional[bool] = None\n    canScoreModules: Optional[bool] = None\n    canViewAllSubmissions: Optional[bool] = None\n    invitationMessage: Optional[str] = None\nclass ProjectJudgeUpdateResponse(ProjectJudgeCreateResponse):\n    pass\nclass ProjectJudgeInvitationAcceptRequest(BaseModel):\n    projectId: int\n    accept: bool",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectJudgeUpdateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "peekOfCode": "class ProjectJudgeUpdateResponse(ProjectJudgeCreateResponse):\n    pass\nclass ProjectJudgeInvitationAcceptRequest(BaseModel):\n    projectId: int\n    accept: bool\nclass ProjectJudgeInvitationAcceptResponse(ProjectJudgeCreateResponse):\n    pass\nclass ProjectJudgeListResponse(BaseModel):\n    id: int\n    projectId: int",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectJudgeInvitationAcceptRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "peekOfCode": "class ProjectJudgeInvitationAcceptRequest(BaseModel):\n    projectId: int\n    accept: bool\nclass ProjectJudgeInvitationAcceptResponse(ProjectJudgeCreateResponse):\n    pass\nclass ProjectJudgeListResponse(BaseModel):\n    id: int\n    projectId: int\n    judgeUserId: int\n    judgeName: str",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectJudgeInvitationAcceptResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "peekOfCode": "class ProjectJudgeInvitationAcceptResponse(ProjectJudgeCreateResponse):\n    pass\nclass ProjectJudgeListResponse(BaseModel):\n    id: int\n    projectId: int\n    judgeUserId: int\n    judgeName: str\n    judgeUserName: str\n    judgePhotoUrl: Optional[str] = None\n    assignedByUserId: int",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectJudgeListResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "peekOfCode": "class ProjectJudgeListResponse(BaseModel):\n    id: int\n    projectId: int\n    judgeUserId: int\n    judgeName: str\n    judgeUserName: str\n    judgePhotoUrl: Optional[str] = None\n    assignedByUserId: int\n    assignedByName: str\n    isActive: bool",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "documentation": {}
    },
    {
        "label": "JudgePanelProjectResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "peekOfCode": "class JudgePanelProjectResponse(BaseModel):\n    \"\"\"Response model for judge panel showing projects where user is a judge\"\"\"\n    id: int\n    projectId: int\n    projectTitle: str\n    projectDescription: Optional[str] = None\n    projectCreatorName: str\n    canScoreModules: bool\n    canViewAllSubmissions: bool\n    invitationAccepted: bool",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "documentation": {}
    },
    {
        "label": "JudgeInvitationSummary",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "peekOfCode": "class JudgeInvitationSummary(BaseModel):\n    \"\"\"Summary of pending judge invitations\"\"\"\n    totalInvitations: int\n    pendingInvitations: int\n    acceptedInvitations: int\n    declinedInvitations: int",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.schemas",
        "documentation": {}
    },
    {
        "label": "get_user_by_id",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "peekOfCode": "def get_user_by_id(db: Session, user_id: int) -> User:\n    \"\"\"Get user by ID synchronously\"\"\"\n    return db.query(User).filter(User.id == user_id).first()\ndef get_project_by_id(db: Session, project_id: int) -> Project:\n    \"\"\"Get project by ID synchronously\"\"\"\n    return db.query(Project).filter(Project.id == project_id).first()\ndef create_project_judge(db: Session, request: ProjectJudgeCreateRequest, assigned_by_user_id: int) -> ProjectJudgeCreateResponse:\n    \"\"\"\n    Create a new project judge assignment\n    Only project creators and system admins can assign judges",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "documentation": {}
    },
    {
        "label": "get_project_by_id",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "peekOfCode": "def get_project_by_id(db: Session, project_id: int) -> Project:\n    \"\"\"Get project by ID synchronously\"\"\"\n    return db.query(Project).filter(Project.id == project_id).first()\ndef create_project_judge(db: Session, request: ProjectJudgeCreateRequest, assigned_by_user_id: int) -> ProjectJudgeCreateResponse:\n    \"\"\"\n    Create a new project judge assignment\n    Only project creators and system admins can assign judges\n    \"\"\"\n    # Verify the project exists and user has permission\n    project = get_project_by_id(db, request.projectId)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "documentation": {}
    },
    {
        "label": "create_project_judge",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "peekOfCode": "def create_project_judge(db: Session, request: ProjectJudgeCreateRequest, assigned_by_user_id: int) -> ProjectJudgeCreateResponse:\n    \"\"\"\n    Create a new project judge assignment\n    Only project creators and system admins can assign judges\n    \"\"\"\n    # Verify the project exists and user has permission\n    project = get_project_by_id(db, request.projectId)\n    if not project:\n        raise ValueError(\"Project not found\")\n    # Check if user is project creator or admin",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "documentation": {}
    },
    {
        "label": "get_project_judges",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "peekOfCode": "def get_project_judges(db: Session, project_id: int, user_id: int) -> List[ProjectJudgeListResponse]:\n    \"\"\"\n    Get all judges for a project\n    Only project creators, assigned judges, and admins can view\n    \"\"\"\n    # Verify the project exists and user has permission\n    project = get_project_by_id(db, project_id)\n    if not project:\n        raise ValueError(\"Project not found\")\n    user = get_user_by_id(db, user_id)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "documentation": {}
    },
    {
        "label": "update_project_judge",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "peekOfCode": "def update_project_judge(db: Session, judge_id: int, request: ProjectJudgeUpdateRequest, user_id: int) -> ProjectJudgeUpdateResponse:\n    \"\"\"\n    Update a project judge assignment\n    Only project creators and admins can update\n    \"\"\"\n    # Get the judge assignment\n    project_judge = db.query(ProjectJudge).filter(ProjectJudge.id == judge_id).first()\n    if not project_judge:\n        raise ValueError(\"Judge assignment not found\")\n    # Verify permissions",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "documentation": {}
    },
    {
        "label": "accept_judge_invitation",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "peekOfCode": "def accept_judge_invitation(db: Session, request: ProjectJudgeInvitationAcceptRequest, user_id: int) -> ProjectJudgeInvitationAcceptResponse:\n    \"\"\"\n    Accept or decline a judge invitation\n    Only the invited judge can accept/decline\n    \"\"\"\n    # Get the judge assignment\n    project_judge = db.query(ProjectJudge).filter(\n        and_(\n            ProjectJudge.projectId == request.projectId,\n            ProjectJudge.judgeUserId == user_id,",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "documentation": {}
    },
    {
        "label": "get_user_judge_assignments",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "peekOfCode": "def get_user_judge_assignments(db: Session, user_id: int) -> List[ProjectJudgeListResponse]:\n    \"\"\"\n    Get all judge assignments for a user\n    \"\"\"\n    judges = db.query(ProjectJudge).filter(\n        and_(\n            ProjectJudge.judgeUserId == user_id,\n            ProjectJudge.isActive == True\n        )\n    ).all()",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "documentation": {}
    },
    {
        "label": "remove_project_judge",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "peekOfCode": "def remove_project_judge(db: Session, judge_id: int, user_id: int) -> bool:\n    \"\"\"\n    Remove a judge from a project\n    Only project creators and admins can remove judges\n    \"\"\"\n    # Get the judge assignment\n    project_judge = db.query(ProjectJudge).filter(ProjectJudge.id == judge_id).first()\n    if not project_judge:\n        raise ValueError(\"Judge assignment not found\")\n    # Verify permissions",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "documentation": {}
    },
    {
        "label": "get_judge_panel_projects",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "peekOfCode": "def get_judge_panel_projects(db: Session, user_id: int) -> List[JudgePanelProjectResponse]:\n    \"\"\"\n    Get all projects where the user is assigned as a judge\n    Returns detailed project information for the judge panel\n    \"\"\"\n    judges = db.query(ProjectJudge).filter(\n        and_(\n            ProjectJudge.judgeUserId == user_id,\n            ProjectJudge.isActive == True\n        )",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "documentation": {}
    },
    {
        "label": "get_judge_invitation_summary",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "peekOfCode": "def get_judge_invitation_summary(db: Session, user_id: int) -> JudgeInvitationSummary:\n    \"\"\"\n    Get summary of judge invitations for a user\n    \"\"\"\n    judges = db.query(ProjectJudge).filter(\n        and_(\n            ProjectJudge.judgeUserId == user_id,\n            ProjectJudge.isActive == True\n        )\n    ).all()",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.judges.services",
        "documentation": {}
    },
    {
        "label": "RequirementType",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "peekOfCode": "class RequirementType(enum.Enum):\n    text = \"text\"\n    link = \"link\"\n    file = \"file\"\nclass Requirement(Base):\n    __tablename__ = \"requirements\"\n    id = Column(Integer, primary_key=True, index=True)\n    moduleId = Column(Integer, ForeignKey(\"modules.id\", ondelete=\"CASCADE\"), nullable=False)\n    requirement_no = Column(Integer, nullable=False)\n    title = Column(String, nullable=False)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "documentation": {}
    },
    {
        "label": "Requirement",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "peekOfCode": "class Requirement(Base):\n    __tablename__ = \"requirements\"\n    id = Column(Integer, primary_key=True, index=True)\n    moduleId = Column(Integer, ForeignKey(\"modules.id\", ondelete=\"CASCADE\"), nullable=False)\n    requirement_no = Column(Integer, nullable=False)\n    title = Column(String, nullable=False)\n    type = Column(Enum(RequirementType), nullable=False)\n    text = Column(String, nullable=True)\n    link = Column(String, nullable=True)\n    file = Column(String, nullable=True)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.models",
        "documentation": {}
    },
    {
        "label": "requirement_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.routers",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.routers",
        "peekOfCode": "requirement_router = APIRouter()\n@requirement_router.post(\"/create_requirement\", response_model=Response[RequirementCreateResponse])\nasync def create_requirement_(\n    request: Request,\n    db: AsyncSession = Depends(get_db),\n    payload: str = Form(...),\n    file: Optional[UploadFile] = File(None),\n):\n    data = {}\n    try:",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.routers",
        "documentation": {}
    },
    {
        "label": "RequirementCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "peekOfCode": "class RequirementCreateRequest(BaseModel):\n    moduleId: int\n    requirement_no: int\n    title: str\n    type: RequirementType\n    text: Optional[str] = None\n    link: Optional[str] = None\n    file: Optional[str] = None\n    @model_validator(mode=\"before\")\n    @classmethod",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "documentation": {}
    },
    {
        "label": "RequirementCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "peekOfCode": "class RequirementCreateResponse(BaseModel):\n    id: int\n    moduleId: int\n    requirement_no: int\n    title: str\n    type: RequirementType\n    text: Optional[str] = None\n    link: Optional[str] = None\n    file: Optional[str] = None\n    class Config:",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "documentation": {}
    },
    {
        "label": "RequirementGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "peekOfCode": "class RequirementGetResponse(RequirementCreateResponse):\n    pass\nclass RequirementUpdateRequest(BaseModel):\n    requirement_no: Optional[int] = None\n    title: Optional[str] = None\n    type: Optional[RequirementType] = None\n    text: Optional[str] = None\n    link: Optional[str] = None\n    file: Optional[str] = None\n    @model_validator(mode=\"before\")",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "documentation": {}
    },
    {
        "label": "RequirementUpdateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "peekOfCode": "class RequirementUpdateRequest(BaseModel):\n    requirement_no: Optional[int] = None\n    title: Optional[str] = None\n    type: Optional[RequirementType] = None\n    text: Optional[str] = None\n    link: Optional[str] = None\n    file: Optional[str] = None\n    @model_validator(mode=\"before\")\n    @classmethod\n    def validate_fields(cls, values):",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.requirements.schemas",
        "documentation": {}
    },
    {
        "label": "Standard",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.standard.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.standard.models",
        "peekOfCode": "class Standard(Base):\n    __tablename__ = \"standards\"\n    id = Column(Integer, primary_key=True, index=True)\n    moduleId = Column(Integer, ForeignKey(\"modules.id\", ondelete=\"CASCADE\"), nullable=False)\n    title = Column(String, nullable=False)\n    description = Column(String, nullable=True)\n    photo_url = Column(String, nullable=True)\n    # Relationship (optional, if you want bidirectional access)\n    module = relationship(\"Module\", back_populates=\"standard\")",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.standard.models",
        "documentation": {}
    },
    {
        "label": "SubmittalType",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "peekOfCode": "class SubmittalType(enum.Enum):\n    text = \"text\"\n    link = \"link\"\n    file = \"file\"\nclass Submittal(Base):\n    __tablename__ = \"submittals\"\n    id = Column(Integer, primary_key=True, index=True)\n    moduleId = Column(Integer, ForeignKey(\"modules.id\", ondelete=\"CASCADE\"), nullable=False)\n    requirement_no = Column(Integer, nullable=False)\n    title = Column(String, nullable=False)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "documentation": {}
    },
    {
        "label": "Submittal",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "peekOfCode": "class Submittal(Base):\n    __tablename__ = \"submittals\"\n    id = Column(Integer, primary_key=True, index=True)\n    moduleId = Column(Integer, ForeignKey(\"modules.id\", ondelete=\"CASCADE\"), nullable=False)\n    requirement_no = Column(Integer, nullable=False)\n    title = Column(String, nullable=False)\n    type = Column(Enum(SubmittalType), nullable=False)\n    # Relationship (optional, if needed in queries)\n    module = relationship(\"Module\", back_populates=\"submittals\")",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.models",
        "documentation": {}
    },
    {
        "label": "submittal_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.routers",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.routers",
        "peekOfCode": "submittal_router = APIRouter()\n@submittal_router.post(\"/create_submittal\", response_model=Response[SubmittalCreateResponse])\nasync def create_submittal_(\n    request: Request,\n    submittal_data: dict = Body(...),\n    db: AsyncSession = Depends(get_db),\n):\n    try:\n        validated_data = SubmittalCreateRequest(**submittal_data)\n    except Exception as e:",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.routers",
        "documentation": {}
    },
    {
        "label": "SubmittalCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "peekOfCode": "class SubmittalCreateRequest(BaseModel):\n    moduleId: int\n    requirement_no: int\n    title: str\n    type: SubmittalType\n    @model_validator(mode=\"before\")\n    @classmethod\n    def validate_fields(cls, values):\n        required_fields = [\"moduleId\", \"requirement_no\", \"title\", \"type\"]\n        for field in required_fields:",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "peekOfCode": "class SubmittalCreateResponse(BaseModel):\n    id: int\n    moduleId: int\n    requirement_no: int\n    title: str\n    type: SubmittalType\n    class Config:\n        orm_mode = True\nclass SubmittalGetResponse(SubmittalCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "peekOfCode": "class SubmittalGetResponse(SubmittalCreateResponse):\n    pass\nclass SubmittalUpdateRequest(BaseModel):\n    requirement_no: Optional[int] = None\n    title: Optional[str] = None\n    type: Optional[SubmittalType] = None\n    @model_validator(mode=\"before\")\n    @classmethod\n    def validate_fields(cls, values):\n        # Validate type if provided",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalUpdateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "peekOfCode": "class SubmittalUpdateRequest(BaseModel):\n    requirement_no: Optional[int] = None\n    title: Optional[str] = None\n    type: Optional[SubmittalType] = None\n    @model_validator(mode=\"before\")\n    @classmethod\n    def validate_fields(cls, values):\n        # Validate type if provided\n        sub_type = values.get(\"type\")\n        if sub_type is not None and not isinstance(sub_type, SubmittalType):",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.relatedEntities.submittals.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleCategory",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.models",
        "peekOfCode": "class ModuleCategory(str, enum.Enum):\n    standard = \"standard\"\n    quiz = \"quiz\"\n    polls = \"polls\"\nclass Module(Base):\n    __tablename__ = \"modules\"\n    id = Column(Integer, primary_key=True, index=True)\n    projectId = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)\n    title = Column(String, nullable=False)\n    description = Column(String, nullable=True)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.models",
        "peekOfCode": "class Module(Base):\n    __tablename__ = \"modules\"\n    id = Column(Integer, primary_key=True, index=True)\n    projectId = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)\n    title = Column(String, nullable=False)\n    description = Column(String, nullable=True)\n    photo_url = Column(String, nullable=True)\n    category = Column(Enum(ModuleCategory), nullable=False)\n    points = Column(Integer, nullable=False)\n    published_on = Column(DateTime(timezone=True), server_default=func.now())",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.models",
        "documentation": {}
    },
    {
        "label": "module_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.routers",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.routers",
        "peekOfCode": "module_router = APIRouter()\n# Include sub-routers for requirements and submittals\nmodule_router.include_router(requirement_router, prefix=\"/requirements\")\nmodule_router.include_router(submittal_router, prefix=\"/submittals\")\n@module_router.post(\"/create_module\", response_model=Response[ModuleCreateResponse])\nasync def create_module_(\n    request: Request,\n    db: AsyncSession = Depends(get_db),\n    payload: str = Form(...),\n    thumbnailPhoto: Optional[UploadFile] = File(None),",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.routers",
        "documentation": {}
    },
    {
        "label": "ModuleCategoryEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "peekOfCode": "class ModuleCategoryEnum(Enum):\n    standard = \"standard\"\n    quiz = \"quiz\"\n    polls = \"polls\"\nclass ModuleCreateRequest(BaseModel):\n    projectId: int\n    title: str\n    description: Optional[str] = None\n    category: ModuleCategoryEnum\n    points: int",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "peekOfCode": "class ModuleCreateRequest(BaseModel):\n    projectId: int\n    title: str\n    description: Optional[str] = None\n    category: ModuleCategoryEnum\n    points: int\n    published_on: Optional[datetime] = None\n    expired_on: Optional[datetime] = None\n    module_no: int\n    has_locked: bool = False",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "peekOfCode": "class ModuleCreateResponse(BaseModel):\n    id: int\n    projectId: int\n    title: str\n    description: Optional[str] = None\n    photo_url: Optional[str] = None\n    category: ModuleCategoryEnum\n    points: int\n    published_on: Optional[datetime] = None\n    expired_on: Optional[datetime] = None",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "peekOfCode": "class ModuleGetResponse(ModuleCreateResponse):\n    pass\nclass ModuleUpdateRequest(BaseModel):\n    title: Optional[str] = None\n    description: Optional[str] = None\n    category: Optional[ModuleCategoryEnum] = None\n    points: Optional[int] = None\n    published_on: Optional[datetime] = None\n    expired_on: Optional[datetime] = None\n    module_no: Optional[int] = None",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleUpdateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "peekOfCode": "class ModuleUpdateRequest(BaseModel):\n    title: Optional[str] = None\n    description: Optional[str] = None\n    category: Optional[ModuleCategoryEnum] = None\n    points: Optional[int] = None\n    published_on: Optional[datetime] = None\n    expired_on: Optional[datetime] = None\n    module_no: Optional[int] = None\n    has_locked: Optional[bool] = None\n    message_to_show_after_completion: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.modules.schemas",
        "documentation": {}
    },
    {
        "label": "RewardForEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.models",
        "peekOfCode": "class RewardForEnum(str, enum.Enum):\n    individual = \"individual\"\n    team = \"team\"\nclass Reward(Base):\n    __tablename__ = \"rewards\"\n    id = Column(Integer, primary_key=True, index=True)\n    projectId = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)\n    title = Column(String(255), nullable=False)\n    photoUrl = Column(String(255), nullable=True)\n    description = Column(Text, nullable=True)",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.models",
        "documentation": {}
    },
    {
        "label": "Reward",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.models",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.models",
        "peekOfCode": "class Reward(Base):\n    __tablename__ = \"rewards\"\n    id = Column(Integer, primary_key=True, index=True)\n    projectId = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)\n    title = Column(String(255), nullable=False)\n    photoUrl = Column(String(255), nullable=True)\n    description = Column(Text, nullable=True)\n    rewardFor = Column(Enum(RewardForEnum), nullable=False)\n    # Relationships\n    project = relationship(\"Project\", back_populates=\"rewards\")",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.models",
        "documentation": {}
    },
    {
        "label": "reward_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.routers",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.routers",
        "peekOfCode": "reward_router = APIRouter()\n@reward_router.post(\"/create_reward\"\n                     ,response_model=Response[RewardCreateResponse]\n                     )\nasync def create_reward_(\n    request: Request,\n    db: AsyncSession = Depends(get_db),\n    payload: str = Form(...),\n    thumbnailPhoto: Optional[UploadFile] = File(None),\n):",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.routers",
        "documentation": {}
    },
    {
        "label": "RewardForEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "peekOfCode": "class RewardForEnum(Enum):\n    individual = \"individual\"\n    team = \"team\"\nclass RewardCreateRequest(BaseModel):\n    projectId: int\n    title: str\n    # photoUrl: Optional[str] = None\n    description: Optional[str] = None\n    rewardFor: RewardForEnum\n    @model_validator(mode=\"before\")",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "documentation": {}
    },
    {
        "label": "RewardCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "peekOfCode": "class RewardCreateRequest(BaseModel):\n    projectId: int\n    title: str\n    # photoUrl: Optional[str] = None\n    description: Optional[str] = None\n    rewardFor: RewardForEnum\n    @model_validator(mode=\"before\")\n    @classmethod\n    def validate_fields(cls, values):\n        required_fields = [\"projectId\", \"title\", \"rewardFor\"]",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "documentation": {}
    },
    {
        "label": "RewardCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "peekOfCode": "class RewardCreateResponse(BaseModel):\n    id: int\n    projectId: int\n    title: str\n    photoUrl: Optional[str] = None\n    description: Optional[str] = None\n    rewardFor: RewardForEnum\n    createdAt: datetime\n    updatedAt: Optional[datetime] = None\n    class Config:",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "documentation": {}
    },
    {
        "label": "RewardGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "description": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "peekOfCode": "class RewardGetResponse(RewardCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.projects.relatedEntities.rewards.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectPrivacy",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.models",
        "description": "onchain_fastapi.app.modules.projects.models",
        "peekOfCode": "class ProjectPrivacy(enum.Enum):\n    public = \"public\"\n    private = \"private\"\nclass DifficultyLevel(enum.Enum):\n    easy = \"easy\"\n    medium = \"medium\"\n    hard = \"hard\"\nclass Project(Base):\n    __tablename__ = \"projects\"\n    id = Column(Integer, primary_key=True, index=True)",
        "detail": "onchain_fastapi.app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "DifficultyLevel",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.models",
        "description": "onchain_fastapi.app.modules.projects.models",
        "peekOfCode": "class DifficultyLevel(enum.Enum):\n    easy = \"easy\"\n    medium = \"medium\"\n    hard = \"hard\"\nclass Project(Base):\n    __tablename__ = \"projects\"\n    id = Column(Integer, primary_key=True, index=True)\n    title = Column(String(255), nullable=False)\n    description = Column(Text, nullable=False)\n    photoUrl = Column(String(255), nullable=True)",
        "detail": "onchain_fastapi.app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.models",
        "description": "onchain_fastapi.app.modules.projects.models",
        "peekOfCode": "class Project(Base):\n    __tablename__ = \"projects\"\n    id = Column(Integer, primary_key=True, index=True)\n    title = Column(String(255), nullable=False)\n    description = Column(Text, nullable=False)\n    photoUrl = Column(String(255), nullable=True)\n    category = Column(String(100), nullable=False)\n    supportEmail = Column(String(100), nullable=False)\n    privacy = Column(Enum(ProjectPrivacy), nullable=False, default=ProjectPrivacy.public)\n    difficultyLevel = Column(Enum(DifficultyLevel), nullable=False)",
        "detail": "onchain_fastapi.app.modules.projects.models",
        "documentation": {}
    },
    {
        "label": "project_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.projects.routers",
        "description": "onchain_fastapi.app.modules.projects.routers",
        "peekOfCode": "project_router = APIRouter()\nproject_router.include_router(projectConfiguration_router, prefix=\"/project_configurations\")\nproject_router.include_router(arrangement_router, prefix=\"/project_arrangements\")\nproject_router.include_router(achievement_router, prefix=\"/project_achievements\")\nproject_router.include_router(reward_router, prefix=\"/project_rewards\")\nproject_router.include_router(module_router, prefix=\"/project_modules\")\n@project_router.post(\"/create_project\"\n                     , response_model=Response[ProjectCreateResponse]\n                     )\nasync def create_project_async (",
        "detail": "onchain_fastapi.app.modules.projects.routers",
        "documentation": {}
    },
    {
        "label": "ProjectPrivacy",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.schemas",
        "description": "onchain_fastapi.app.modules.projects.schemas",
        "peekOfCode": "class ProjectPrivacy(Enum):\n    public = \"public\"\n    private = \"private\"\nclass DifficultyLevel(Enum):\n    easy = \"easy\"\n    medium = \"medium\"\n    hard = \"hard\"\nclass ProjectCreateRequest(BaseModel):\n    title: str\n    description: str",
        "detail": "onchain_fastapi.app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "DifficultyLevel",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.schemas",
        "description": "onchain_fastapi.app.modules.projects.schemas",
        "peekOfCode": "class DifficultyLevel(Enum):\n    easy = \"easy\"\n    medium = \"medium\"\n    hard = \"hard\"\nclass ProjectCreateRequest(BaseModel):\n    title: str\n    description: str\n    category: str\n    supportEmail: str\n    privacy: ProjectPrivacy",
        "detail": "onchain_fastapi.app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.schemas",
        "description": "onchain_fastapi.app.modules.projects.schemas",
        "peekOfCode": "class ProjectCreateRequest(BaseModel):\n    title: str\n    description: str\n    category: str\n    supportEmail: str\n    privacy: ProjectPrivacy\n    difficultyLevel: DifficultyLevel\n    points: int\n    keywords: Optional[List[str]] = None\n    notePinnedForModules: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.schemas",
        "description": "onchain_fastapi.app.modules.projects.schemas",
        "peekOfCode": "class ProjectCreateResponse(BaseModel):\n    id: int\n    title: str\n    description: str\n    photoUrl: Optional[str] = None\n    category: str\n    supportEmail: str\n    privacy: str\n    difficultyLevel: str\n    points: int",
        "detail": "onchain_fastapi.app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectUpdateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.schemas",
        "description": "onchain_fastapi.app.modules.projects.schemas",
        "peekOfCode": "class ProjectUpdateResponse(ProjectCreateResponse):\n    pass\nclass ProjectGetResponse(ProjectCreateResponse):\n    pass\nclass ProjectListItem(BaseModel):\n    id: int\n    title: str\n    description: str\n    photoUrl: Optional[str] = None\n    category: str",
        "detail": "onchain_fastapi.app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.schemas",
        "description": "onchain_fastapi.app.modules.projects.schemas",
        "peekOfCode": "class ProjectGetResponse(ProjectCreateResponse):\n    pass\nclass ProjectListItem(BaseModel):\n    id: int\n    title: str\n    description: str\n    photoUrl: Optional[str] = None\n    category: str\n    privacy: str\n    difficultyLevel: str",
        "detail": "onchain_fastapi.app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectListItem",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.schemas",
        "description": "onchain_fastapi.app.modules.projects.schemas",
        "peekOfCode": "class ProjectListItem(BaseModel):\n    id: int\n    title: str\n    description: str\n    photoUrl: Optional[str] = None\n    category: str\n    privacy: str\n    difficultyLevel: str\n    points: int\n    keywords: Optional[List[str]] = None",
        "detail": "onchain_fastapi.app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectsListResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.schemas",
        "description": "onchain_fastapi.app.modules.projects.schemas",
        "peekOfCode": "class ProjectsListResponse(BaseModel):\n    projects: List[ProjectListItem]\n    total: int\n    page: int\n    limit: int\n    totalPages: int\nclass ProjectFilterRequest(BaseModel):\n    category: Optional[str] = None\n    privacy: Optional[ProjectPrivacy] = None\n    difficultyLevel: Optional[DifficultyLevel] = None",
        "detail": "onchain_fastapi.app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectFilterRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.projects.schemas",
        "description": "onchain_fastapi.app.modules.projects.schemas",
        "peekOfCode": "class ProjectFilterRequest(BaseModel):\n    category: Optional[str] = None\n    privacy: Optional[ProjectPrivacy] = None\n    difficultyLevel: Optional[DifficultyLevel] = None\n    createdByUserId: Optional[int] = None\n    keyword: Optional[str] = None\n    page: int = 1\n    limit: int = 10",
        "detail": "onchain_fastapi.app.modules.projects.schemas",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.scoring.router",
        "description": "onchain_fastapi.app.modules.scoring.router",
        "peekOfCode": "router = APIRouter(prefix=\"/scoring\", tags=[\"Scoring\"])\n# Simplified endpoints for now - will be enhanced later\n@router.get(\"/test\")\nasync def test_scoring_endpoint():\n    \"\"\"\n    Test endpoint to verify scoring router is working\n    \"\"\"\n    return {\"message\": \"Scoring system is ready for implementation\"}",
        "detail": "onchain_fastapi.app.modules.scoring.router",
        "documentation": {}
    },
    {
        "label": "ScoreModuleRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ScoreModuleRequest(BaseModel):\n    moduleSubmissionId: int\n    points: int\n    feedback: Optional[str] = None\n    @validator('points')\n    def validate_points(cls, v):\n        if v < 0:\n            raise ValueError('Points cannot be negative')\n        return v\nclass ModuleSubmissionScore(BaseModel):",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleSubmissionScore",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ModuleSubmissionScore(BaseModel):\n    id: int\n    moduleId: int\n    status: str\n    point: Optional[int] = None\n    maxPoints: int\n    updatedAt: Optional[datetime] = None\nclass ProjectSubmissionScore(BaseModel):\n    id: int\n    status: str",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "ProjectSubmissionScore",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ProjectSubmissionScore(BaseModel):\n    id: int\n    status: str\n    point: Optional[int] = None\n    updatedAt: Optional[datetime] = None\nclass ScoreModuleResponse(BaseModel):\n    moduleSubmission: ModuleSubmissionScore\n    projectSubmission: ProjectSubmissionScore\n    pointsAwarded: int\n    feedback: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "ScoreModuleResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ScoreModuleResponse(BaseModel):\n    moduleSubmission: ModuleSubmissionScore\n    projectSubmission: ProjectSubmissionScore\n    pointsAwarded: int\n    feedback: Optional[str] = None\nclass BulkScoreRequest(BaseModel):\n    projectSubmissionId: int\n    moduleScores: Dict[int, int]  # module_id -> points\n    overallFeedback: Optional[str] = None\n    @validator('moduleScores')",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "BulkScoreRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class BulkScoreRequest(BaseModel):\n    projectSubmissionId: int\n    moduleScores: Dict[int, int]  # module_id -> points\n    overallFeedback: Optional[str] = None\n    @validator('moduleScores')\n    def validate_module_scores(cls, v):\n        for module_id, points in v.items():\n            if points < 0:\n                raise ValueError(f'Points for module {module_id} cannot be negative')\n        return v",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "BulkScoreModuleResult",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class BulkScoreModuleResult(BaseModel):\n    moduleId: Optional[int] = None\n    moduleSubmission: Optional[ModuleSubmissionScore] = None\n    projectSubmission: Optional[ProjectSubmissionScore] = None\n    pointsAwarded: Optional[int] = None\n    feedback: Optional[str] = None\n    error: Optional[str] = None\nclass BulkScoreResponse(BaseModel):\n    projectSubmissionId: int\n    totalPointsAwarded: int",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "BulkScoreResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class BulkScoreResponse(BaseModel):\n    projectSubmissionId: int\n    totalPointsAwarded: int\n    moduleResults: List[BulkScoreModuleResult]\n    overallFeedback: Optional[str] = None\nclass RequirementInfo(BaseModel):\n    id: int\n    title: str\n    description: Optional[str] = None\n    type: str",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "RequirementInfo",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class RequirementInfo(BaseModel):\n    id: int\n    title: str\n    description: Optional[str] = None\n    type: str\n    fileUrl: Optional[str] = None\nclass SubmittalInfo(BaseModel):\n    id: int\n    title: str\n    type: str",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalInfo",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class SubmittalInfo(BaseModel):\n    id: int\n    title: str\n    type: str\n    requirementNo: int\nclass SubmittalSubmissionInfo(BaseModel):\n    id: int\n    submittalId: int\n    submissionText: Optional[str] = None\n    submissionLink: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "SubmittalSubmissionInfo",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class SubmittalSubmissionInfo(BaseModel):\n    id: int\n    submittalId: int\n    submissionText: Optional[str] = None\n    submissionLink: Optional[str] = None\n    submissionFile: Optional[str] = None\n    createdAt: datetime\nclass ScoringModuleSubmission(BaseModel):\n    id: int\n    moduleId: int",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "ScoringModuleSubmission",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ScoringModuleSubmission(BaseModel):\n    id: int\n    moduleId: int\n    status: str\n    point: Optional[int] = None\n    createdAt: datetime\n    updatedAt: Optional[datetime] = None\nclass ScoringModuleInfo(BaseModel):\n    id: int\n    title: str",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "ScoringModuleInfo",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ScoringModuleInfo(BaseModel):\n    id: int\n    title: str\n    description: Optional[str] = None\n    points: int\nclass ScoringProjectInfo(BaseModel):\n    id: int\n    title: str\n    description: Optional[str] = None\nclass ScoringSolverInfo(BaseModel):",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "ScoringProjectInfo",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ScoringProjectInfo(BaseModel):\n    id: int\n    title: str\n    description: Optional[str] = None\nclass ScoringSolverInfo(BaseModel):\n    id: int\n    name: str\n    userName: str\n    photoUrl: Optional[str] = None\nclass ModuleSubmissionForScoringResponse(BaseModel):",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "ScoringSolverInfo",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ScoringSolverInfo(BaseModel):\n    id: int\n    name: str\n    userName: str\n    photoUrl: Optional[str] = None\nclass ModuleSubmissionForScoringResponse(BaseModel):\n    moduleSubmission: ScoringModuleSubmission\n    module: ScoringModuleInfo\n    project: ScoringProjectInfo\n    solver: ScoringSolverInfo",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "ModuleSubmissionForScoringResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ModuleSubmissionForScoringResponse(BaseModel):\n    moduleSubmission: ScoringModuleSubmission\n    module: ScoringModuleInfo\n    project: ScoringProjectInfo\n    solver: ScoringSolverInfo\n    requirements: List[RequirementInfo]\n    submittals: List[SubmittalInfo]\n    submittalSubmissions: List[SubmittalSubmissionInfo]\nclass ScoringHistoryEntry(BaseModel):\n    id: int",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "ScoringHistoryEntry",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ScoringHistoryEntry(BaseModel):\n    id: int\n    moduleSubmissionId: int\n    moduleTitle: str\n    solverName: str\n    points: int\n    maxPoints: int\n    scoredAt: datetime\n    scoredBy: str\n    feedback: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "ScoringHistoryResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.scoring.schemas",
        "description": "onchain_fastapi.app.modules.scoring.schemas",
        "peekOfCode": "class ScoringHistoryResponse(BaseModel):\n    entries: List[ScoringHistoryEntry]\n    totalEntries: int\n    currentPage: int\n    totalPages: int",
        "detail": "onchain_fastapi.app.modules.scoring.schemas",
        "documentation": {}
    },
    {
        "label": "score_module_submission",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.scoring.services",
        "description": "onchain_fastapi.app.modules.scoring.services",
        "peekOfCode": "def score_module_submission(\n    db: Session, \n    module_submission_id: int, \n    points: int, \n    judge_user_id: int,\n    feedback: Optional[str] = None\n) -> Dict[str, Any]:\n    \"\"\"\n    Score a module submission\n    Only assigned judges and project creators can score",
        "detail": "onchain_fastapi.app.modules.scoring.services",
        "documentation": {}
    },
    {
        "label": "get_module_submission_for_scoring",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.scoring.services",
        "description": "onchain_fastapi.app.modules.scoring.services",
        "peekOfCode": "def get_module_submission_for_scoring(db: Session, module_submission_id: int, user_id: int) -> Dict[str, Any]:\n    \"\"\"\n    Get module submission details for scoring interface\n    Only assigned judges and project creators can view\n    \"\"\"\n    # Get the module submission\n    module_submission = db.query(SubmissionForModule).filter(\n        SubmissionForModule.id == module_submission_id\n    ).first()\n    if not module_submission:",
        "detail": "onchain_fastapi.app.modules.scoring.services",
        "documentation": {}
    },
    {
        "label": "bulk_score_project_submission",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.scoring.services",
        "description": "onchain_fastapi.app.modules.scoring.services",
        "peekOfCode": "def bulk_score_project_submission(\n    db: Session,\n    project_submission_id: int,\n    module_scores: Dict[int, int],  # module_id -> points\n    judge_user_id: int,\n    overall_feedback: Optional[str] = None\n) -> Dict[str, Any]:\n    \"\"\"\n    Score multiple modules in a project submission at once\n    \"\"\"",
        "detail": "onchain_fastapi.app.modules.scoring.services",
        "documentation": {}
    },
    {
        "label": "SubmittedViaEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.models",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.models",
        "peekOfCode": "class SubmittedViaEnum(str, enum.Enum):\n    user = \"user\"\n    team = \"team\"\n# Enum for status\nclass SubmissionStatusEnum(str, enum.Enum):\n    started = \"started\"\n    pending = \"pending\"\n    approved = \"approved\"\n    rejected = \"rejected\"\nclass SubmissionForModule(Base):",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.models",
        "documentation": {}
    },
    {
        "label": "SubmissionStatusEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.models",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.models",
        "peekOfCode": "class SubmissionStatusEnum(str, enum.Enum):\n    started = \"started\"\n    pending = \"pending\"\n    approved = \"approved\"\n    rejected = \"rejected\"\nclass SubmissionForModule(Base):\n    __tablename__ = \"submissionForModules\"\n    id = Column(Integer, primary_key=True, index=True)\n    module = Column(Integer, ForeignKey(\"modules.id\", ondelete=\"CASCADE\"), nullable=False)\n    project = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForModule",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.models",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.models",
        "peekOfCode": "class SubmissionForModule(Base):\n    __tablename__ = \"submissionForModules\"\n    id = Column(Integer, primary_key=True, index=True)\n    module = Column(Integer, ForeignKey(\"modules.id\", ondelete=\"CASCADE\"), nullable=False)\n    project = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)\n    user = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=True)\n    # team = Column(Integer, ForeignKey(\"teams.id\", ondelete=\"CASCADE\"), nullable=True)\n    submittedVia = Column(Enum(SubmittedViaEnum), nullable=False)\n    submittedByUserId = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False)\n    comment = Column(String, nullable=True)",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.models",
        "documentation": {}
    },
    {
        "label": "submission_for_module_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.routers",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.routers",
        "peekOfCode": "submission_for_module_router = APIRouter()\n@submission_for_module_router.post(\"/start_module\", response_model=Response[SubmissionForModuleCreateResponse])\nasync def start_module_(\n    request: Request,\n    module_data: SubmissionForModuleCreateRequest = Body(...),\n    db: AsyncSession = Depends(get_db)\n):\n    \"\"\"\n    Start a module for the authenticated user\n    \"\"\"",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.routers",
        "documentation": {}
    },
    {
        "label": "SubmissionForModuleCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "peekOfCode": "class SubmissionForModuleCreateRequest(BaseModel):\n    module_id: int\n    project_id: int\nclass SubmissionForModuleCreateResponse(BaseModel):\n    id: int\n    module: int\n    project: int\n    user: Optional[int] = None\n    submittedVia: str\n    submittedByUserId: int",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForModuleCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "peekOfCode": "class SubmissionForModuleCreateResponse(BaseModel):\n    id: int\n    module: int\n    project: int\n    user: Optional[int] = None\n    submittedVia: str\n    submittedByUserId: int\n    comment: Optional[str] = None\n    status: str\n    startedByUserId: int",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForModuleGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "peekOfCode": "class SubmissionForModuleGetResponse(SubmissionForModuleCreateResponse):\n    pass\nclass SubmissionForModuleUpdateRequest(BaseModel):\n    comment: Optional[str] = None\n    status: Optional[SubmissionStatusEnum] = None\n    point: Optional[int] = None\n    lateSubmission: Optional[bool] = None\nclass SubmissionForModuleUpdateResponse(SubmissionForModuleCreateResponse):\n    pass\nclass SubmissionForModuleCompleteRequest(BaseModel):",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForModuleUpdateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "peekOfCode": "class SubmissionForModuleUpdateRequest(BaseModel):\n    comment: Optional[str] = None\n    status: Optional[SubmissionStatusEnum] = None\n    point: Optional[int] = None\n    lateSubmission: Optional[bool] = None\nclass SubmissionForModuleUpdateResponse(SubmissionForModuleCreateResponse):\n    pass\nclass SubmissionForModuleCompleteRequest(BaseModel):\n    module_id: int\n    project_id: int",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForModuleUpdateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "peekOfCode": "class SubmissionForModuleUpdateResponse(SubmissionForModuleCreateResponse):\n    pass\nclass SubmissionForModuleCompleteRequest(BaseModel):\n    module_id: int\n    project_id: int\nclass SubmissionForModuleCompleteResponse(SubmissionForModuleCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForModuleCompleteRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "peekOfCode": "class SubmissionForModuleCompleteRequest(BaseModel):\n    module_id: int\n    project_id: int\nclass SubmissionForModuleCompleteResponse(SubmissionForModuleCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForModuleCompleteResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "peekOfCode": "class SubmissionForModuleCompleteResponse(SubmissionForModuleCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForModule.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionStatusEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForProject.models",
        "description": "onchain_fastapi.app.modules.submissions.submissionForProject.models",
        "peekOfCode": "class SubmissionStatusEnum(str, enum.Enum):\n    started = \"started\"\n    pending = \"pending\"\n    approved = \"approved\"\n    rejected = \"rejected\"\nclass SubmittedViaEnum(str, enum.Enum):\n    user = \"user\"\n    team = \"team\"\nclass SubmissionForProject(Base):\n    __tablename__ = \"submissionForProjects\"",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "SubmittedViaEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForProject.models",
        "description": "onchain_fastapi.app.modules.submissions.submissionForProject.models",
        "peekOfCode": "class SubmittedViaEnum(str, enum.Enum):\n    user = \"user\"\n    team = \"team\"\nclass SubmissionForProject(Base):\n    __tablename__ = \"submissionForProjects\"\n    id = Column(Integer, primary_key=True, index=True)\n    project = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)\n    user = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=True)\n    # team = Column(Integer, ForeignKey(\"teams.id\", ondelete=\"CASCADE\"), nullable=True)\n    submittedVia = Column(Enum(SubmittedViaEnum), nullable=False)",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForProject",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForProject.models",
        "description": "onchain_fastapi.app.modules.submissions.submissionForProject.models",
        "peekOfCode": "class SubmissionForProject(Base):\n    __tablename__ = \"submissionForProjects\"\n    id = Column(Integer, primary_key=True, index=True)\n    project = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)\n    user = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=True)\n    # team = Column(Integer, ForeignKey(\"teams.id\", ondelete=\"CASCADE\"), nullable=True)\n    submittedVia = Column(Enum(SubmittedViaEnum), nullable=False)\n    submittedByUserId = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False)\n    comment = Column(String, nullable=True)\n    status = Column(Enum(SubmissionStatusEnum), default=SubmissionStatusEnum.started, nullable=False)",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForProject.models",
        "documentation": {}
    },
    {
        "label": "submission_for_project_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForProject.routers",
        "description": "onchain_fastapi.app.modules.submissions.submissionForProject.routers",
        "peekOfCode": "submission_for_project_router = APIRouter()\n@submission_for_project_router.post(\"/start_project\", response_model=Response[SubmissionForProjectCreateResponse])\nasync def start_project_(\n    request: Request,\n    project_data: SubmissionForProjectCreateRequest = Body(...),\n    db: AsyncSession = Depends(get_db)\n):\n    \"\"\"\n    Start a project for the authenticated user\n    \"\"\"",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForProject.routers",
        "documentation": {}
    },
    {
        "label": "SubmissionForProjectCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "peekOfCode": "class SubmissionForProjectCreateRequest(BaseModel):\n    project_id: int\nclass SubmissionForProjectCreateResponse(BaseModel):\n    id: int\n    project: int\n    user: Optional[int] = None\n    submittedVia: str\n    submittedByUserId: int\n    comment: Optional[str] = None\n    status: str",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForProjectCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "peekOfCode": "class SubmissionForProjectCreateResponse(BaseModel):\n    id: int\n    project: int\n    user: Optional[int] = None\n    submittedVia: str\n    submittedByUserId: int\n    comment: Optional[str] = None\n    status: str\n    point: Optional[int] = None\n    lateSubmission: bool",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForProjectGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "peekOfCode": "class SubmissionForProjectGetResponse(SubmissionForProjectCreateResponse):\n    pass\nclass SubmissionForProjectUpdateRequest(BaseModel):\n    comment: Optional[str] = None\n    status: Optional[SubmissionStatusEnum] = None\n    point: Optional[int] = None\n    lateSubmission: Optional[bool] = None\nclass SubmissionForProjectUpdateResponse(SubmissionForProjectCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForProjectUpdateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "peekOfCode": "class SubmissionForProjectUpdateRequest(BaseModel):\n    comment: Optional[str] = None\n    status: Optional[SubmissionStatusEnum] = None\n    point: Optional[int] = None\n    lateSubmission: Optional[bool] = None\nclass SubmissionForProjectUpdateResponse(SubmissionForProjectCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForProjectUpdateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "peekOfCode": "class SubmissionForProjectUpdateResponse(SubmissionForProjectCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForProject.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionStatusEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.models",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.models",
        "peekOfCode": "class SubmissionStatusEnum(str, enum.Enum):\n    started = \"started\"\n    pending = \"pending\"\n    approved = \"approved\"\n    rejected = \"rejected\"\nclass SubmittedViaEnum(str, enum.Enum):\n    user = \"user\"\n    team = \"team\"\nclass SubmissionForSubmittal(Base):\n    __tablename__ = \"submissionForSubmittals\"",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.models",
        "documentation": {}
    },
    {
        "label": "SubmittedViaEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.models",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.models",
        "peekOfCode": "class SubmittedViaEnum(str, enum.Enum):\n    user = \"user\"\n    team = \"team\"\nclass SubmissionForSubmittal(Base):\n    __tablename__ = \"submissionForSubmittals\"\n    id = Column(Integer, primary_key=True, index=True)\n    submittal = Column(Integer, ForeignKey(\"submittals.id\", ondelete=\"CASCADE\"), nullable=False)\n    module = Column(Integer, ForeignKey(\"modules.id\", ondelete=\"CASCADE\"), nullable=False)\n    project = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)\n    user = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=True)",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.models",
        "documentation": {}
    },
    {
        "label": "SubmissionForSubmittal",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.models",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.models",
        "peekOfCode": "class SubmissionForSubmittal(Base):\n    __tablename__ = \"submissionForSubmittals\"\n    id = Column(Integer, primary_key=True, index=True)\n    submittal = Column(Integer, ForeignKey(\"submittals.id\", ondelete=\"CASCADE\"), nullable=False)\n    module = Column(Integer, ForeignKey(\"modules.id\", ondelete=\"CASCADE\"), nullable=False)\n    project = Column(Integer, ForeignKey(\"projects.id\", ondelete=\"CASCADE\"), nullable=False)\n    user = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=True)\n    submittedVia = Column(Enum(SubmittedViaEnum), nullable=False)\n    submittedByUserId = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False)\n    submissionText = Column(String, nullable=True)",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.models",
        "documentation": {}
    },
    {
        "label": "submission_for_submittal_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.routers",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.routers",
        "peekOfCode": "submission_for_submittal_router = APIRouter()\n@submission_for_submittal_router.post(\"/create_submission\", response_model=Response[SubmissionForSubmittalCreateResponse])\nasync def create_submission_(\n    request: Request,\n    db: AsyncSession = Depends(get_db),\n    payload: str = Form(...),\n    file: Optional[UploadFile] = File(None)\n):\n    \"\"\"\n    Create a submittal submission for the authenticated user",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.routers",
        "documentation": {}
    },
    {
        "label": "SubmissionForSubmittalCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "peekOfCode": "class SubmissionForSubmittalCreateRequest(BaseModel):\n    submittal_id: int\n    module_id: int\n    project_id: int\n    submission_text: Optional[str] = None\n    submission_link: Optional[str] = None\n    # submission_file will be handled separately as UploadFile\nclass SubmissionForSubmittalCreateResponse(BaseModel):\n    id: int\n    submittal: int",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForSubmittalCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "peekOfCode": "class SubmissionForSubmittalCreateResponse(BaseModel):\n    id: int\n    submittal: int\n    module: int\n    project: int\n    user: Optional[int] = None\n    submittedVia: str\n    submittedByUserId: int\n    submissionText: Optional[str] = None\n    submissionLink: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForSubmittalGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "peekOfCode": "class SubmissionForSubmittalGetResponse(SubmissionForSubmittalCreateResponse):\n    pass\nclass SubmissionForSubmittalUpdateRequest(BaseModel):\n    submission_text: Optional[str] = None\n    submission_link: Optional[str] = None\n    # submission_file will be handled separately as UploadFile\nclass SubmissionForSubmittalUpdateResponse(SubmissionForSubmittalCreateResponse):\n    pass\nclass SubmissionForSubmittalGradeRequest(BaseModel):\n    comment: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForSubmittalUpdateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "peekOfCode": "class SubmissionForSubmittalUpdateRequest(BaseModel):\n    submission_text: Optional[str] = None\n    submission_link: Optional[str] = None\n    # submission_file will be handled separately as UploadFile\nclass SubmissionForSubmittalUpdateResponse(SubmissionForSubmittalCreateResponse):\n    pass\nclass SubmissionForSubmittalGradeRequest(BaseModel):\n    comment: Optional[str] = None\n    status: Optional[SubmissionStatusEnum] = None\n    point: Optional[int] = None",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForSubmittalUpdateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "peekOfCode": "class SubmissionForSubmittalUpdateResponse(SubmissionForSubmittalCreateResponse):\n    pass\nclass SubmissionForSubmittalGradeRequest(BaseModel):\n    comment: Optional[str] = None\n    status: Optional[SubmissionStatusEnum] = None\n    point: Optional[int] = None\n    lateSubmission: Optional[bool] = None\nclass SubmissionForSubmittalGradeResponse(SubmissionForSubmittalCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForSubmittalGradeRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "peekOfCode": "class SubmissionForSubmittalGradeRequest(BaseModel):\n    comment: Optional[str] = None\n    status: Optional[SubmissionStatusEnum] = None\n    point: Optional[int] = None\n    lateSubmission: Optional[bool] = None\nclass SubmissionForSubmittalGradeResponse(SubmissionForSubmittalCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "documentation": {}
    },
    {
        "label": "SubmissionForSubmittalGradeResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "description": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "peekOfCode": "class SubmissionForSubmittalGradeResponse(SubmissionForSubmittalCreateResponse):\n    pass",
        "detail": "onchain_fastapi.app.modules.submissions.submissionForSubmittal.schemas",
        "documentation": {}
    },
    {
        "label": "UserBadge",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.badges.models",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.badges.models",
        "peekOfCode": "class UserBadge(Base):\n    __tablename__ = 'userBadges'\n    id = Column(Integer, primary_key=True)\n    user = Column(Integer, ForeignKey('users.id'), nullable=False)\n    badge = Column(Integer, ForeignKey('badges.id'), nullable=False)\n    createdAt = Column(DateTime(timezone=True), server_default=func.now())\n    updatedAt = Column(DateTime(timezone=True), onupdate=func.now())",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.badges.models",
        "documentation": {}
    },
    {
        "label": "UserInterest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.interests.models",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.interests.models",
        "peekOfCode": "class UserInterest(Base):\n    __tablename__ = 'userInterests'\n    id = Column(Integer, primary_key=True)\n    user = Column(Integer, ForeignKey('users.id'), nullable=False)\n    category = Column(String, nullable=False)\n    title= Column(String, nullable=False)\n    photoUrl= Column(String, nullable=True)\n    createdAt = Column(DateTime(timezone=True), server_default=func.now())\n    updatedAt = Column(DateTime(timezone=True), onupdate=func.now())",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.interests.models",
        "documentation": {}
    },
    {
        "label": "TransactionType",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.models",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.models",
        "peekOfCode": "class TransactionType(str, enum.Enum):\n    \"\"\"Types of point transactions\"\"\"\n    project_completion = \"project_completion\"\n    module_completion = \"module_completion\"\n    bonus_award = \"bonus_award\"\n    penalty_deduction = \"penalty_deduction\"\n    manual_adjustment = \"manual_adjustment\"\nclass TransactionStatus(str, enum.Enum):\n    \"\"\"Status of point transactions\"\"\"\n    pending = \"pending\"",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.models",
        "documentation": {}
    },
    {
        "label": "TransactionStatus",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.models",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.models",
        "peekOfCode": "class TransactionStatus(str, enum.Enum):\n    \"\"\"Status of point transactions\"\"\"\n    pending = \"pending\"\n    completed = \"completed\"\n    reversed = \"reversed\"\nclass PointTransaction(Base):\n    \"\"\"\n    Model for tracking all point transactions\n    Provides complete audit trail for user points\n    \"\"\"",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.models",
        "documentation": {}
    },
    {
        "label": "PointTransaction",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.models",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.models",
        "peekOfCode": "class PointTransaction(Base):\n    \"\"\"\n    Model for tracking all point transactions\n    Provides complete audit trail for user points\n    \"\"\"\n    __tablename__ = \"pointTransactions\"\n    id = Column(Integer, primary_key=True, index=True)\n    userId = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False)\n    # Transaction details\n    points = Column(Integer, nullable=False)  # Can be positive or negative",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.models",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.router",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.router",
        "peekOfCode": "router = APIRouter(prefix=\"/points\", tags=[\"Point Transactions\"])\n# Simplified endpoints for now - will be enhanced later\n@router.get(\"/test\")\nasync def test_points_endpoint():\n    \"\"\"\n    Test endpoint to verify point transactions router is working\n    \"\"\"\n    return {\"message\": \"Point transaction system is ready for implementation\"}",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.router",
        "documentation": {}
    },
    {
        "label": "PointTransactionCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "peekOfCode": "class PointTransactionCreateRequest(BaseModel):\n    userId: int\n    points: int\n    transactionType: TransactionType\n    projectId: Optional[int] = None\n    moduleId: Optional[int] = None\n    submissionForProjectId: Optional[int] = None\n    submissionForModuleId: Optional[int] = None\n    description: Optional[str] = None\nclass PointTransactionCreateResponse(BaseModel):",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "documentation": {}
    },
    {
        "label": "PointTransactionCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "peekOfCode": "class PointTransactionCreateResponse(BaseModel):\n    id: int\n    userId: int\n    points: int\n    transactionType: TransactionType\n    status: TransactionStatus\n    projectId: Optional[int] = None\n    moduleId: Optional[int] = None\n    submissionForProjectId: Optional[int] = None\n    submissionForModuleId: Optional[int] = None",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "documentation": {}
    },
    {
        "label": "PointTransactionGetResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "peekOfCode": "class PointTransactionGetResponse(PointTransactionCreateResponse):\n    pass\nclass PointTransactionListResponse(BaseModel):\n    id: int\n    userId: int\n    points: int\n    transactionType: TransactionType\n    status: TransactionStatus\n    projectId: Optional[int] = None\n    projectTitle: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "documentation": {}
    },
    {
        "label": "PointTransactionListResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "peekOfCode": "class PointTransactionListResponse(BaseModel):\n    id: int\n    userId: int\n    points: int\n    transactionType: TransactionType\n    status: TransactionStatus\n    projectId: Optional[int] = None\n    projectTitle: Optional[str] = None\n    moduleId: Optional[int] = None\n    moduleTitle: Optional[str] = None",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "documentation": {}
    },
    {
        "label": "UserPointSummaryResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "peekOfCode": "class UserPointSummaryResponse(BaseModel):\n    userId: int\n    totalPoints: int\n    projectCompletionPoints: int\n    moduleCompletionPoints: int\n    bonusPoints: int\n    totalTransactions: int\n    lastTransactionAt: Optional[datetime] = None\n    class Config:\n        from_attributes = True",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.schemas",
        "documentation": {}
    },
    {
        "label": "create_point_transaction",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "peekOfCode": "def create_point_transaction(\n    db: Session, \n    request: PointTransactionCreateRequest, \n    awarded_by_user_id: int\n) -> PointTransactionCreateResponse:\n    \"\"\"\n    Create a new point transaction\n    Only admins and project creators can create manual transactions\n    \"\"\"\n    # Get the user",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "documentation": {}
    },
    {
        "label": "get_user_transactions",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "peekOfCode": "def get_user_transactions(\n    db: Session, \n    user_id: int, \n    limit: int = 50, \n    offset: int = 0,\n    transaction_type: Optional[TransactionType] = None,\n    start_date: Optional[datetime] = None,\n    end_date: Optional[datetime] = None\n) -> List[PointTransactionListResponse]:\n    \"\"\"",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "documentation": {}
    },
    {
        "label": "get_user_point_summary",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "peekOfCode": "def get_user_point_summary(db: Session, user_id: int) -> UserPointSummaryResponse:\n    \"\"\"\n    Get user's point summary with breakdown by transaction type\n    \"\"\"\n    user = get_user_by_id(db, user_id)\n    if not user:\n        raise ValueError(\"User not found\")\n    # Get transaction summary\n    project_points = db.query(func.sum(PointTransaction.points)).filter(\n        and_(",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "documentation": {}
    },
    {
        "label": "get_transactions_by_timeframe",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "peekOfCode": "def get_transactions_by_timeframe(\n    db: Session,\n    user_id: int,\n    timeframe: str = \"all_time\"  # \"weekly\", \"monthly\", \"yearly\", \"all_time\"\n) -> List[PointTransactionListResponse]:\n    \"\"\"\n    Get user transactions filtered by timeframe\n    \"\"\"\n    now = datetime.utcnow()\n    start_date = None",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "documentation": {}
    },
    {
        "label": "reverse_transaction",
        "kind": 2,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "peekOfCode": "def reverse_transaction(db: Session, transaction_id: int, admin_user_id: int, reason: str) -> bool:\n    \"\"\"\n    Reverse a point transaction (admin only)\n    \"\"\"\n    # Get the admin user\n    admin_user = get_user_by_id(db, admin_user_id)\n    if not admin_user or admin_user.role != \"admin\":\n        raise ValueError(\"Only admins can reverse transactions\")\n    # Get the original transaction\n    original_transaction = db.query(PointTransaction).filter(",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.pointTransactions.services",
        "documentation": {}
    },
    {
        "label": "UserSkill",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.relatedEntities.skills.models",
        "description": "onchain_fastapi.app.modules.users.relatedEntities.skills.models",
        "peekOfCode": "class UserSkill(Base):\n    __tablename__ = 'userSkills'\n    id = Column(Integer, primary_key=True)\n    user = Column(Integer, ForeignKey('users.id'), nullable=False)\n    category = Column(String, nullable=False)\n    title= Column(String, nullable=False)\n    photoUrl= Column(String, nullable=True)\n    createdAt = Column(DateTime(timezone=True), server_default=func.now())\n    updatedAt = Column(DateTime(timezone=True), onupdate=func.now())",
        "detail": "onchain_fastapi.app.modules.users.relatedEntities.skills.models",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.models",
        "description": "onchain_fastapi.app.modules.users.models",
        "peekOfCode": "class UserRole(enum.Enum):\n    admin = \"admin\"\n    user = \"user\"\n    moderator = \"moderator\"\nclass ProfilePrivacy(enum.Enum):\n    public = \"public\"\n    private = \"private\"\nclass User(Base):\n    __tablename__ = 'users'\n    id = Column(Integer, primary_key=True, index=True)",
        "detail": "onchain_fastapi.app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "ProfilePrivacy",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.models",
        "description": "onchain_fastapi.app.modules.users.models",
        "peekOfCode": "class ProfilePrivacy(enum.Enum):\n    public = \"public\"\n    private = \"private\"\nclass User(Base):\n    __tablename__ = 'users'\n    id = Column(Integer, primary_key=True, index=True)\n    userName = Column(String(20), unique=True, nullable=False) #editable by the user\n    phone = Column(String(20), unique=True, nullable=False)\n    passwordHash = Column(String(128), nullable=False)\n    phoneVerified = Column(Boolean, default=False)",
        "detail": "onchain_fastapi.app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.models",
        "description": "onchain_fastapi.app.modules.users.models",
        "peekOfCode": "class User(Base):\n    __tablename__ = 'users'\n    id = Column(Integer, primary_key=True, index=True)\n    userName = Column(String(20), unique=True, nullable=False) #editable by the user\n    phone = Column(String(20), unique=True, nullable=False)\n    passwordHash = Column(String(128), nullable=False)\n    phoneVerified = Column(Boolean, default=False)\n    isBanned = Column(Boolean, default=False)\n    name = Column(String(25), nullable=False) #editable by the user\n    contactInfo = Column(Text, nullable=True) #editable by the user",
        "detail": "onchain_fastapi.app.modules.users.models",
        "documentation": {}
    },
    {
        "label": "user_router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.modules.users.routers",
        "description": "onchain_fastapi.app.modules.users.routers",
        "peekOfCode": "user_router = APIRouter()\n@user_router.post(\"/register-user\", response_model=Response[UserCreateResponse])\nasync def register_user_(user:UserCreateRequest, db: AsyncSession = Depends(get_db)):\n    result =  await create_user(db= db, phone= user.phone, name=user.name, password=user.password)\n    return create_response(result=result, pydantic_model=UserCreateResponse, message=\"User has registered successfully\")\n@user_router.post(\"/login\", response_model=Response[UserLogInResponse])\nasync def login_user_(\n    body: UserLoginRequest,\n    db: AsyncSession = Depends(get_db)\n):",
        "detail": "onchain_fastapi.app.modules.users.routers",
        "documentation": {}
    },
    {
        "label": "UserRoleEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class UserRoleEnum(str, Enum):\n    admin = \"admin\"\n    user = \"user\"\n    moderator = \"moderator\"\nclass ProfilePrivacyEnum(str, Enum):\n    public = \"public\"\n    private = \"private\"\nclass UserCreateRequest(BaseModel):\n    phone :str\n    name :str",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "ProfilePrivacyEnum",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class ProfilePrivacyEnum(str, Enum):\n    public = \"public\"\n    private = \"private\"\nclass UserCreateRequest(BaseModel):\n    phone :str\n    name :str\n    password :str\n    @field_validator(\"password\")\n    @classmethod\n    def validate_password(cls, value):",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserCreateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class UserCreateRequest(BaseModel):\n    phone :str\n    name :str\n    password :str\n    @field_validator(\"password\")\n    @classmethod\n    def validate_password(cls, value):\n        if len(value) < 8 or len(value) > 12:\n            raise CustomError(status_code=422, message=\"Password must be 8–12 characters long\")\n        if not re.search(r\"[A-Z]\", value):",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserCreateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class UserCreateResponse(BaseModel):\n    id: int\n    userName: str\n    name :str\n    photoUrl: str | None = None\n    role : UserRoleEnum\n    points: int\n    rankLevel: int\n    access_token:str\n    class Config:",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserLoginRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class UserLoginRequest(BaseModel):\n    phoneOrUserName: str\n    password: str\n    @model_validator(mode=\"before\")\n    @classmethod\n    def validate_required_fields(cls, values):\n        if \"phoneOrUserName\" not in values or not str(values.get(\"phoneOrUserName\", \"\")).strip():\n            raise CustomError(status_code=422, message=\"phoneOrUserName field is required\")\n        if \"password\" not in values or not str(values.get(\"password\", \"\")).strip():\n            raise CustomError(status_code=422, message=\"password field is required\")",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserLogInResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class UserLogInResponse(BaseModel):\n    id: int\n    # userName: str\n    # phone: str\n    name: str\n    role: UserRoleEnum\n    photoUrl: str | None = None\n    access_token: str\n    class Config:\n        orm_mode = True",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserLoggedInStatusResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class UserLoggedInStatusResponse(BaseModel):\n    id: int\n    userName: str\n    name :str\n    photoUrl: str | None = None\n    role : UserRoleEnum\n    points: int\n    rankLevel: int\n    access_token:str\n    class Config:",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "ChangeUsernameRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class ChangeUsernameRequest(BaseModel):\n    username :str\n    @model_validator(mode=\"before\")\n    @classmethod\n    def validate_required_fields(cls, values):\n        if \"username\" not in values or not str(values.get(\"username\", \"\")).strip():\n            raise CustomError(status_code=422, message=\"username field is required\")\n        return values\n    @field_validator(\"username\")\n    @classmethod",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "ChangeUsernameResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class ChangeUsernameResponse(BaseModel):\n    id: int\n    userName: str\n    class Config:\n        orm_mode = True\n        extra = \"ignore\"  # This will ignore any extra fields (like \"password\")\nclass ProfileUpdateRequest(BaseModel):\n    pass\nclass UserProfileUpdateResponse(BaseModel):\n    id: int",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "ProfileUpdateRequest",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class ProfileUpdateRequest(BaseModel):\n    pass\nclass UserProfileUpdateResponse(BaseModel):\n    id: int\n    # userName: str\n    contactInfo :str\n    photoUrl: str | None = None\n    bio : str\n    profilePrivacy: ProfilePrivacyEnum\n    class Config:",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UserProfileUpdateResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class UserProfileUpdateResponse(BaseModel):\n    id: int\n    # userName: str\n    contactInfo :str\n    photoUrl: str | None = None\n    bio : str\n    profilePrivacy: ProfilePrivacyEnum\n    class Config:\n        orm_mode = True\n        extra = \"ignore\"  # This will ignore any extra fields (like \"password\")",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "GetMyProfileResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class GetMyProfileResponse(BaseModel):\n    \"\"\"Comprehensive profile response with all user fields\"\"\"\n    id: int\n    userName: str\n    phone: str\n    name: str\n    contactInfo: str | None = None\n    photoUrl: str | None = None\n    role: UserRoleEnum\n    profilePrivacy: ProfilePrivacyEnum",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "UsernameAvailabilityResponse",
        "kind": 6,
        "importPath": "onchain_fastapi.app.modules.users.schemas",
        "description": "onchain_fastapi.app.modules.users.schemas",
        "peekOfCode": "class UsernameAvailabilityResponse(BaseModel):\n    \"\"\"Response for username availability check\"\"\"\n    available: bool\n    message: str\n    class Config:\n        orm_mode = True",
        "detail": "onchain_fastapi.app.modules.users.schemas",
        "documentation": {}
    },
    {
        "label": "create_response",
        "kind": 2,
        "importPath": "onchain_fastapi.app.responses.handler",
        "description": "onchain_fastapi.app.responses.handler",
        "peekOfCode": "def create_response(message: str,\n                    result: Union[Base, List[Base], dict, List[dict], None], \n                    pydantic_model: Optional[Type[declarative_base]] = None,\n                    meta_data: Optional[MetaData] = None\n                    ) -> Response:\n    if not result:\n        return Response(message=message, data=result, meta_data=meta_data)\n    result_dict = None  # Placeholder\n    if isinstance(result, list):\n        # Check if list contains ORM objects",
        "detail": "onchain_fastapi.app.responses.handler",
        "documentation": {}
    },
    {
        "label": "MetaData",
        "kind": 6,
        "importPath": "onchain_fastapi.app.responses.models",
        "description": "onchain_fastapi.app.responses.models",
        "peekOfCode": "class MetaData(BaseModel):\n    prev: Optional[int]  # Can be int or None\n    next: Optional[int]  # Can be int or None\n    current: int\n    total: int # total number of pages depending on page limit\n    class Config:\n        orm_mode = True\nclass Response(BaseModel, Generic[T]):\n    is_success: bool = True\n    message: str",
        "detail": "onchain_fastapi.app.responses.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "kind": 6,
        "importPath": "onchain_fastapi.app.responses.models",
        "description": "onchain_fastapi.app.responses.models",
        "peekOfCode": "class Response(BaseModel, Generic[T]):\n    is_success: bool = True\n    message: str\n    data: T\n    meta_data: Optional[MetaData]",
        "detail": "onchain_fastapi.app.responses.models",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "onchain_fastapi.app.responses.models",
        "description": "onchain_fastapi.app.responses.models",
        "peekOfCode": "T = TypeVar(\"T\")\nclass MetaData(BaseModel):\n    prev: Optional[int]  # Can be int or None\n    next: Optional[int]  # Can be int or None\n    current: int\n    total: int # total number of pages depending on page limit\n    class Config:\n        orm_mode = True\nclass Response(BaseModel, Generic[T]):\n    is_success: bool = True",
        "detail": "onchain_fastapi.app.responses.models",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "onchain_fastapi.app.routes.router",
        "description": "onchain_fastapi.app.routes.router",
        "peekOfCode": "router = APIRouter()\n# calling a router depends on prefix\nrouter.include_router(user_router, prefix=\"/users\", tags=[\"Users\"])\nrouter.include_router(predefine_router, prefix=\"/predefines\", tags=[\"Predefines\"])\nrouter.include_router(project_router, prefix=\"/projects\", tags=[\"Projects\"])\nrouter.include_router(file_router, prefix=\"/files\", tags=[\"Files\"])\nrouter.include_router(submission_for_project_router, prefix=\"/submissions/projects\", tags=[\"Project Submissions\"])\nrouter.include_router(submission_for_module_router, prefix=\"/submissions/modules\", tags=[\"Module Submissions\"])\nrouter.include_router(submission_for_submittal_router, prefix=\"/submissions/submittals\", tags=[\"Submittal Submissions\"])\nrouter.include_router(judge_router, prefix=\"/projects\", tags=[\"Project Judges\"])",
        "detail": "onchain_fastapi.app.routes.router",
        "documentation": {}
    },
    {
        "label": "check_user_access_api",
        "kind": 2,
        "importPath": "onchain_fastapi.app.utils.checkUserAccessApi",
        "description": "onchain_fastapi.app.utils.checkUserAccessApi",
        "peekOfCode": "def check_user_access_api(auth: TAuth, access_users: Union[List[UserRoleEnum], str]):\n    if access_users == \"all\":\n        return  # ✅ Everyone is allowed\n    if auth[\"role\"] in access_users:\n        return  # ✅ Role is allowed\n    # ❌ Access denied\n    raise CustomError(\n        message=\"You have no right to access this API\",\n        status_code=400\n    )",
        "detail": "onchain_fastapi.app.utils.checkUserAccessApi",
        "documentation": {}
    },
    {
        "label": "get_auth",
        "kind": 2,
        "importPath": "onchain_fastapi.app.utils.get_auth",
        "description": "onchain_fastapi.app.utils.get_auth",
        "peekOfCode": "def get_auth(request: Request) -> TAuth:\n    return cast(TAuth, request.state.user)",
        "detail": "onchain_fastapi.app.utils.get_auth",
        "documentation": {}
    },
    {
        "label": "generate_passwd_hash",
        "kind": 2,
        "importPath": "onchain_fastapi.app.utils.manage_auth",
        "description": "onchain_fastapi.app.utils.manage_auth",
        "peekOfCode": "def generate_passwd_hash(password: str) -> str:\n    hash = passwd_context.hash(password)\n    return hash\ndef verify_password(password: str, hash: str) -> bool:\n    return passwd_context.verify(password, hash)\ndef create_access_token(\n    user_data: dict, expiry: timedelta = None, refresh: bool = False\n):\n    payload = {}\n    payload[\"auth\"] = user_data",
        "detail": "onchain_fastapi.app.utils.manage_auth",
        "documentation": {}
    },
    {
        "label": "verify_password",
        "kind": 2,
        "importPath": "onchain_fastapi.app.utils.manage_auth",
        "description": "onchain_fastapi.app.utils.manage_auth",
        "peekOfCode": "def verify_password(password: str, hash: str) -> bool:\n    return passwd_context.verify(password, hash)\ndef create_access_token(\n    user_data: dict, expiry: timedelta = None, refresh: bool = False\n):\n    payload = {}\n    payload[\"auth\"] = user_data\n    payload[\"exp\"] = datetime.utcnow() + timedelta(seconds=ACCESS_TOKEN_EXPIRY)\n    payload[\"refresh\"] = refresh\n    token = jwt.encode(",
        "detail": "onchain_fastapi.app.utils.manage_auth",
        "documentation": {}
    },
    {
        "label": "create_access_token",
        "kind": 2,
        "importPath": "onchain_fastapi.app.utils.manage_auth",
        "description": "onchain_fastapi.app.utils.manage_auth",
        "peekOfCode": "def create_access_token(\n    user_data: dict, expiry: timedelta = None, refresh: bool = False\n):\n    payload = {}\n    payload[\"auth\"] = user_data\n    payload[\"exp\"] = datetime.utcnow() + timedelta(seconds=ACCESS_TOKEN_EXPIRY)\n    payload[\"refresh\"] = refresh\n    token = jwt.encode(\n        payload=payload, key=Config.JWT_SECRET, algorithm= Config.JWT_ALGORITHM\n    )",
        "detail": "onchain_fastapi.app.utils.manage_auth",
        "documentation": {}
    },
    {
        "label": "decode_access_token",
        "kind": 2,
        "importPath": "onchain_fastapi.app.utils.manage_auth",
        "description": "onchain_fastapi.app.utils.manage_auth",
        "peekOfCode": "def decode_access_token(token: str) -> dict:\n    try:\n        token_data = jwt.decode(\n            jwt=token, key=Config.JWT_SECRET, algorithms=[Config.JWT_ALGORITHM]\n        )\n        return token_data\n    except jwt.ExpiredSignatureError:\n        raise CustomError(message= \"your access token has been expired\", status_code=401, resolution=\"please sign in again.\")\n    except jwt.InvalidTokenError:\n        raise CustomError(message= \"your access token is invalid\", status_code=401, resolution=\"please provide a valid token.\")",
        "detail": "onchain_fastapi.app.utils.manage_auth",
        "documentation": {}
    },
    {
        "label": "passwd_context",
        "kind": 5,
        "importPath": "onchain_fastapi.app.utils.manage_auth",
        "description": "onchain_fastapi.app.utils.manage_auth",
        "peekOfCode": "passwd_context = CryptContext(schemes=[\"bcrypt\"])\nACCESS_TOKEN_EXPIRY = 7*24*60*60   # in second\ndef generate_passwd_hash(password: str) -> str:\n    hash = passwd_context.hash(password)\n    return hash\ndef verify_password(password: str, hash: str) -> bool:\n    return passwd_context.verify(password, hash)\ndef create_access_token(\n    user_data: dict, expiry: timedelta = None, refresh: bool = False\n):",
        "detail": "onchain_fastapi.app.utils.manage_auth",
        "documentation": {}
    },
    {
        "label": "ACCESS_TOKEN_EXPIRY",
        "kind": 5,
        "importPath": "onchain_fastapi.app.utils.manage_auth",
        "description": "onchain_fastapi.app.utils.manage_auth",
        "peekOfCode": "ACCESS_TOKEN_EXPIRY = 7*24*60*60   # in second\ndef generate_passwd_hash(password: str) -> str:\n    hash = passwd_context.hash(password)\n    return hash\ndef verify_password(password: str, hash: str) -> bool:\n    return passwd_context.verify(password, hash)\ndef create_access_token(\n    user_data: dict, expiry: timedelta = None, refresh: bool = False\n):\n    payload = {}",
        "detail": "onchain_fastapi.app.utils.manage_auth",
        "documentation": {}
    },
    {
        "label": "model_to_dict",
        "kind": 2,
        "importPath": "onchain_fastapi.app.utils.model_to_dict",
        "description": "onchain_fastapi.app.utils.model_to_dict",
        "peekOfCode": "def model_to_dict(model):\n    \"\"\"Convert a SQLAlchemy model instance to a dictionary.\"\"\"\n    if model is None:\n        return None\n    model_dict = {**model.__dict__}\n    model_dict.pop(\"_sa_instance_state\", None)  # Remove SQLAlchemy internal attribute\n    # Convert Enum fields to their values\n    for key, value in model_dict.items():\n        if isinstance(value, enum.Enum):\n            model_dict[key] = value.value  # Convert Enum to string",
        "detail": "onchain_fastapi.app.utils.model_to_dict",
        "documentation": {}
    },
    {
        "label": "EmailSchema",
        "kind": 6,
        "importPath": "onchain_fastapi.app.utils.send_mail",
        "description": "onchain_fastapi.app.utils.send_mail",
        "peekOfCode": "class EmailSchema(BaseModel):\n    receiver_email: str\n    subject: str\n    html_body: str\nasync def send_email(email_data: EmailSchema) -> Optional[bool]:\n    \"\"\"Send an email using an asynchronous SMTP client.\"\"\"\n    try:\n        message = EmailMessage()\n        message[\"From\"] = f\"AI Policing <{SENDER_EMAIL}>\"\n        message[\"To\"] = email_data.receiver_email",
        "detail": "onchain_fastapi.app.utils.send_mail",
        "documentation": {}
    },
    {
        "label": "SMTP_HOST",
        "kind": 5,
        "importPath": "onchain_fastapi.app.utils.send_mail",
        "description": "onchain_fastapi.app.utils.send_mail",
        "peekOfCode": "SMTP_HOST = \"smtp.gmail.com\"\nSMTP_PORT = 465\nSENDER_EMAIL = \"khalidmimm@gmail.com\"\nSENDER_PASSWORD = \"cxuo yccn lzwn nxhq\"  # Use environment variables for security!\nclass EmailSchema(BaseModel):\n    receiver_email: str\n    subject: str\n    html_body: str\nasync def send_email(email_data: EmailSchema) -> Optional[bool]:\n    \"\"\"Send an email using an asynchronous SMTP client.\"\"\"",
        "detail": "onchain_fastapi.app.utils.send_mail",
        "documentation": {}
    },
    {
        "label": "SMTP_PORT",
        "kind": 5,
        "importPath": "onchain_fastapi.app.utils.send_mail",
        "description": "onchain_fastapi.app.utils.send_mail",
        "peekOfCode": "SMTP_PORT = 465\nSENDER_EMAIL = \"khalidmimm@gmail.com\"\nSENDER_PASSWORD = \"cxuo yccn lzwn nxhq\"  # Use environment variables for security!\nclass EmailSchema(BaseModel):\n    receiver_email: str\n    subject: str\n    html_body: str\nasync def send_email(email_data: EmailSchema) -> Optional[bool]:\n    \"\"\"Send an email using an asynchronous SMTP client.\"\"\"\n    try:",
        "detail": "onchain_fastapi.app.utils.send_mail",
        "documentation": {}
    },
    {
        "label": "SENDER_EMAIL",
        "kind": 5,
        "importPath": "onchain_fastapi.app.utils.send_mail",
        "description": "onchain_fastapi.app.utils.send_mail",
        "peekOfCode": "SENDER_EMAIL = \"khalidmimm@gmail.com\"\nSENDER_PASSWORD = \"cxuo yccn lzwn nxhq\"  # Use environment variables for security!\nclass EmailSchema(BaseModel):\n    receiver_email: str\n    subject: str\n    html_body: str\nasync def send_email(email_data: EmailSchema) -> Optional[bool]:\n    \"\"\"Send an email using an asynchronous SMTP client.\"\"\"\n    try:\n        message = EmailMessage()",
        "detail": "onchain_fastapi.app.utils.send_mail",
        "documentation": {}
    },
    {
        "label": "SENDER_PASSWORD",
        "kind": 5,
        "importPath": "onchain_fastapi.app.utils.send_mail",
        "description": "onchain_fastapi.app.utils.send_mail",
        "peekOfCode": "SENDER_PASSWORD = \"cxuo yccn lzwn nxhq\"  # Use environment variables for security!\nclass EmailSchema(BaseModel):\n    receiver_email: str\n    subject: str\n    html_body: str\nasync def send_email(email_data: EmailSchema) -> Optional[bool]:\n    \"\"\"Send an email using an asynchronous SMTP client.\"\"\"\n    try:\n        message = EmailMessage()\n        message[\"From\"] = f\"AI Policing <{SENDER_EMAIL}>\"",
        "detail": "onchain_fastapi.app.utils.send_mail",
        "documentation": {}
    },
    {
        "label": "validate_user_access_api",
        "kind": 2,
        "importPath": "onchain_fastapi.app.utils.validate_user_access_api",
        "description": "onchain_fastapi.app.utils.validate_user_access_api",
        "peekOfCode": "def validate_user_access_api(auth: TAuth, access_users: Union[List[UserRoleEnum], str]):\n    if access_users == \"all\":\n        return  # Allow access\n    elif auth[\"role\"] in access_users:\n        return  # Allow access\n    else:\n        raise CustomError(message= \"You have no right to access this API\", status_code=401)",
        "detail": "onchain_fastapi.app.utils.validate_user_access_api",
        "documentation": {}
    },
    {
        "label": "Settings",
        "kind": 6,
        "importPath": "onchain_fastapi.app.config",
        "description": "onchain_fastapi.app.config",
        "peekOfCode": "class Settings(BaseSettings):\n    DB_USER: str\n    DB_PASS: str\n    DB_NAME:str\n    DB_PORT: int = 5432\n    DB_HOST: str = \"localhost\"\n    JWT_SECRET: str\n    JWT_ALGORITHM: str\n    model_config = SettingsConfigDict(\n        env_file=\".env\",",
        "detail": "onchain_fastapi.app.config",
        "documentation": {}
    },
    {
        "label": "Config",
        "kind": 5,
        "importPath": "onchain_fastapi.app.config",
        "description": "onchain_fastapi.app.config",
        "peekOfCode": "Config = Settings()",
        "detail": "onchain_fastapi.app.config",
        "documentation": {}
    },
    {
        "label": "DATABASE_URL",
        "kind": 5,
        "importPath": "onchain_fastapi.app.database",
        "description": "onchain_fastapi.app.database",
        "peekOfCode": "DATABASE_URL = (\n    f\"postgresql+asyncpg://\"\n    f\"{Config.DB_USER}:\"\n    f\"{Config.DB_PASS}@\"\n    f\"{Config.DB_HOST}:\"\n    f\"{Config.DB_PORT}/\"\n    f\"{Config.DB_NAME}\"\n)\nprint(\"\\n\\n________________: \",DATABASE_URL, \"\\n\\n\")\nengine = create_async_engine(DATABASE_URL, echo=True)",
        "detail": "onchain_fastapi.app.database",
        "documentation": {}
    },
    {
        "label": "engine",
        "kind": 5,
        "importPath": "onchain_fastapi.app.database",
        "description": "onchain_fastapi.app.database",
        "peekOfCode": "engine = create_async_engine(DATABASE_URL, echo=True)\nasync_session = sessionmaker(bind=engine, class_=AsyncSession, expire_on_commit=False)\nBase = declarative_base()\n# 3) import all your models *here*, so that they attach to Base.metadata\nimport app.modules.projects.models\nimport app.modules.users.models\nimport app.modules.files.models\nimport app.modules.projects.relatedEntities.arrangements.models\nimport app.modules.projects.relatedEntities.configurations.models\nimport app.modules.projects.relatedEntities.rewards.models",
        "detail": "onchain_fastapi.app.database",
        "documentation": {}
    },
    {
        "label": "async_session",
        "kind": 5,
        "importPath": "onchain_fastapi.app.database",
        "description": "onchain_fastapi.app.database",
        "peekOfCode": "async_session = sessionmaker(bind=engine, class_=AsyncSession, expire_on_commit=False)\nBase = declarative_base()\n# 3) import all your models *here*, so that they attach to Base.metadata\nimport app.modules.projects.models\nimport app.modules.users.models\nimport app.modules.files.models\nimport app.modules.projects.relatedEntities.arrangements.models\nimport app.modules.projects.relatedEntities.configurations.models\nimport app.modules.projects.relatedEntities.rewards.models\nimport app.modules.projects.relatedEntities.achievements.models",
        "detail": "onchain_fastapi.app.database",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 5,
        "importPath": "onchain_fastapi.app.database",
        "description": "onchain_fastapi.app.database",
        "peekOfCode": "Base = declarative_base()\n# 3) import all your models *here*, so that they attach to Base.metadata\nimport app.modules.projects.models\nimport app.modules.users.models\nimport app.modules.files.models\nimport app.modules.projects.relatedEntities.arrangements.models\nimport app.modules.projects.relatedEntities.configurations.models\nimport app.modules.projects.relatedEntities.rewards.models\nimport app.modules.projects.relatedEntities.achievements.models\nimport app.modules.projects.relatedEntities.modules.relatedEntities.standard.models",
        "detail": "onchain_fastapi.app.database",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "onchain_fastapi.app.main",
        "description": "onchain_fastapi.app.main",
        "peekOfCode": "app = FastAPI()\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],  # Replace with your frontend URL\n    allow_credentials=True,\n    allow_methods=[\"*\"],  # Allow all methods (GET, POST, etc.)\n    allow_headers=[\"*\"],  # Allow all headers\n)\n# # If you want to automatically initialize your DB on startup,\n@app.on_event(\"startup\")",
        "detail": "onchain_fastapi.app.main",
        "documentation": {}
    },
    {
        "label": "TestJudgeSystem",
        "kind": 6,
        "importPath": "onchain_fastapi.tests.test_judges",
        "description": "onchain_fastapi.tests.test_judges",
        "peekOfCode": "class TestJudgeSystem:\n    \"\"\"Comprehensive test suite for the judge system\"\"\"\n    @pytest.fixture(autouse=True)\n    def setup_test_data(self):\n        \"\"\"Set up test data before each test\"\"\"\n        db = TestingSessionLocal()\n        # Clean up existing data\n        db.query(ProjectJudge).delete()\n        db.query(Project).delete()\n        db.query(User).delete()",
        "detail": "onchain_fastapi.tests.test_judges",
        "documentation": {}
    },
    {
        "label": "override_get_db",
        "kind": 2,
        "importPath": "onchain_fastapi.tests.test_judges",
        "description": "onchain_fastapi.tests.test_judges",
        "peekOfCode": "def override_get_db():\n    try:\n        db = TestingSessionLocal()\n        yield db\n    finally:\n        db.close()\napp.dependency_overrides[get_db] = override_get_db\n# Create test database\nBase.metadata.create_all(bind=engine)\nclient = TestClient(app)",
        "detail": "onchain_fastapi.tests.test_judges",
        "documentation": {}
    },
    {
        "label": "SQLALCHEMY_DATABASE_URL",
        "kind": 5,
        "importPath": "onchain_fastapi.tests.test_judges",
        "description": "onchain_fastapi.tests.test_judges",
        "peekOfCode": "SQLALCHEMY_DATABASE_URL = \"sqlite:///./test_judges.db\"\nengine = create_engine(SQLALCHEMY_DATABASE_URL, connect_args={\"check_same_thread\": False})\nTestingSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\ndef override_get_db():\n    try:\n        db = TestingSessionLocal()\n        yield db\n    finally:\n        db.close()\napp.dependency_overrides[get_db] = override_get_db",
        "detail": "onchain_fastapi.tests.test_judges",
        "documentation": {}
    },
    {
        "label": "engine",
        "kind": 5,
        "importPath": "onchain_fastapi.tests.test_judges",
        "description": "onchain_fastapi.tests.test_judges",
        "peekOfCode": "engine = create_engine(SQLALCHEMY_DATABASE_URL, connect_args={\"check_same_thread\": False})\nTestingSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\ndef override_get_db():\n    try:\n        db = TestingSessionLocal()\n        yield db\n    finally:\n        db.close()\napp.dependency_overrides[get_db] = override_get_db\n# Create test database",
        "detail": "onchain_fastapi.tests.test_judges",
        "documentation": {}
    },
    {
        "label": "TestingSessionLocal",
        "kind": 5,
        "importPath": "onchain_fastapi.tests.test_judges",
        "description": "onchain_fastapi.tests.test_judges",
        "peekOfCode": "TestingSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\ndef override_get_db():\n    try:\n        db = TestingSessionLocal()\n        yield db\n    finally:\n        db.close()\napp.dependency_overrides[get_db] = override_get_db\n# Create test database\nBase.metadata.create_all(bind=engine)",
        "detail": "onchain_fastapi.tests.test_judges",
        "documentation": {}
    },
    {
        "label": "app.dependency_overrides[get_db]",
        "kind": 5,
        "importPath": "onchain_fastapi.tests.test_judges",
        "description": "onchain_fastapi.tests.test_judges",
        "peekOfCode": "app.dependency_overrides[get_db] = override_get_db\n# Create test database\nBase.metadata.create_all(bind=engine)\nclient = TestClient(app)\nclass TestJudgeSystem:\n    \"\"\"Comprehensive test suite for the judge system\"\"\"\n    @pytest.fixture(autouse=True)\n    def setup_test_data(self):\n        \"\"\"Set up test data before each test\"\"\"\n        db = TestingSessionLocal()",
        "detail": "onchain_fastapi.tests.test_judges",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "onchain_fastapi.tests.test_judges",
        "description": "onchain_fastapi.tests.test_judges",
        "peekOfCode": "client = TestClient(app)\nclass TestJudgeSystem:\n    \"\"\"Comprehensive test suite for the judge system\"\"\"\n    @pytest.fixture(autouse=True)\n    def setup_test_data(self):\n        \"\"\"Set up test data before each test\"\"\"\n        db = TestingSessionLocal()\n        # Clean up existing data\n        db.query(ProjectJudge).delete()\n        db.query(Project).delete()",
        "detail": "onchain_fastapi.tests.test_judges",
        "documentation": {}
    },
    {
        "label": "TestSubmissionIntegration",
        "kind": 6,
        "importPath": "onchain_fastapi.tests.test_submission_integration",
        "description": "onchain_fastapi.tests.test_submission_integration",
        "peekOfCode": "class TestSubmissionIntegration:\n    \"\"\"Integration tests for complete submission workflows\"\"\"\n    @pytest.fixture\n    async def setup_complete_project(self, db_session: AsyncSession):\n        \"\"\"Set up a complete project with modules and submittals\"\"\"\n        # Create users\n        creator = User(\n            name=\"Project Creator\",\n            email=\"creator@test.com\",\n            username=\"creator\",",
        "detail": "onchain_fastapi.tests.test_submission_integration",
        "documentation": {}
    },
    {
        "label": "TestSubmissions",
        "kind": 6,
        "importPath": "onchain_fastapi.tests.test_submissions",
        "description": "onchain_fastapi.tests.test_submissions",
        "peekOfCode": "class TestSubmissions:\n    \"\"\"Test suite for submission workflows\"\"\"\n    @pytest.fixture\n    async def test_user(self, db_session: AsyncSession):\n        \"\"\"Create a test user\"\"\"\n        user = User(\n            name=\"Test User\",\n            email=\"test@example.com\",\n            username=\"testuser\",\n            password=\"hashedpassword\",",
        "detail": "onchain_fastapi.tests.test_submissions",
        "documentation": {}
    },
    {
        "label": "JudgeSystemIntegrationTest",
        "kind": 6,
        "importPath": "integration_test_judge_system",
        "description": "integration_test_judge_system",
        "peekOfCode": "class JudgeSystemIntegrationTest:\n    def __init__(self):\n        self.backend_url = \"http://localhost:8000\"\n        self.frontend_url = \"http://localhost:3001\"\n        # Test data\n        self.creator_token = \"test_creator_token\"\n        self.judge_token = \"test_judge_token\"\n        self.project_id = 1\n        self.judge_user_id = 2\n        self.test_results = []",
        "detail": "integration_test_judge_system",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "integration_test_judge_system",
        "description": "integration_test_judge_system",
        "peekOfCode": "def main():\n    \"\"\"Main function\"\"\"\n    tester = JudgeSystemIntegrationTest()\n    tester.run_all_tests()\nif __name__ == \"__main__\":\n    main()",
        "detail": "integration_test_judge_system",
        "documentation": {}
    },
    {
        "label": "JudgeSystemTester",
        "kind": 6,
        "importPath": "test_judge_system",
        "description": "test_judge_system",
        "peekOfCode": "class JudgeSystemTester:\n    def __init__(self):\n        self.backend_url = \"http://localhost:8000\"\n        self.frontend_url = \"http://localhost:3001\"\n        self.test_results = {\n            \"backend_tests\": {},\n            \"frontend_tests\": {},\n            \"integration_tests\": {},\n            \"total_passed\": 0,\n            \"total_failed\": 0",
        "detail": "test_judge_system",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "test_judge_system",
        "description": "test_judge_system",
        "peekOfCode": "def main():\n    \"\"\"Main function\"\"\"\n    tester = JudgeSystemTester()\n    if len(sys.argv) > 1:\n        test_type = sys.argv[1]\n        if test_type == \"backend\":\n            tester.run_backend_tests()\n        elif test_type == \"frontend\":\n            tester.run_frontend_tests()\n        elif test_type == \"integration\":",
        "detail": "test_judge_system",
        "documentation": {}
    },
    {
        "label": "run_command",
        "kind": 2,
        "importPath": "test_runner",
        "description": "test_runner",
        "peekOfCode": "def run_command(command, cwd=None, description=\"\"):\n    \"\"\"Run a command and return the result\"\"\"\n    print(f\"\\n{'='*60}\")\n    print(f\"Running: {description}\")\n    print(f\"Command: {command}\")\n    print(f\"Directory: {cwd or 'current'}\")\n    print(f\"{'='*60}\")\n    try:\n        result = subprocess.run(\n            command,",
        "detail": "test_runner",
        "documentation": {}
    },
    {
        "label": "check_dependencies",
        "kind": 2,
        "importPath": "test_runner",
        "description": "test_runner",
        "peekOfCode": "def check_dependencies():\n    \"\"\"Check if required dependencies are installed\"\"\"\n    print(\"Checking dependencies...\")\n    # Check Python dependencies\n    python_deps = [\n        \"pytest\",\n        \"httpx\",\n        \"sqlalchemy\",\n        \"fastapi\",\n    ]",
        "detail": "test_runner",
        "documentation": {}
    },
    {
        "label": "run_backend_tests",
        "kind": 2,
        "importPath": "test_runner",
        "description": "test_runner",
        "peekOfCode": "def run_backend_tests():\n    \"\"\"Run backend API tests\"\"\"\n    print(\"\\n🚀 Starting Backend Tests\")\n    backend_dir = \"onchain_fastapi\"\n    # Check if backend directory exists\n    if not os.path.exists(backend_dir):\n        print(f\"❌ Backend directory '{backend_dir}' not found\")\n        return False\n    # Run submission-specific tests\n    tests_passed = []",
        "detail": "test_runner",
        "documentation": {}
    },
    {
        "label": "run_frontend_tests",
        "kind": 2,
        "importPath": "test_runner",
        "description": "test_runner",
        "peekOfCode": "def run_frontend_tests():\n    \"\"\"Run frontend tests\"\"\"\n    print(\"\\n🎨 Starting Frontend Tests\")\n    frontend_dir = \"hub_nextjs\"\n    # Check if frontend directory exists\n    if not os.path.exists(frontend_dir):\n        print(f\"❌ Frontend directory '{frontend_dir}' not found\")\n        return False\n    # Run submission-specific tests\n    tests_passed = []",
        "detail": "test_runner",
        "documentation": {}
    },
    {
        "label": "run_api_integration_tests",
        "kind": 2,
        "importPath": "test_runner",
        "description": "test_runner",
        "peekOfCode": "def run_api_integration_tests():\n    \"\"\"Run API integration tests\"\"\"\n    print(\"\\n🔗 Starting API Integration Tests\")\n    # Start the backend server in test mode\n    backend_start = run_command(\n        \"python -m uvicorn app.main:app --host 0.0.0.0 --port 8001 &\",\n        cwd=\"onchain_fastapi\",\n        description=\"Starting Backend Server for Integration Tests\"\n    )\n    if not backend_start:",
        "detail": "test_runner",
        "documentation": {}
    },
    {
        "label": "run_e2e_tests",
        "kind": 2,
        "importPath": "test_runner",
        "description": "test_runner",
        "peekOfCode": "def run_e2e_tests():\n    \"\"\"Run end-to-end tests\"\"\"\n    print(\"\\n🎭 Starting End-to-End Tests\")\n    # Check if Playwright is available\n    try:\n        import playwright\n    except ImportError:\n        print(\"❌ Playwright not installed. Skipping E2E tests.\")\n        print(\"Install with: pip install playwright && playwright install\")\n        return True  # Don't fail the entire test suite",
        "detail": "test_runner",
        "documentation": {}
    },
    {
        "label": "generate_test_report",
        "kind": 2,
        "importPath": "test_runner",
        "description": "test_runner",
        "peekOfCode": "def generate_test_report():\n    \"\"\"Generate a comprehensive test report\"\"\"\n    print(\"\\n📊 Generating Test Report\")\n    report = \"\"\"\n# Submission System Test Report\n## Test Coverage Areas\n### Backend Tests\n- ✅ Project submission API endpoints\n- ✅ Module submission API endpoints  \n- ✅ Submittal submission API endpoints",
        "detail": "test_runner",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "test_runner",
        "description": "test_runner",
        "peekOfCode": "def main():\n    \"\"\"Main test runner function\"\"\"\n    print(\"🧪 Submission System Test Runner\")\n    print(\"=\" * 60)\n    # Check dependencies\n    if not check_dependencies():\n        print(\"\\n❌ Dependency check failed. Please install missing dependencies.\")\n        sys.exit(1)\n    # Track test results\n    results = {}",
        "detail": "test_runner",
        "documentation": {}
    }
]